{
	"id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
	"name": "Bizrate Rewards API (V 1.9.2)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "f7dd10ef-e4e3-7032-2074-c8b60b210566",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"c6650a80-b995-7ee9-712c-cbd21f5e6677",
				"df45ed47-9bee-558b-eea0-60485096bef1",
				"6e30b95c-ebd8-99ce-ab66-b4246e9f33e1",
				"a06a1663-dcac-e010-e395-c5aaa9a80c91",
				"fbd0329e-392b-6067-a5fc-54cdabc063d4",
				"96a8ca96-39e6-fc90-f5cd-f191b5ed3c4b",
				"0f1d89c7-a1aa-18f3-56e4-b4d5096d0c96",
				"d5d1118c-0cfb-3aae-ce56-3d1809146f67",
				"79cb0c84-9a3a-245d-3864-9cf99881f89d",
				"ae371ab7-b490-fd39-962a-47b6bd849a72",
				"7be7a67a-0682-85a9-a668-1575640ed7eb",
				"5ffac295-746d-0a5e-486c-a942da48a980",
				"d29acdf6-fda4-0d21-eff6-6350ce64224a",
				"22e19d72-dc94-6ae8-9c5f-483b565f2ab1",
				"f65c2fc7-3549-e883-c8f2-c3f3dbb24864",
				"dc2d07aa-039f-0a6e-9043-51a82de00cb7",
				"683f0f5e-6b12-f1f6-5928-81c19f75a5f8",
				"0ce0ef88-1ffa-5b52-b208-c88f786c7d95",
				"30946107-a85f-6d83-0e9c-0d29e1a389a8",
				"9bef91c6-f1fa-7d86-d626-8adc0d721930",
				"7d1040f6-501c-25e7-894c-d115bacbfebf"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "38e4cb74-337e-cc1d-b0a0-dce745d99604",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"a888a687-a65f-a4a2-3761-7ef9b43a6fda",
				"8ee8e993-b67a-04ae-c8f8-2bd964886e80"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "a0efa9f7-be68-6f72-435e-c50d4c1e1f1a",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"1ad1d016-74d4-6457-0786-fb2fca437fe4"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "8e1d0704-42d1-ddbc-c129-729ea908f0f8",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"231e6ade-a90d-4efc-06ca-3c87ede086e6"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "8910872b-fc2f-5b61-0f0f-ab96c2985c84",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"eb6a67f1-d052-0bd4-4668-b3f14aeceae9"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "0e41ff62-8c07-5b44-f5be-a4bf47ad47a9",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"0ac18394-048d-a6c9-a19e-d3c64f8a238f",
				"83940ba5-4319-adf2-fc71-8e68e6239c37",
				"ddd32d20-60c7-0bec-c208-92b74a03c7a7",
				"5ae1c0ac-eae8-94b1-8aae-53ac220fd377"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "145654ab-2912-a907-964e-180493122457",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"4c6e18ed-98dd-23d1-b3dc-7a629397d68d",
				"cfcd9c3d-0961-b8aa-d7a0-998dc3e8c7ee",
				"8d417b6d-fdb2-d070-75eb-265203adece1",
				"31fb260b-687a-4ae3-5c48-6b8a0aaf8ec8",
				"baba588c-8787-3e5e-a5ad-8f7e49b8248a",
				"e76aa3b1-fbb8-a618-3390-b592feebfced",
				"89872a42-5a32-791c-cad8-5a21f7fc8f13",
				"c5b2de31-1571-59af-6918-d0fcd131828c",
				"dd41f6b3-2fc8-7bcf-da17-21f1b78ebc5a",
				"3d93b9c4-7b28-0e4b-c81c-a7f6a6c19b23",
				"29e33aee-71ca-3102-ba2a-8787593911c7",
				"0863bed1-261c-3c87-f67e-6eca1a9c3583",
				"7556f02b-14c1-f301-b623-17e4ce140b2a",
				"f8f4b2d2-86b9-aab0-9cb0-a295c521e6e8"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "8fd8e8cf-ca84-5cc4-abef-543768ef87dd",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"80be48b6-259f-b853-f003-25ff4f9a5aa0",
				"68ea3b3a-6bc9-56a9-9045-f37df56698d0",
				"8744f693-4a60-7916-1fea-d3dc394f743b",
				"6f0c029e-7271-1346-8b90-5d2d7dbb41fc"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "ebd47278-4071-b60c-92e2-1b313d77fa9d",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"a4eae96d-4834-7e90-d5bd-a80757cf832c",
				"b783cbd0-a5dc-a49a-03cd-dd5f19ddc7dd",
				"db3747d8-2b1f-1516-1f51-a09b6d3723d1",
				"9c47a118-f34e-0bd5-9676-edf566aada83",
				"4c896dcf-de00-8235-add9-2d10ecb4f9bd",
				"b131a45d-3eb5-9cfe-fa64-1a2872133d5c",
				"07b91c06-b0b4-2d0d-1a33-404f43279673"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "ae5ee556-3eec-d080-a84f-254e89d2ae7f",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"e31ab41a-bda6-12e0-906d-e20730bddd65",
				"ddebdc80-fc0d-183f-ea6a-bc372a1fc71a",
				"af692908-01b2-71c6-078b-5f07c115cf2a",
				"fe362e1c-bdf8-7d3f-3f55-96fb9346959d",
				"230aeefa-150f-6831-30d9-6fe893201689",
				"a6de94fe-a70c-3825-6bdb-498cffd4f953",
				"bd2b3e4b-7a45-78c9-fe01-8ba83811e3ba",
				"0700465a-d899-fb18-afe6-bde83a14a0d7",
				"0c587947-89e7-8c9f-0c42-770c728740c2",
				"69af5d0f-3385-9ac0-0cac-a47b52561234",
				"64df63f9-26be-b525-fe8e-66d9cd46745f",
				"775447e0-4314-5e5e-52d8-c2c6ebde42f9",
				"a7dac586-b1c1-5d45-228d-803f5e93f872",
				"5717efbe-0f99-cbb3-7d34-3c62e08e61a0",
				"f06383e6-d2f6-0dfd-6ac0-6259b59ccc16"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "da7cf949-4f79-8093-8707-126190d43826",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"b52a8d0a-8823-37d7-edd6-c550e9ce00cc",
				"4fb09ecb-d326-4a03-d961-020ad81af7bb",
				"04bae7a1-8e7a-d425-6d18-aaadc2590732",
				"e375005b-47ae-60dd-20ae-b96ab08983e0",
				"0caddd71-100a-dd38-6279-a2dab0c37297",
				"fede4934-f276-86d7-fd16-e88c79c843ea",
				"fee567fa-4f8c-92c3-77ac-9c48f7dcd386",
				"dc9a2ae2-75cd-b7e2-ef84-354e7d69a7c8",
				"1359e92b-f7cc-81cd-1842-9c120268a3a0"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "be159e96-5cbf-3fb3-6a6e-e0caf0139801"
		},
		{
			"id": "ac2c125a-ae0a-8958-43b1-a1d76701b4f4",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"b4c2ee22-d056-4a77-c273-13e6a6532f23",
				"334bac3e-04c0-b9e3-f2d8-9bf3b7397b65",
				"4d585203-2491-72de-1973-81048eb8c68e",
				"99c37ffa-83b9-52b3-9f27-2382f9a56caa"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "952edf8c-7f32-90fc-5746-cbf746243395",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"dc328057-2bf6-4b03-1962-c8bf830d14d0",
				"20ffec94-28ab-7c90-f110-17240bca532a",
				"6ccf8573-e759-e2f4-7c7d-ea2622934d95",
				"1abffb95-df61-c6e4-0b6c-a72092e4a3f2",
				"b048ae31-6f8d-ac82-ca8c-7f9dfb2feb4d",
				"619628a3-22e3-1ab8-d4a9-9df7a4a37b7f"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"bc03b2c7-6f3b-1e89-b378-f5f6251363d5",
				"56136526-f202-a4af-dfc6-7862c3ac3d06",
				"96bf1d26-13cd-981b-c30c-410023a99a80",
				"6b584949-90e6-3afd-ae93-456458ff0aa9",
				"7de07cc6-e3b5-7819-af63-8f9459d8d250",
				"bd1fe7cf-68f9-70c4-2919-9dc46d86defb"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "8ea72d8e-8e43-7f52-485f-35d98d275f92",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"ea708a48-5b6f-c9bd-765d-81760544fed6",
				"03902a13-4725-bb79-b790-73733fea924f",
				"882200ab-30ee-1a73-dce0-2f864c58eae3",
				"f043c3dd-d90f-9454-efcf-cdc02a798e99",
				"68f26ef6-0e93-93b1-e010-cf81ad1282d2",
				"bc89b23e-be82-98e5-84cf-d5023765a600",
				"5ffbe012-4e23-62af-56b1-c1345431c835",
				"6d3881e0-2c4c-f463-20b9-e8bae4ec256e",
				"f0875edd-7322-deb5-4f72-8c411fc9c4f4",
				"a953920e-c499-77ec-457e-7122fbba250b"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "23910899-9187-745f-22db-fc1e927a91c8",
			"name": "TC0015 - Test Create New Bizrate-Facebook User",
			"description": "",
			"write": true,
			"order": [
				"effc1d97-42e8-37d4-0780-485c4198d338",
				"4b9ec3f0-e5ed-cfbd-3077-964996b3dc42",
				"00832864-b31c-a924-b6be-a82c7d2e8c08",
				"c6a6d842-2f02-fa5b-8208-54503e262f86",
				"05667bf0-e29c-2920-aa18-b1a0418b5c98",
				"e730b1a6-f8ee-3b23-3f86-ffd956b79305"
			],
			"collection": "0a31db07-09cf-0d34-e70b-4c5bf0aafa0d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "409dba90-9ba6-78a7-ac94-c0c9fbd87bd9"
		},
		{
			"id": "7c3cf1e3-23b7-a52e-9797-9a532b5e80d9",
			"name": "TC0016 - Test Create New Bizrate-Facebook User  Validations",
			"description": "",
			"write": true,
			"order": [
				"155c5fae-b6a4-6cca-2d0b-7aa8b0947956",
				"99b5adb0-ebe9-43e6-51bb-5308f3ec6e3f"
			],
			"collection": "7cc73dc2-b7b0-1e9d-47ff-b1fe02f2a0f4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "bf2c505a-5744-2d53-43ac-2860abde987f",
			"name": "TC0017 - Test Bizrate-Facebook Login",
			"description": "",
			"write": true,
			"order": [
				"2db956f5-67da-5398-97e2-261beb634105",
				"8ffbbd32-1f18-205d-5e84-bd9f0e52c767",
				"241b1fb6-6e23-edc3-9a16-7add635a6e79",
				"51a3aede-edd9-b959-3bad-25541283d08f",
				"d79c5bc0-27d1-5b0c-721c-c914fdfc4199",
				"ef067a02-3a9e-8575-6666-088bc9e6a72d",
				"1de2b589-7f16-d165-ba5c-75231a4f082c"
			],
			"collection": "c3567692-1479-029d-1318-c508deb005d4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "6fdad5a0-a985-6feb-879d-5240fccf5192",
			"name": "TC0018 - Test Bizrate-Facebook Login - Validations",
			"description": "",
			"write": true,
			"order": [
				"881ee7d1-e740-1d46-f7b3-68f7e8475562",
				"7080912d-ce49-c14e-9c44-f26636d1f67e",
				"148acfeb-9ea0-21f3-340e-3b5b716c54bc"
			],
			"collection": "be159e96-5cbf-3fb3-6a6e-e0caf0139801",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115",
			"name": "TC0019 - Test Save User Device",
			"description": "test the same user with 2 devices",
			"write": true,
			"order": [
				"1c4528c3-dd91-e584-f3ac-fb0c6a314c1f",
				"cbc46069-5b2d-95dc-a59d-40b01930046c",
				"99aec129-5fe5-078a-13ae-0ad777cc44a3",
				"ab38ec74-80f2-d509-2357-33fed4ddf343",
				"d1d9a53b-5b15-0e7b-f3e9-881993d8bc41",
				"c5581a76-d8ff-fed9-12f0-093dab6c32f2"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "42e16631-6174-b3f5-6c15-6088c82c2576",
			"name": "TC0020 - Test Save User Device - Validations",
			"description": "test validations: negative test cases",
			"write": true,
			"order": [
				"110d1038-4cc1-c564-3e15-a1545b2c614a",
				"faf1d85a-d7b5-694b-fb92-21b3b2205305",
				"d288e28d-2081-7bc2-424d-ad22c2d93edf",
				"3b272b99-a204-c1b6-2cc6-965fa323d468",
				"3b4accad-50a5-fd35-60f5-ecef435ee793",
				"d788edd1-9119-702b-1c65-f042502b7693"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342",
			"name": "TC0021 - Test Save User Device - Transfer Device",
			"description": "Test cases for validating user's device.\nInclude test case with 2 users share 1 device",
			"write": true,
			"order": [
				"5443aca9-7dcc-0528-49cc-7f13e0772017",
				"3f254dea-87eb-be69-ac82-e03e7e19426f",
				"1a0b7752-b866-40a7-a47d-ed7ff3d27192",
				"2b9b382f-0a31-d683-0117-fce68f208553",
				"839d9ea5-6d1b-6f3f-2516-120fe6a6844b",
				"1269afe8-0ac0-4ee5-875b-20ce91c16ff4",
				"f56e8efd-e23b-7eb0-cddd-05d0980324e3",
				"9225ec25-be1a-0c23-fd57-a8b814c225c7",
				"20ad6569-521b-c580-f396-e4c98761f09f"
			],
			"collection": "6f04cf03-e3d4-160b-b968-20c0c58272de",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"name": "TC0022 - Test Reset Password",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email\n- Follow the link to activate password\n- Use the access token to login \n- Use the old password to be denied access\n- Use the new password to confirm the password reset worked.",
			"write": true,
			"order": [
				"3229fa9f-381e-95d7-3bd2-49759ebb6a8f",
				"ecbc2785-9a47-bf61-ec1f-23f885860d79",
				"633d7fe1-93fb-5b08-7626-415f3153f5a6",
				"ccce916c-3cc0-c282-3092-003f626fa5c3",
				"5fe5d497-bd43-df46-4825-5b5303836d6a",
				"30ffda74-a352-d555-1574-2a89c2c59a59",
				"e191ccbd-e544-538b-26cd-d112cc687e34",
				"91b3ccae-aed9-af8d-2cb0-83ec43b32d35",
				"75336e84-b4f6-241b-1763-2879806d07f8",
				"3afbfd4f-822b-f62a-65db-e9d346af7986",
				"71bad7d1-0117-fd42-dea8-e1dc71c91881",
				"d5ce5476-c986-52d0-acd1-7e9697ff2c65"
			],
			"collection": "1810e467-54e0-f716-46cd-be101e5adaf6",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "7093a13a-41e4-d453-ffca-5f35ad259e17",
			"name": "TC0023 - Test Reset Password - Validations",
			"description": "",
			"write": true,
			"order": [
				"02fd98be-9676-14b9-a6e3-cd3d0c1fe7c9",
				"336df822-f8c1-ed31-957d-aaf72942f565",
				"2105aa3d-dd4b-c70f-df53-de6d9e466345",
				"cce34594-95f6-c6d8-aa11-f002dba5c0ed",
				"2480ea67-ec4c-9124-767a-6c5a4b440d07",
				"97b73e37-ef5f-e5ef-688c-736ab04f7bb2"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "b7fc31ec-2e06-7850-9f09-ecf787e2704d"
		},
		{
			"id": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"name": "TC0024 - Test Reset Password with Multiple Requests",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email and save as link1\n- Reset password again\n- Verify the reset password email again\n- Find the link in the reset password email and save as link2\n- Follow the link to activate password in link1 and it should fail\n- Follow the link to activate password in link2 and it should succeed\n- Use the access token to login \n- Use the password used in first attempt to be denied access\n- Use the password used in second attempt and it should work.",
			"write": true,
			"order": [
				"3e5404cd-2f3c-b51a-fa2a-2bded23769b3",
				"3b38e2af-517c-29a5-1951-124331c12bf4",
				"a2010ae0-18d2-193a-b9c0-5770653a72fa",
				"1d893c36-ab54-a6a8-bb52-1715dc8fe5cb",
				"aa94e650-054d-9473-3cdf-4aa95b5dc480",
				"c1f727b7-4fff-247f-7e94-e5a21a6eae71",
				"d527634e-3a28-0882-43dc-52dfa87daa82",
				"0f698222-3ad9-c30b-e0ea-d6348038a2fe",
				"e1d3eaa7-bbe2-c7aa-7abc-5bb64df869cb",
				"00cc2ca0-ecf8-aed6-e525-c3ff309cc0f4",
				"f6539097-aea6-971b-7fa6-66e63df2e64b",
				"260e32e8-5a28-bb31-eddb-4999b72e5e03",
				"d9d1fa66-b7c0-b963-ed17-5ce2f6567681",
				"ef1dbabb-a022-4dfb-4fe8-db241773c1b4",
				"764b7774-2c63-4567-0878-86a8ce84f9c3"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "96afd108-2ae4-ff7a-2e38-725984f53ebb",
			"name": "TC0025 - Test Get Featured Giftcards",
			"description": "",
			"write": true,
			"order": [
				"4c0d4e45-9492-d844-ae17-53618993661a",
				"fd66d243-f080-90d8-8efa-f3458cfb78c7",
				"276de611-8c26-db9f-fee0-00ab5199e5ed",
				"4c476722-b198-fbaf-300d-78d4f050439d"
			],
			"collection": "b3fdc6f9-c682-0e99-525b-491eb58c5e45",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.2)",
			"collection_owner": "66688",
			"collection_id": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "00832864-b31c-a924-b6be-a82c7d2e8c08",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0015 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "23910899-9187-745f-22db-fc1e927a91c8"
		},
		{
			"id": "00cc2ca0-ecf8-aed6-e525-c3ff309cc0f4",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_RESET_REJECTED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438731216718,
			"name": "TC0024 - Follow Reset Password Link 1",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "02fd98be-9676-14b9-a6e3-cd3d0c1fe7c9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0023 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17",
			"isFromCollection": true
		},
		{
			"id": "03902a13-4725-bb79-b790-73733fea924f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595254911,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "04bae7a1-8e7a-d425-6d18-aaadc2590732",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "05667bf0-e29c-2920-aa18-b1a0418b5c98",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589899772,
			"name": "TC0015 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "23910899-9187-745f-22db-fc1e927a91c8"
		},
		{
			"id": "0700465a-d899-fb18-afe6-bde83a14a0d7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "07b91c06-b0b4-2d0d-1a33-404f43279673",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d",
			"isFromCollection": true
		},
		{
			"id": "0863bed1-261c-3c87-f67e-6eca1a9c3583",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_OR_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589156942,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "0ac18394-048d-a6c9-a19e-d3c64f8a238f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "0e41ff62-8c07-5b44-f5be-a4bf47ad47a9"
		},
		{
			"id": "0c587947-89e7-8c9f-0c42-770c728740c2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582289288,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"F\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "0caddd71-100a-dd38-6279-a2dab0c37297",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "0ce0ef88-1ffa-5b52-b208-c88f786c7d95",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588722769,
			"name": "Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "0f1d89c7-a1aa-18f3-56e4-b4d5096d0c96",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601868169,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "0f698222-3ad9-c30b-e0ea-d6348038a2fe",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email 2",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "110d1038-4cc1-c564-3e15-a1545b2c614a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0020 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576"
		},
		{
			"id": "1269afe8-0ac0-4ee5-875b-20ce91c16ff4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198446741,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "1359e92b-f7cc-81cd-1842-9c120268a3a0",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "da7cf949-4f79-8093-8707-126190d43826",
			"isFromCollection": true
		},
		{
			"id": "148acfeb-9ea0-21f3-340e-3b5b716c54bc",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB access token test\"] = true;\n}\nelse {\n  tests[\"Invalid FB access token test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437695889495,
			"name": "TC0018 - Login with Bizrate-Facebook User - Invalid Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"invalid_fb_access_token1\"\n}",
			"folder": "6fdad5a0-a985-6feb-879d-5240fccf5192"
		},
		{
			"id": "155c5fae-b6a4-6cca-2d0b-7aa8b0947956",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0016 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "7c3cf1e3-23b7-a52e-9797-9a532b5e80d9",
			"isFromCollection": true
		},
		{
			"id": "1a0b7752-b866-40a7-a47d-ed7ff3d27192",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438196832548,
			"name": "TC0021 - Save User Device",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "1abffb95-df61-c6e4-0b6c-a72092e4a3f2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073140763,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395"
		},
		{
			"id": "1ad1d016-74d4-6457-0786-fb2fca437fe4",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "a0efa9f7-be68-6f72-435e-c50d4c1e1f1a"
		},
		{
			"id": "1c4528c3-dd91-e584-f3ac-fb0c6a314c1f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0019 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115"
		},
		{
			"id": "1d893c36-ab54-a6a8-bb52-1715dc8fe5cb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885922776,
			"name": "TC0024 - Reset Password 1",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New1Abc123456!?\"\n}",
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "1de2b589-7f16-d165-ba5c-75231a4f082c",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516536928,
			"name": "TC0017 - Delete Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f",
			"isFromCollection": true
		},
		{
			"id": "20ad6569-521b-c580-f396-e4c98761f09f",
			"headers": "Authorization: Bearer {{g_access_token2}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126629309,
			"name": "TC0021 - Delete 2nd User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "20ffec94-28ab-7c90-f110-17240bca532a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595223607,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395"
		},
		{
			"id": "2105aa3d-dd4b-c70f-df53-de6d9e466345",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Password Test\"] = true;\n}\nelse {\n tests[\"Missing Password Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372387059,
			"name": "TC0023 - Reset Password - Missing Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\"\n}",
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17"
		},
		{
			"id": "22e19d72-dc94-6ae8-9c5f-483b565f2ab1",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032275182,
			"name": "Save User Device",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "230aeefa-150f-6831-30d9-6fe893201689",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582331786,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "231e6ade-a90d-4efc-06ca-3c87ede086e6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658515448,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8e1d0704-42d1-ddbc-c129-729ea908f0f8"
		},
		{
			"id": "241b1fb6-6e23-edc3-9a16-7add635a6e79",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0017 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f"
		},
		{
			"id": "2480ea67-ec4c-9124-767a-6c5a4b440d07",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_NOT_REGISTERED\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372407099,
			"name": "TC0023 - Reset Password - Email Not Registered",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email@.test.com\",\n    \"password\": \"Abc123!?\"\n}",
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17"
		},
		{
			"id": "260e32e8-5a28-bb31-eddb-4999b72e5e03",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0024 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "276de611-8c26-db9f-fee0-00ab5199e5ed",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}giftcards/featured",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 8) {\n  tests[\"Test get featured giftcards\"] = true;\n}\nelse {\n    tests[\"Test get featured giftcards\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438730368482,
			"name": "TC0025 - Get Featured Giftcards",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "96afd108-2ae4-ff7a-2e38-725984f53ebb"
		},
		{
			"id": "29e33aee-71ca-3102-ba2a-8787593911c7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588882333,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "2b9b382f-0a31-d683-0117-fce68f208553",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email2\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token2\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438122944798,
			"name": "TC0021 - Create 2nd New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email2}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "2db956f5-67da-5398-97e2-261beb634105",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516520957,
			"name": "TC0017 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f",
			"isFromCollection": true
		},
		{
			"id": "30946107-a85f-6d83-0e9c-0d29e1a389a8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437684537023,
			"name": "Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566",
			"isFromCollection": true
		},
		{
			"id": "30ffda74-a352-d555-1574-2a89c2c59a59",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438651505885,
			"name": "TC0022 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "31fb260b-687a-4ae3-5c48-6b8a0aaf8ec8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588839342,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "3229fa9f-381e-95d7-3bd2-49759ebb6a8f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0022 - API Info",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "334bac3e-04c0-b9e3-f2d8-9bf3b7397b65",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588917203,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "ac2c125a-ae0a-8958-43b1-a1d76701b4f4"
		},
		{
			"id": "336df822-f8c1-ed31-957d-aaf72942f565",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372093977,
			"name": "TC0023 - Reset Password - Empty",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17"
		},
		{
			"id": "3afbfd4f-822b-f62a-65db-e9d346af7986",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "NewAbc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728788941,
			"name": "TC0022 - Login User with New Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64"
		},
		{
			"id": "3b272b99-a204-c1b6-2cc6-965fa323d468",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device UID Test\"] = true;\n}\nelse {\n tests[\"Missing Device UID Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032442495,
			"name": "TC0020 - Save User Device - Missing Device UID",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_token\": \"APNS_DEVICE_TOKEN\"\n}",
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576"
		},
		{
			"id": "3b38e2af-517c-29a5-1951-124331c12bf4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0024 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "3b4accad-50a5-fd35-60f5-ecef435ee793",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device Token Test\"] = true;\n}\nelse {\n tests[\"Missing Device Token Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032468134,
			"name": "TC0020 - Save User Device - Missing Device Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\"\n}",
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576"
		},
		{
			"id": "3d93b9c4-7b28-0e4b-c81c-a7f6a6c19b23",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588875516,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "3e5404cd-2f3c-b51a-fa2a-2bded23769b3",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0024 - API Info",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "3f254dea-87eb-be69-ac82-e03e7e19426f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0021 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "4b9ec3f0-e5ed-cfbd-3077-964996b3dc42",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "TC0015 - Create New Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "23910899-9187-745f-22db-fc1e927a91c8",
			"isFromCollection": true
		},
		{
			"id": "4c0d4e45-9492-d844-ae17-53618993661a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0025 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "96afd108-2ae4-ff7a-2e38-725984f53ebb"
		},
		{
			"id": "4c476722-b198-fbaf-300d-78d4f050439d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0025 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "96afd108-2ae4-ff7a-2e38-725984f53ebb",
			"isFromCollection": true
		},
		{
			"id": "4c6e18ed-98dd-23d1-b3dc-7a629397d68d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589286351,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "4c896dcf-de00-8235-add9-2d10ecb4f9bd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "4d585203-2491-72de-1973-81048eb8c68e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "ac2c125a-ae0a-8958-43b1-a1d76701b4f4"
		},
		{
			"id": "4fb09ecb-d326-4a03-d961-020ad81af7bb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595023918,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "51a3aede-edd9-b959-3bad-25541283d08f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588934907,
			"name": "TC0017 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f"
		},
		{
			"id": "5443aca9-7dcc-0528-49cc-7f13e0772017",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0021 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "56136526-f202-a4af-dfc6-7862c3ac3d06",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595240128,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1"
		},
		{
			"id": "5717efbe-0f99-cbb3-7d34-3c62e08e61a0",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171570749,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "5ae1c0ac-eae8-94b1-8aae-53ac220fd377",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "0e41ff62-8c07-5b44-f5be-a4bf47ad47a9",
			"isFromCollection": true
		},
		{
			"id": "5fe5d497-bd43-df46-4825-5b5303836d6a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0022 - Verify Reset Password Email",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "5ffac295-746d-0a5e-486c-a942da48a980",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "5ffbe012-4e23-62af-56b1-c1345431c835",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "619628a3-22e3-1ab8-d4a9-9df7a4a37b7f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395",
			"isFromCollection": true
		},
		{
			"id": "633d7fe1-93fb-5b08-7626-415f3153f5a6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0022 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "64df63f9-26be-b525-fe8e-66d9cd46745f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582269052,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "683f0f5e-6b12-f1f6-5928-81c19f75a5f8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "Create New Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "68ea3b3a-6bc9-56a9-9045-f37df56698d0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595153291,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "8fd8e8cf-ca84-5cc4-abef-543768ef87dd"
		},
		{
			"id": "68f26ef6-0e93-93b1-e010-cf81ad1282d2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "69af5d0f-3385-9ac0-0cac-a47b52561234",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "6b584949-90e6-3afd-ae93-456458ff0aa9",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007791106,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1"
		},
		{
			"id": "6ccf8573-e759-e2f4-7c7d-ea2622934d95",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073135571,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395"
		},
		{
			"id": "6d3881e0-2c4c-f463-20b9-e8bae4ec256e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "6e30b95c-ebd8-99ce-ab66-b4246e9f33e1",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "6f0c029e-7271-1346-8b90-5d2d7dbb41fc",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8fd8e8cf-ca84-5cc4-abef-543768ef87dd"
		},
		{
			"id": "7080912d-ce49-c14e-9c44-f26636d1f67e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"ACCESS_TOKEN_REQUIRED\") {\n  tests[\"Empty FB login test\"] = true;\n}\nelse {\n  tests[\"Empty FB login test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437691833373,
			"name": "TC0018 - Login with Bizrate-Facebook User - Empty",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "6fdad5a0-a985-6feb-879d-5240fccf5192"
		},
		{
			"id": "71bad7d1-0117-fd42-dea8-e1dc71c91881",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_ALREADY_CONFIRMED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729700250,
			"name": "TC0022 - Follow Reset Password Link Again",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64"
		},
		{
			"id": "75336e84-b4f6-241b-1763-2879806d07f8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "Abc123!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728720255,
			"name": "TC0022 - Login User with Old Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64"
		},
		{
			"id": "7556f02b-14c1-f301-b623-17e4ce140b2a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588899204,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "764b7774-2c63-4567-0878-86a8ce84f9c3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0024 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"isFromCollection": true
		},
		{
			"id": "775447e0-4314-5e5e-52d8-c2c6ebde42f9",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916719896,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "79cb0c84-9a3a-245d-3864-9cf99881f89d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "7be7a67a-0682-85a9-a668-1575640ed7eb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "7d1040f6-501c-25e7-894c-d115bacbfebf",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589888750,
			"name": "Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "7de07cc6-e3b5-7819-af63-8f9459d8d250",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1"
		},
		{
			"id": "80be48b6-259f-b853-f003-25ff4f9a5aa0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595147291,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8fd8e8cf-ca84-5cc4-abef-543768ef87dd"
		},
		{
			"id": "83940ba5-4319-adf2-fc71-8e68e6239c37",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0e41ff62-8c07-5b44-f5be-a4bf47ad47a9"
		},
		{
			"id": "839d9ea5-6d1b-6f3f-2516-120fe6a6844b",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198112410,
			"name": "TC0021 - Save User Device - Duplicate Device UID",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN2\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "8744f693-4a60-7916-1fea-d3dc394f743b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601889389,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8fd8e8cf-ca84-5cc4-abef-543768ef87dd"
		},
		{
			"id": "881ee7d1-e740-1d46-f7b3-68f7e8475562",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0018 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6fdad5a0-a985-6feb-879d-5240fccf5192"
		},
		{
			"id": "882200ab-30ee-1a73-dce0-2f864c58eae3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0012 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "89872a42-5a32-791c-cad8-5a21f7fc8f13",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588857620,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "8d417b6d-fdb2-d070-75eb-265203adece1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Gender Validation\"] = true;\n}\nelse {\n  tests[\"Gender Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589113419,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "8ee8e993-b67a-04ae-c8f8-2bd964886e80",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437163945635,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "38e4cb74-337e-cc1d-b0a0-dce745d99604"
		},
		{
			"id": "8ffbbd32-1f18-205d-5e84-bd9f0e52c767",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516530203,
			"name": "TC0017 - Create New Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f",
			"isFromCollection": true
		},
		{
			"id": "91b3ccae-aed9-af8d-2cb0-83ec43b32d35",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0022 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "9225ec25-be1a-0c23-fd57-a8b814c225c7",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0021 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342",
			"isFromCollection": true
		},
		{
			"id": "96a8ca96-39e6-fc90-f5cd-f191b5ed3c4b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "96bf1d26-13cd-981b-c30c-410023a99a80",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007520567,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1"
		},
		{
			"id": "97b73e37-ef5f-e5ef-688c-736ab04f7bb2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors, \"EMAIL_INVALID_FORMAT\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors, \"PASSWORD_INVALID\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372500480,
			"name": "TC0023 - Reset Password - Invalid Email & Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email.test.com\",\n    \"password\": \"Abc\"\n}",
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17"
		},
		{
			"id": "99aec129-5fe5-078a-13ae-0ad777cc44a3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPAD Air\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438205980205,
			"name": "TC0019 - Save User Device",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa212\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPAD Air\"\n}",
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115"
		},
		{
			"id": "99b5adb0-ebe9-43e6-51bb-5308f3ec6e3f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB Access Token Test\"] = true;\n}\nelse {\n  tests[\"Invalid FB Access Token Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437593820527,
			"name": "TC0016 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"invalid_fb_access_token1\"\n    }\n}",
			"folder": "7c3cf1e3-23b7-a52e-9797-9a532b5e80d9"
		},
		{
			"id": "99c37ffa-83b9-52b3-9f27-2382f9a56caa",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ac2c125a-ae0a-8958-43b1-a1d76701b4f4",
			"isFromCollection": true
		},
		{
			"id": "9bef91c6-f1fa-7d86-d626-8adc0d721930",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "Delete Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "9c47a118-f34e-0bd5-9676-edf566aada83",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601902635,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "a06a1663-dcac-e010-e395-c5aaa9a80c91",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "a2010ae0-18d2-193a-b9c0-5770653a72fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0024 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "a4eae96d-4834-7e90-d5bd-a80757cf832c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595162450,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "a6de94fe-a70c-3825-6bdb-498cffd4f953",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "a7dac586-b1c1-5d45-228d-803f5e93f872",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582246233,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "a888a687-a65f-a4a2-3761-7ef9b43a6fda",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "38e4cb74-337e-cc1d-b0a0-dce745d99604",
			"isFromCollection": true
		},
		{
			"id": "a953920e-c499-77ec-457e-7122fbba250b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92",
			"isFromCollection": true
		},
		{
			"id": "aa94e650-054d-9473-3cdf-4aa95b5dc480",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "ab38ec74-80f2-d509-2357-33fed4ddf343",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0019 - Save User second device",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115"
		},
		{
			"id": "ae371ab7-b490-fd39-962a-47b6bd849a72",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "af692908-01b2-71c6-078b-5f07c115cf2a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "b048ae31-6f8d-ac82-ca8c-7f9dfb2feb4d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395"
		},
		{
			"id": "b131a45d-3eb5-9cfe-fa64-1a2872133d5c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "b4c2ee22-d056-4a77-c273-13e6a6532f23",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595205372,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ac2c125a-ae0a-8958-43b1-a1d76701b4f4"
		},
		{
			"id": "b52a8d0a-8823-37d7-edd6-c550e9ce00cc",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594912508,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "b783cbd0-a5dc-a49a-03cd-dd5f19ddc7dd",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595169640,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "baba588c-8787-3e5e-a5ad-8f7e49b8248a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588845893,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{TEST_USER1_EMAIL}}\",\n    \"password\": \"{{TEST_USER1_PASSWORD}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "bc03b2c7-6f3b-1e89-b378-f5f6251363d5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595234011,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1"
		},
		{
			"id": "bc89b23e-be82-98e5-84cf-d5023765a600",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "bd1fe7cf-68f9-70c4-2919-9dc46d86defb",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "fb52776c-1d8c-1b03-756b-bd68f2fdcad1",
			"isFromCollection": true
		},
		{
			"id": "bd2b3e4b-7a45-78c9-fe01-8ba83811e3ba",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582304893,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "c1f727b7-4fff-247f-7e94-e5a21a6eae71",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link1\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730152060,
			"name": "TC0024 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "c5581a76-d8ff-fed9-12f0-093dab6c32f2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0019 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115",
			"isFromCollection": true
		},
		{
			"id": "c5b2de31-1571-59af-6918-d0fcd131828c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588864021,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "c6650a80-b995-7ee9-712c-cbd21f5e6677",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588650405,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "c6a6d842-2f02-fa5b-8208-54503e262f86",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588934907,
			"name": "TC0015 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "23910899-9187-745f-22db-fc1e927a91c8"
		},
		{
			"id": "cbc46069-5b2d-95dc-a59d-40b01930046c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0019 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115"
		},
		{
			"id": "ccce916c-3cc0-c282-3092-003f626fa5c3",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438884235559,
			"name": "TC0022 - Reset Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"NewAbc123456!?\"\n}",
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64"
		},
		{
			"id": "cce34594-95f6-c6d8-aa11-f002dba5c0ed",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Email Test\"] = true;\n}\nelse {\n tests[\"Missing Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372366012,
			"name": "TC0023 - Reset Password - Missing Email",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"password\": \"Abc123456!?\"\n}",
			"folder": "7093a13a-41e4-d453-ffca-5f35ad259e17"
		},
		{
			"id": "cfcd9c3d-0961-b8aa-d7a0-998dc3e8c7ee",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588825223,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "d1d9a53b-5b15-0e7b-f3e9-881993d8bc41",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438206048739,
			"name": "TC0019 - Get User Devices",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "3e49cfcf-f614-6dc3-bf7d-93e8325e8115"
		},
		{
			"id": "d288e28d-2081-7bc2-424d-ad22c2d93edf",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438030454158,
			"name": "TC0020 - Save User Device - Empty",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576"
		},
		{
			"id": "d29acdf6-fda4-0d21-eff6-6350ce64224a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "d527634e-3a28-0882-43dc-52dfa87daa82",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885930559,
			"name": "TC0024 - Reset Password 2",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New2Abc123456!?\"\n}",
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "d5ce5476-c986-52d0-acd1-7e9697ff2c65",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0023 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"isFromCollection": true
		},
		{
			"id": "d5d1118c-0cfb-3aae-ce56-3d1809146f67",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "d788edd1-9119-702b-1c65-f042502b7693",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0020 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576",
			"isFromCollection": true
		},
		{
			"id": "d79c5bc0-27d1-5b0c-721c-c914fdfc4199",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437684537023,
			"name": "TC0017 - Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f"
		},
		{
			"id": "d9d1fa66-b7c0-b963-ed17-5ce2f6567681",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New1Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730299231,
			"name": "TC0024 - Login User with Password 1",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "db3747d8-2b1f-1516-1f51-a09b6d3723d1",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ebd47278-4071-b60c-92e2-1b313d77fa9d"
		},
		{
			"id": "dc2d07aa-039f-0a6e-9043-51a82de00cb7",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "Get Facebook App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "dc328057-2bf6-4b03-1962-c8bf830d14d0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595216594,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "952edf8c-7f32-90fc-5746-cbf746243395"
		},
		{
			"id": "dc9a2ae2-75cd-b7e2-ef84-354e7d69a7c8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "dd41f6b3-2fc8-7bcf-da17-21f1b78ebc5a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588869424,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "ddd32d20-60c7-0bec-c208-92b74a03c7a7",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "0e41ff62-8c07-5b44-f5be-a4bf47ad47a9"
		},
		{
			"id": "ddebdc80-fc0d-183f-ea6a-bc372a1fc71a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595187960,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "df45ed47-9bee-558b-eea0-60485096bef1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588659148,
			"name": "Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "e191ccbd-e544-538b-26cd-d112cc687e34",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729618776,
			"name": "TC0022 - Follow Reset Password Link",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64"
		},
		{
			"id": "e1d3eaa7-bbe2-c7aa-7abc-5bb64df869cb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link2\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730207059,
			"name": "TC0024 - Verify Reset Password Email Contents 2",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "e31ab41a-bda6-12e0-906d-e20730bddd65",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595182347,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "e375005b-47ae-60dd-20ae-b96ab08983e0",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "e730b1a6-f8ee-3b23-3f86-ffd956b79305",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "TC0015 - Delete Facebook Test User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "23910899-9187-745f-22db-fc1e927a91c8",
			"isFromCollection": true
		},
		{
			"id": "e76aa3b1-fbb8-a618-3390-b592feebfced",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588851510,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "ea708a48-5b6f-c9bd-765d-81760544fed6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595248909,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "eb6a67f1-d052-0bd4-4668-b3f14aeceae9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "8910872b-fc2f-5b61-0f0f-ab96c2985c84"
		},
		{
			"id": "ecbc2785-9a47-bf61-ec1f-23f885860d79",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0022 - Get App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae2d4972-eae7-2d76-0d54-be9a05d63a64",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "ef067a02-3a9e-8575-6666-088bc9e6a72d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589899772,
			"name": "TC0017 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "bf2c505a-5744-2d53-43ac-2860abde987f"
		},
		{
			"id": "ef1dbabb-a022-4dfb-4fe8-db241773c1b4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New2Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730314373,
			"name": "TC0024 - Login User with Password 2",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "effc1d97-42e8-37d4-0780-485c4198d338",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "TC0015 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "23910899-9187-745f-22db-fc1e927a91c8",
			"isFromCollection": true
		},
		{
			"id": "f043c3dd-d90f-9454-efcf-cdc02a798e99",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "f06383e6-d2f6-0dfd-6ac0-6259b59ccc16",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f",
			"isFromCollection": true
		},
		{
			"id": "f0875edd-7322-deb5-4f72-8c411fc9c4f4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "8ea72d8e-8e43-7f52-485f-35d98d275f92"
		},
		{
			"id": "f56e8efd-e23b-7eb0-cddd-05d0980324e3",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126749791,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "93c6ad62-74c3-ad7d-d9d5-0740d96e8342"
		},
		{
			"id": "f6539097-aea6-971b-7fa6-66e63df2e64b",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link2}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730263719,
			"name": "TC0024 - Follow Reset Password Link 2",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "6784be36-9bae-ad18-1b24-b1176959caf6"
		},
		{
			"id": "f65c2fc7-3549-e883-c8f2-c3f3dbb24864",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "f8f4b2d2-86b9-aab0-9cb0-a295c521e6e8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "145654ab-2912-a907-964e-180493122457"
		},
		{
			"id": "faf1d85a-d7b5-694b-fb92-21b3b2205305",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0020 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "42e16631-6174-b3f5-6c15-6088c82c2576"
		},
		{
			"id": "fbd0329e-392b-6067-a5fc-54cdabc063d4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"folder": "f7dd10ef-e4e3-7032-2074-c8b60b210566"
		},
		{
			"id": "fd66d243-f080-90d8-8efa-f3458cfb78c7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0025 - Create New User",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "96afd108-2ae4-ff7a-2e38-725984f53ebb"
		},
		{
			"id": "fe362e1c-bdf8-7d3f-3f55-96fb9346959d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "ae5ee556-3eec-d080-a84f-254e89d2ae7f"
		},
		{
			"id": "fede4934-f276-86d7-fd16-e88c79c843ea",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437693825016,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		},
		{
			"id": "fee567fa-4f8c-92c3-77ac-9c48f7dcd386",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "da7cf949-4f79-8093-8707-126190d43826"
		}
	]
}