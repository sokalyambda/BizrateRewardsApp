{
	"id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
	"name": "Bizrate Rewards API (V 1.12.1)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"688f1295-d6ca-8be8-c8c7-d5ffe4cedf63",
				"c459cbea-d090-35f9-805f-31ab3ccbaee4",
				"11693249-9628-8305-d375-fe51a6fa6163",
				"da83b786-bbb1-3e8b-155d-ad2b305a9250",
				"f2516803-c5f4-e375-f0bb-d0edd610945a",
				"df598074-274a-4123-99d9-8329bbf1cba3",
				"96e03a44-caba-07f3-1430-ced0c2edc8bb",
				"c0749b70-9f12-707f-3c55-4979b897af18",
				"7dc91f9e-ec7f-6144-a448-61b2d3aea3a4",
				"2cb20e3a-0538-91fa-16db-dc43fd132cc2",
				"5dbba645-696f-d570-7321-b8e676801dde",
				"83809b7f-aebf-7ad9-4f51-5c9afbfed49d",
				"4eea01c2-e312-7e37-841a-01e592be0229",
				"51f2a639-1909-6599-84a1-1f218aab600a",
				"0e0b2fe4-efd5-58b2-0a77-2189e1bf434b",
				"dd386748-4dcc-5212-4523-5d9e80e933df",
				"201dd64a-58a1-5622-66fe-ccd6a449c5b8",
				"72425ac1-e45d-a6ed-c6a9-c08aadf36562",
				"deead56f-4d05-b0de-c894-d840a2aeb642",
				"bb3a6283-59cc-78c2-0810-f81972f5a787",
				"147fa4c3-236d-342a-efcb-9993712212dc",
				"674965a3-5a74-b1ce-d366-eabe0bcc1a3d"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804"
		},
		{
			"id": "4fd9e92d-954d-753c-f0db-805a04ef9c02",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"2aa0268c-e3e2-c1b6-3ee5-d9b1015bb2fe",
				"61a8eb60-7e1d-5f37-1654-aa4a6df00bf9",
				"bb6bdca2-4d2b-272d-3891-ff156895f433",
				"09c4e4c6-73c3-4eba-cfc5-3a4e9aadd460",
				"258dbadc-7cdc-01f0-977a-72f446848458"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "9637c08d-73e9-b917-f1c5-f39190d1a2d0",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"5d833188-922a-57ac-dc1e-e102776a8973"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "fd37046c-b412-4cf3-b3f4-2003c4cc6076",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"8eb1e62b-cfbb-a3ac-950e-0d0bc5bc625e",
				"8a72c220-4fd6-075c-677f-349845c900d6",
				"f6db175d-bbe0-00ad-cc06-4ec361eb6aa5",
				"e6a40fe0-51b4-57b6-8aae-42e5828db8fd"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "ecd8ef59-6f66-03ad-00fc-554b287f3809",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"8bf7ca06-9915-bc9a-5049-a9419604bc48"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "9502a246-0712-2261-4da0-24352221ba24",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"ace372be-7134-fbe9-1342-97aaac584789",
				"00a454aa-dd39-bbc8-9ccc-5b518df1fcad",
				"7b9fc544-7d3a-e131-4b81-f56250e18a30",
				"8495f38c-12a1-4a2f-bf52-b5a4191a1725"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"f5d93a26-a3f7-0e21-454a-05af5e428dec",
				"ba32b8e9-5d57-1841-4b9c-2bb41425d1ec",
				"05a2e5b3-a676-09e5-0c32-ec3500200ebc",
				"8880aa1c-e595-92d2-c165-dfca9a006991",
				"46862e0a-97b3-2d94-3754-caa26cd4f2d7",
				"81fd167f-8855-d8b6-07b5-0965a98537bb",
				"ca47837b-5880-2b2c-ad41-43cea62e0e6b",
				"7fdebf37-56cf-1b8d-7c78-5324b3b61313",
				"9236dc07-9d3b-ede2-2e5d-9b6843710b4f",
				"a2447708-8214-7d57-c92b-54f5b69ec343",
				"0a1c2ebc-7f90-3cbb-5d72-63b155c34737",
				"9e319fe4-377d-31b3-5c2e-3d701f7c802f",
				"28073d85-d829-288a-62c4-135f67fe2878",
				"520d0c57-2df5-c0ab-981e-c5e5d03feb83",
				"e85aa4e6-fec0-23dd-1d0c-cd06c49154b5",
				"41b20407-b715-6a21-d28c-dd5af2980a35"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "c00bcba3-46df-a5d8-664f-bd927ce162d5",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"f32724fc-0f2d-dd83-0476-6ba560202b5d",
				"959bafd9-0e66-4435-d0bc-2b8bf12754bc",
				"07623da0-3cc8-dee4-2eb0-6cf208d4e111",
				"b1c2ad09-00c5-6241-fe24-267f8a7dba4d"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "d7e163de-d8c8-f169-acc1-43582f5733e9",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"ad7dfda4-0432-bf44-c85f-477089408d27",
				"fc63b66f-0321-905f-03ae-507c7e4bdc5e",
				"9f272894-1361-e4d8-6a24-b26d96091ef4",
				"a7461b40-6385-28a5-b047-33b0861f298a",
				"6d95fa10-f105-32f1-0bdd-94fa62af6a2e",
				"789e2dc5-a9d5-441d-612f-aeef9f6ec564",
				"4988f3d3-8ae4-490c-d15e-be7cfae18715"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "112443c0-a137-6245-4400-53093693bc02",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"f6b5c4ba-a7cb-d159-7867-1fda6ccc906b",
				"0a428c3d-f308-c404-9494-8585e6069f4f",
				"247d003c-8bd2-804c-0f1f-1c9e840d5375",
				"428cfacc-9df6-68b3-1a5f-6ba00601f80a",
				"29c09835-f042-723b-7973-c0d7c7cb9047",
				"9f79c3af-1b11-7d24-a4ea-faf91a5cc094",
				"55a51cda-193c-47b8-2801-8a299e9fc854",
				"37e73dfb-533b-f667-2127-2c8c7547dac3",
				"2672cb68-e143-54bf-e20b-3a0aea7cb93f",
				"c0354892-4f9d-376d-b4bd-667535ff09c2",
				"d18441f6-d558-cdf5-b7f7-cecb8fd68ad8",
				"03b7c331-4613-83dd-2a3d-f87dff54f274",
				"c6ebdebc-5381-64b5-dabf-53c65f421168",
				"8722993c-64f5-896e-3d0a-1c1b86656521",
				"ff380191-9885-e794-238d-144c8a7021b5",
				"9cb3710c-0644-6852-40f5-03f9dcdd560d",
				"e796a94e-533a-cd80-63e5-c2ef382da6f7",
				"5c00c07a-29bb-454e-26ff-8ea3e6c4e775",
				"b4125998-40da-9252-5d13-586b59955459",
				"01366d9d-07cb-f962-f640-941b495902fd",
				"81e03703-9905-2d48-4f09-78537b6897ca",
				"96bf29d4-1a91-1bd0-daaf-d8d878f94ca6",
				"ddc3b892-77be-9a6b-bceb-9975223f1b4a",
				"121193cb-0832-5a25-dc27-5b8e67955936",
				"05728b4a-174b-aa8c-9690-40cb82a69927"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "864c7f4c-9f9a-d331-50f6-47ce44cade8d"
		},
		{
			"id": "63df178b-3b34-aed2-9a85-f33ea326c13f",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"735359fc-b202-219d-906f-72f1714a096b",
				"c81cdea8-d33d-af77-293f-23584b298b57",
				"ff185c7b-a508-32e1-9015-b5054dc9942b",
				"75adef73-75c9-d43e-470b-c31e1e6fa360",
				"19dacefa-5288-df61-9862-839011cc91da",
				"76842b8d-6531-ed09-6bb4-c08eaea55ddf",
				"ae86d85d-95f9-c284-d5fa-82efd79023e5",
				"6de8d16b-5c36-9cd1-a12c-740c517fde7f",
				"2be2e0aa-111e-ccb3-eb9f-f0a2f26e8177"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "be159e96-5cbf-3fb3-6a6e-e0caf0139801"
		},
		{
			"id": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"aa558109-16ba-c36c-86a8-01f36d764d3d",
				"ff30f839-84b2-f4c6-7595-875db84ff12f",
				"460f756f-e2f8-76de-05d5-e03a36864f44",
				"d6e66089-2bfd-2f45-39c0-5d818351ac87",
				"4052520b-546c-e4fa-d6a5-97e4d705ebef"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "0c45556e-cca4-ddf8-68dc-73999e978eaf",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"ab6aa7eb-9822-d8ce-a65e-6c090fa367c3",
				"2e0bdfdd-aba0-bc56-a02b-c84a77dcdfa2",
				"adec4502-62b5-fac2-e683-23468b7fb446",
				"8ae406ca-4d02-a4ba-b91b-18eb29e7321d",
				"23845d87-23c7-e33d-5c0d-5a1aec7f715b",
				"d60dbb44-4a1b-6d1f-71b5-77cb1a8210d1",
				"0e5862c8-25e2-2e49-e3ca-298700ada3c3",
				"618dad3f-c5e8-a959-50b0-fa37a3d4a1ee",
				"bc397f90-63a8-e548-505a-61c0969b337e",
				"412f0f73-2759-427e-10f7-e66dd580fc64"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804"
		},
		{
			"id": "54d34beb-f850-a742-2eac-43ecc43f9fc1",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"13200f10-de23-092e-c2e1-453429f51850",
				"71deae40-7ed3-609a-c110-6f738a878eab",
				"3ac286b0-0fca-29da-9c04-2d3bbc461685",
				"abcd1a83-658e-7e4f-fbe2-29db23662558",
				"6dba0abf-f642-df50-181f-14c2fdffe347",
				"ca53caf6-b15d-dbcc-6a73-6be244651f14",
				"930c8d5b-c78e-b9e7-4228-905554b92533"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"2cac56f3-dab4-4943-08f5-eb6e3fba7eb1",
				"16ce26e2-8762-02ce-adc3-fc8fcf3f8c8d",
				"fd802e96-4e32-524d-8099-2e62dd7d6678",
				"fc5332e9-db89-d8df-6637-314c12c78912",
				"cbadfa96-e87c-1238-6406-a397b066dcd5",
				"7bd879a0-24d2-5fb2-d49d-63c910dc81fc",
				"04e5bd30-6bf8-689c-b8bc-e58ff044145f",
				"df7cf9da-3527-c57f-a531-97634bfcb7ee",
				"2eca71dc-2167-a395-1136-56358d827193",
				"6d25067d-15bd-06ff-c18d-ba82e51b06e9"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "494f4e2f-865d-3f78-3a87-217841aabc41",
			"name": "TC0015 - Test Create New Bizrate-Facebook User",
			"description": "",
			"write": true,
			"order": [
				"96880886-76fe-977c-2004-03651c359db5",
				"ff5530be-2be3-faf3-527c-9e5289ed3d64",
				"c948592e-1d24-7601-0272-5973e216420f",
				"5deba3aa-e8e2-0a22-e6ae-b58dd00cdf1a",
				"cdbc0b88-5d0a-b978-9b28-ce3689e38a45",
				"37340dc7-64b2-f446-35c7-c8b610ff3eca",
				"749cd81e-30f8-1605-e19f-7260a352b8b3"
			],
			"collection": "0a31db07-09cf-0d34-e70b-4c5bf0aafa0d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "409dba90-9ba6-78a7-ac94-c0c9fbd87bd9"
		},
		{
			"id": "bbfe6eee-f1fc-00cc-623b-5792a7c23973",
			"name": "TC0016 - Test Create New Bizrate-Facebook User  Validations",
			"description": "",
			"write": true,
			"order": [
				"6d4fc4d1-d5e0-5c65-8c3d-09a14fc39a70",
				"ecc1b413-d34c-c432-339d-5170ac53d411"
			],
			"collection": "7cc73dc2-b7b0-1e9d-47ff-b1fe02f2a0f4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea",
			"name": "TC0017 - Test Bizrate-Facebook Login",
			"description": "",
			"write": true,
			"order": [
				"37bb4b77-0677-65e5-682d-2d5e4f0d9211",
				"2b246543-e0a8-940b-dc88-1b2a64b89e89",
				"9590ccb0-3cc5-32f6-3a6c-b06dace8ec39",
				"df5ffa97-3455-ff77-5d87-604ab587047f",
				"26180d8f-f7ed-5990-2015-9faa1fdfd7bf",
				"312b1514-941f-251e-4fa4-1aae20ad5fad",
				"16de9636-557e-5977-12a7-c65f3bf36afd"
			],
			"collection": "c3567692-1479-029d-1318-c508deb005d4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "fc85e4e6-844c-dfa1-4193-9cb085aa1627",
			"name": "TC0018 - Test Bizrate-Facebook Login - Validations",
			"description": "",
			"write": true,
			"order": [
				"e56951aa-d229-9a15-2cd7-38c6956a3f2a",
				"30222a13-5368-5243-c1bc-bd694e6ae1a8",
				"359631b4-a216-b720-9c57-29c36ecdb593"
			],
			"collection": "be159e96-5cbf-3fb3-6a6e-e0caf0139801",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e",
			"name": "TC0019 - Test Save User Device",
			"description": "test the same user with 2 devices",
			"write": true,
			"order": [
				"aee64d2e-ede2-1857-80d4-59caf43db8e9",
				"35b31d75-b50c-1b42-f42b-b3f9ae2a838f",
				"9bf4e4b5-eead-1b41-bd98-0ecf2b1bebad",
				"4d3a36c0-1bbf-3522-283e-4d42496eb685",
				"fcec3b02-2c71-0eca-a306-b4a5e9bfdbc4",
				"f4b6248b-f90d-9ba3-b68e-6fd57dbf60d6"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "67113311-b3a9-76aa-aa79-76a3baf013c3",
			"name": "TC0020 - Test Save User Device - Validations",
			"description": "test validations: negative test cases",
			"write": true,
			"order": [
				"593d0981-73fb-7a77-490a-3ffdc0ce3e1e",
				"c0f24dbc-03dd-2c59-654e-e7b7b680aabf",
				"4c37cc51-05c5-90dc-681e-18beb249982c",
				"2a68b49e-db8e-5cb4-49bf-0393cf74dcd3",
				"586204a3-a85b-3a60-8391-3e5d5e287658",
				"9d5645ff-f8db-e35b-d790-3e6c95b62960"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "0338b780-d9e2-9d97-3cd3-000570e24d1d",
			"name": "TC0021 - Test Save User Device - Transfer Device",
			"description": "Test cases for validating user's device.\nInclude test case with 2 users share 1 device",
			"write": true,
			"order": [
				"380035bd-d49e-9eac-7066-5b7b0fc6043f",
				"1394148f-f4d5-772d-c6b1-e6d7310b543c",
				"da5401d2-704d-4f96-5559-182308850dca",
				"0539deba-915b-9460-293d-8f08b0c8cd49",
				"6c49a86e-910e-565a-de94-3359a37aa88c",
				"948da103-2a28-397c-a6e1-4a7ea40d2014",
				"bcd14bdb-ae0c-2606-2a76-8d2a2fba84c2",
				"b0933cc7-b816-2e2c-118d-254a46a02302",
				"a1b22a73-dbe6-6c81-21ed-7fb006f51e67",
				"d4425440-ede5-ed93-889c-9c64b08d959c",
				"e121f08c-e217-b20f-daa5-41e25743e2ea",
				"aa4a716d-b9af-c266-9ee9-33992d76dae6",
				"32685611-af2c-6495-2637-914ece0798fb",
				"5796d463-6ca2-340a-362f-3083b9324cd4",
				"0f3bc9f8-9cc0-1210-4e00-88f8c00505d4",
				"3c2ceb45-0633-dca4-a82c-879bd4de50b2",
				"d15c41b9-0d17-fbf7-d1bb-85ab6b2d801c"
			],
			"collection": "6f04cf03-e3d4-160b-b968-20c0c58272de",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "0ef87fc6-0f32-56a3-d038-dfe50baed65d"
		},
		{
			"id": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"name": "TC0022 - Test Reset Password",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email\n- Follow the link to activate password\n- Use the access token to login \n- Use the old password to be denied access\n- Use the new password to confirm the password reset worked.",
			"write": true,
			"order": [
				"db966fa9-6d07-e1ba-f7ea-c0a5291afa2c",
				"f775597d-e5ca-116a-b6c4-2502a524d7a6",
				"7f0d4dc5-6b9a-6d91-d7e8-53d4387ed134",
				"6248fe9e-b6ed-ade2-b56f-7f882e5aa9c2",
				"8cfc8898-6819-b652-dfdf-5dfafb03c724",
				"e0625c4e-3b3f-c877-bd6e-b06afda96526",
				"d82a7d3b-2cd2-d0b0-d7f4-bc41e557892c",
				"49009361-edc3-a455-1bef-87e8dd5f3e35",
				"4bfdd54e-106b-8aa9-cf22-72c14dea961e",
				"cea0bba4-b150-43ff-225a-71614721b55f",
				"42fd060b-ad28-58d9-b2e1-7b1f9288484f",
				"3d942e63-117b-319d-4445-414ce9700016"
			],
			"collection": "1810e467-54e0-f716-46cd-be101e5adaf6",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "bd00639b-6299-4f25-3b06-165a46e93444",
			"name": "TC0023 - Test Reset Password - Validations",
			"description": "",
			"write": true,
			"order": [
				"1fdce1ce-6347-50a1-c67e-d452ddd756cb",
				"a9fe875b-39de-b6a1-8f19-84fc33a6b9ea",
				"c5e886fa-91de-8686-99b5-aec8f439b693",
				"55bdbdd6-2d8a-8186-581b-613c48056ae6",
				"219ab555-31c4-2c1b-634b-385c7ad92ebf",
				"2fd35710-d608-3f63-896c-a5d8789e3584"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "b7fc31ec-2e06-7850-9f09-ecf787e2704d"
		},
		{
			"id": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"name": "TC0024 - Test Reset Password with Multiple Requests",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email and save as link1\n- Reset password again\n- Verify the reset password email again\n- Find the link in the reset password email and save as link2\n- Follow the link to activate password in link1 and it should fail\n- Follow the link to activate password in link2 and it should succeed\n- Use the access token to login \n- Use the password used in first attempt to be denied access\n- Use the password used in second attempt and it should work.",
			"write": true,
			"order": [
				"baa56312-b115-f047-d939-2e98d11314fb",
				"2b9afed7-5660-a35c-714b-5d2be9a59c87",
				"b638b1de-5385-7215-da00-cb626c1566fa",
				"be0feac7-7fcb-abd1-1cf6-e4f980f5a644",
				"4d7c70bd-3487-9b06-4f07-09a82beef6ec",
				"53d01dce-3993-f75d-c7cc-e5b568bdee68",
				"45be23aa-e23c-a797-8b1f-6f6dd51c58af",
				"b9289b84-1da8-d8f9-5926-ee05bcac5b63",
				"0bd6b74b-477b-8b47-562c-35398c333e8e",
				"f6d6cf4e-ab6c-6970-1d49-a860a14ed1d6",
				"502c860a-6a5a-738c-0b6a-0356f6184f3a",
				"40c61445-a578-ef23-808f-993c6326287c",
				"45b43538-413d-c4da-439e-780cefc23262",
				"fe9a9921-1839-289f-f4fc-3774cf3e0fe5",
				"8129d1d1-7156-70ad-d784-d1b761ecd51a"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "bcdad464-ceec-abd6-92e1-d1f41740b743",
			"name": "TC0025 - Test Get Featured Giftcards",
			"description": "",
			"write": true,
			"order": [
				"6dd44cb6-d86b-5514-4222-ce04afe984cb",
				"891d0a9a-cfe5-f550-8191-95cb02df5f08",
				"2c163828-1d51-ce41-6dfe-efe2fd5ed462",
				"ed264c3a-de2a-0704-58d7-f850aad089b0"
			],
			"collection": "b3fdc6f9-c682-0e99-525b-491eb58c5e45",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804"
		},
		{
			"id": "172f029d-13d7-511a-faa1-cd7dbea95b26",
			"name": "TC0026 - Test Refresh User Access Token",
			"description": "",
			"write": true,
			"order": [
				"2e1f53d6-96a4-a988-31e1-2352a6f5c4fd",
				"05b4f0c8-2781-81ac-cac6-68c0ba491e2f",
				"c9272a22-9df3-5c01-f9e2-446becb96050",
				"19ef8fc9-c580-048e-ff5a-55ecb9a8cdd3"
			],
			"collection": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		},
		{
			"id": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388",
			"name": "TC0027 - Test Points Awarded and Points Next Redemption",
			"description": "Test to verify points_awarded and points_next_redemption are calculated and returned correctly.",
			"write": true,
			"order": [
				"3ed845cb-9084-43eb-98bc-1b7781273050",
				"3ef23e2e-5d15-ce21-b1c9-9313951368a0",
				"187afb37-025d-b713-dcd0-f3bda5f59054",
				"30707b82-ab2f-8a2c-9600-9a03288e6b63",
				"8ec98adc-f9d0-5d93-abe4-4db6577e2185",
				"62b4ce5d-351d-f93c-8e64-cb89120ab44b",
				"c19fd0da-8ef0-4495-5d59-851cf3b6a0d2",
				"6719275e-bac1-0fc2-04bd-bb8cdf7535de",
				"97fae0a5-ceb5-8d93-4008-da63fa2762d6"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "864c7f4c-9f9a-d331-50f6-47ce44cade8d",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "3efebf56-cc48-ab93-235d-cf2a89c69012",
			"name": "TC0028 - Test Sync User Points Awarded",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"ec17d86d-0dc9-1de9-93e9-4c580681266f",
				"fbc27770-3763-ff66-b110-bb232bc07ffc",
				"720dcbc5-8c06-06a3-9290-5bb3813c0902",
				"063aa311-b904-c494-227e-7c39fffbc206",
				"3b79b544-8b94-a376-a71a-16248971faa5",
				"4c91b46e-b054-edbb-78dc-57ef43f2762d",
				"54d4a166-552a-4073-3ad8-6a8bd9eabbdb",
				"6b071cba-515e-b24b-349c-7415ad7f6681",
				"8e6a3006-6dc2-4292-a4ee-04949cf843d2",
				"fcafb060-4ec4-a0be-1b4f-822bb7fd6085",
				"6afd63ec-94d7-d9df-c0c4-a82866386a53"
			],
			"collection_name": "Bizrate Rewards API (V 1.12.1)",
			"collection_owner": "66688",
			"collection_id": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"collection": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"owner": "66688",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "00a454aa-dd39-bbc8-9ccc-5b518df1fcad",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "9502a246-0712-2261-4da0-24352221ba24"
		},
		{
			"id": "01366d9d-07cb-f962-f640-941b495902fd",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236312954,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "03b7c331-4613-83dd-2a3d-f87dff54f274",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236287206,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "04e5bd30-6bf8-689c-b8bc-e58ff044145f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "0539deba-915b-9460-293d-8f08b0c8cd49",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPad Mini\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334500045,
			"name": "TC0021 - Save User 2nd Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa345\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPad Mini\"\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "05728b4a-174b-aa8c-9690-40cb82a69927",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02",
			"isFromCollection": true
		},
		{
			"id": "05a2e5b3-a676-09e5-0c32-ec3500200ebc",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Gender Validation\"] = true;\n}\nelse {\n  tests[\"Gender Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589113419,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "05b4f0c8-2781-81ac-cac6-68c0ba491e2f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975695249,
			"name": "TC0026 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "172f029d-13d7-511a-faa1-cd7dbea95b26"
		},
		{
			"id": "063aa311-b904-c494-227e-7c39fffbc206",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" && data.points_awarded == 750) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931443678,
			"name": "TC0028 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "07623da0-3cc8-dee4-2eb0-6cf208d4e111",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601889389,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c00bcba3-46df-a5d8-664f-bd927ce162d5"
		},
		{
			"id": "09c4e4c6-73c3-4eba-cfc5-3a4e9aadd460",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404843160,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4fd9e92d-954d-753c-f0db-805a04ef9c02"
		},
		{
			"id": "0a1c2ebc-7f90-3cbb-5d72-63b155c34737",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588869424,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "0a428c3d-f308-c404-9494-8585e6069f4f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595187960,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "0bd6b74b-477b-8b47-562c-35398c333e8e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link2\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730207059,
			"name": "TC0024 - Verify Reset Password Email Contents 2",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "0e0b2fe4-efd5-58b2-0a77-2189e1bf434b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "0e5862c8-25e2-2e49-e3ca-298700ada3c3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 52.456060 &&\n    data.long == -61.032336 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1441745795368,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 52.456060,\n    \"long\": -61.032336,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\",\n    \"created\": \"2015-07-12T16:31:01.000Z\"\n}"
		},
		{
			"id": "0f3bc9f8-9cc0-1210-4e00-88f8c00505d4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0021 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d",
			"isFromCollection": true
		},
		{
			"id": "11693249-9628-8305-d375-fe51a6fa6163",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "121193cb-0832-5a25-dc27-5b8e67955936",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "13200f10-de23-092e-c2e1-453429f51850",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595234011,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1"
		},
		{
			"id": "1394148f-f4d5-772d-c6b1-e6d7310b543c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0021 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "147fa4c3-236d-342a-efcb-9993712212dc",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "Delete Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "16ce26e2-8762-02ce-adc3-fc8fcf3f8c8d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595254911,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "16de9636-557e-5977-12a7-c65f3bf36afd",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516536928,
			"name": "TC0017 - Delete Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea",
			"isFromCollection": true
		},
		{
			"id": "187afb37-025d-b713-dcd0-f3bda5f59054",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.Result[0].ContactId && data.Result[0].Points == 750) {\n  tests[\"Contact fetched\"] = true;\n  postman.setEnvironmentVariable(\"g_contact_id\", data.Result[0].ContactId);\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931386582,
			"name": "TC0027 - TA Get Contact By Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "19dacefa-5288-df61-9862-839011cc91da",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "19ef8fc9-c580-048e-ff5a-55ecb9a8cdd3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0026 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "172f029d-13d7-511a-faa1-cd7dbea95b26",
			"isFromCollection": true
		},
		{
			"id": "1fdce1ce-6347-50a1-c67e-d452ddd756cb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0023 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444",
			"isFromCollection": true
		},
		{
			"id": "201dd64a-58a1-5622-66fe-ccd6a449c5b8",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "Get Facebook App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "219ab555-31c4-2c1b-634b-385c7ad92ebf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_NOT_REGISTERED\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372407099,
			"name": "TC0023 - Reset Password - Email Not Registered",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email@.test.com\",\n    \"password\": \"Abc123!?\"\n}",
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444"
		},
		{
			"id": "23845d87-23c7-e33d-5c0d-5a1aec7f715b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439927973624,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf"
		},
		{
			"id": "247d003c-8bd2-804c-0f1f-1c9e840d5375",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236145832,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "258dbadc-7cdc-01f0-977a-72f446848458",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4fd9e92d-954d-753c-f0db-805a04ef9c02",
			"isFromCollection": true
		},
		{
			"id": "26180d8f-f7ed-5990-2015-9faa1fdfd7bf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437684537023,
			"name": "TC0017 - Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea"
		},
		{
			"id": "2672cb68-e143-54bf-e20b-3a0aea7cb93f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234917572,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "28073d85-d829-288a-62c4-135f67fe2878",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588882333,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "29c09835-f042-723b-7973-c0d7c7cb9047",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234680873,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "2a68b49e-db8e-5cb4-49bf-0393cf74dcd3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device UID Test\"] = true;\n}\nelse {\n tests[\"Missing Device UID Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032442495,
			"name": "TC0020 - Save User Device - Missing Device UID",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_token\": \"APNS_DEVICE_TOKEN\"\n}",
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3"
		},
		{
			"id": "2aa0268c-e3e2-c1b6-3ee5-d9b1015bb2fe",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4fd9e92d-954d-753c-f0db-805a04ef9c02",
			"isFromCollection": true
		},
		{
			"id": "2b246543-e0a8-940b-dc88-1b2a64b89e89",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516530203,
			"name": "TC0017 - Create New Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea",
			"isFromCollection": true
		},
		{
			"id": "2b9afed7-5660-a35c-714b-5d2be9a59c87",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0024 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "2be2e0aa-111e-ccb3-eb9f-f0a2f26e8177",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f",
			"isFromCollection": true
		},
		{
			"id": "2c163828-1d51-ce41-6dfe-efe2fd5ed462",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}giftcards/featured",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 8) {\n  tests[\"Test get featured giftcards\"] = true;\n}\nelse {\n    tests[\"Test get featured giftcards\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438730368482,
			"name": "TC0025 - Get Featured Giftcards",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "bcdad464-ceec-abd6-92e1-d1f41740b743"
		},
		{
			"id": "2cac56f3-dab4-4943-08f5-eb6e3fba7eb1",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595248909,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "2cb20e3a-0538-91fa-16db-dc43fd132cc2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "2e0bdfdd-aba0-bc56-a02b-c84a77dcdfa2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595223607,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf"
		},
		{
			"id": "2e1f53d6-96a4-a988-31e1-2352a6f5c4fd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0026 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "172f029d-13d7-511a-faa1-cd7dbea95b26",
			"isFromCollection": true
		},
		{
			"id": "2eca71dc-2167-a395-1136-56358d827193",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "2fd35710-d608-3f63-896c-a5d8789e3584",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors, \"EMAIL_INVALID_FORMAT\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors, \"PASSWORD_INVALID\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372500480,
			"name": "TC0023 - Reset Password - Invalid Email & Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email.test.com\",\n    \"password\": \"Abc\"\n}",
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444"
		},
		{
			"id": "30222a13-5368-5243-c1bc-bd694e6ae1a8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"ACCESS_TOKEN_REQUIRED\") {\n  tests[\"Empty FB login test\"] = true;\n}\nelse {\n  tests[\"Empty FB login test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437691833373,
			"name": "TC0018 - Login with Bizrate-Facebook User - Empty",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "fc85e4e6-844c-dfa1-4193-9cb085aa1627"
		},
		{
			"id": "30707b82-ab2f-8a2c-9600-9a03288e6b63",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Jane\" &&\n    data.points_awarded == 750 &&\n    data.points_next_redemption == 5000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931395047,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "312b1514-941f-251e-4fa4-1aae20ad5fad",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589899772,
			"name": "TC0017 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea"
		},
		{
			"id": "32685611-af2c-6495-2637-914ece0798fb",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334030730,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "359631b4-a216-b720-9c57-29c36ecdb593",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB access token test\"] = true;\n}\nelse {\n  tests[\"Invalid FB access token test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437695889495,
			"name": "TC0018 - Login with Bizrate-Facebook User - Invalid Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"invalid_fb_access_token1\"\n}",
			"folder": "fc85e4e6-844c-dfa1-4193-9cb085aa1627"
		},
		{
			"id": "35b31d75-b50c-1b42-f42b-b3f9ae2a838f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0019 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e"
		},
		{
			"id": "37340dc7-64b2-f446-35c7-c8b610ff3eca",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589899772,
			"name": "TC0015 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41"
		},
		{
			"id": "37bb4b77-0677-65e5-682d-2d5e4f0d9211",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516520957,
			"name": "TC0017 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea",
			"isFromCollection": true
		},
		{
			"id": "37e73dfb-533b-f667-2127-2c8c7547dac3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236273130,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "380035bd-d49e-9eac-7066-5b7b0fc6043f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0021 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "3ac286b0-0fca-29da-9c04-2d3bbc461685",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0013 - Save User Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "3b79b544-8b94-a376-a71a-16248971faa5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n    postman.setEnvironmentVariable(\"g_survey_points\", data[0].points);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342250765,
			"name": "TC0028 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "3c2ceb45-0633-dca4-a82c-879bd4de50b2",
			"headers": "Authorization: Bearer {{g_access_token2}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126629309,
			"name": "TC0021 - Delete 2nd User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "3d942e63-117b-319d-4445-414ce9700016",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0023 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"isFromCollection": true
		},
		{
			"id": "3ed845cb-9084-43eb-98bc-1b7781273050",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595162450,
			"name": "TC0027 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "3ef23e2e-5d15-ce21-b1c9-9313951368a0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595169640,
			"name": "TC0027 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "4052520b-546c-e4fa-d6a5-97e4d705ebef",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2",
			"isFromCollection": true
		},
		{
			"id": "40c61445-a578-ef23-808f-993c6326287c",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0024 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "412f0f73-2759-427e-10f7-e66dd580fc64",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf",
			"isFromCollection": true
		},
		{
			"id": "41b20407-b715-6a21-d28c-dd5af2980a35",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "428cfacc-9df6-68b3-1a5f-6ba00601f80a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236125960,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "42fd060b-ad28-58d9-b2e1-7b1f9288484f",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_ALREADY_CONFIRMED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729700250,
			"name": "TC0022 - Follow Reset Password Link Again",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7"
		},
		{
			"id": "45b43538-413d-c4da-439e-780cefc23262",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New1Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730299231,
			"name": "TC0024 - Login User with Password 1",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "45be23aa-e23c-a797-8b1f-6f6dd51c58af",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885930559,
			"name": "TC0024 - Reset Password 2",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New2Abc123456!?\"\n}",
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "460f756f-e2f8-76de-05d5-e03a36864f44",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2"
		},
		{
			"id": "46862e0a-97b3-2d94-3754-caa26cd4f2d7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0006 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c",
			"isFromCollection": true
		},
		{
			"id": "49009361-edc3-a455-1bef-87e8dd5f3e35",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0022 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "4988f3d3-8ae4-490c-d15e-be7cfae18715",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9",
			"isFromCollection": true
		},
		{
			"id": "4bfdd54e-106b-8aa9-cf22-72c14dea961e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "Abc123!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728720255,
			"name": "TC0022 - Login User with Old Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7"
		},
		{
			"id": "4c37cc51-05c5-90dc-681e-18beb249982c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438030454158,
			"name": "TC0020 - Save User Device - Empty",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3"
		},
		{
			"id": "4c91b46e-b054-edbb-78dc-57ef43f2762d",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "{{g_survey_points}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "requestId",
					"value": "{{request_guid}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n  tests[\"Contact incentive points added\"] = true;\n}\nelse {\n  tests[\"Contact incentive points added\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342438078,
			"name": "TC0028 - TA Add Incentive Points",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "4d3a36c0-1bbf-3522-283e-4d42496eb685",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0019 - Save User second device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e"
		},
		{
			"id": "4d7c70bd-3487-9b06-4f07-09a82beef6ec",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "4eea01c2-e312-7e37-841a-01e592be0229",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "502c860a-6a5a-738c-0b6a-0356f6184f3a",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link2}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730263719,
			"name": "TC0024 - Follow Reset Password Link 2",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "51f2a639-1909-6599-84a1-1f218aab600a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "520d0c57-2df5-c0ab-981e-c5e5d03feb83",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_OR_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589156942,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "53d01dce-3993-f75d-c7cc-e5b568bdee68",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link1\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730152060,
			"name": "TC0024 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "54d4a166-552a-4073-3ad8-6a8bd9eabbdb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436229061247,
			"name": "TC0028 - Submit Survey Completion",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "55a51cda-193c-47b8-2801-8a299e9fc854",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234800110,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "55bdbdd6-2d8a-8186-581b-613c48056ae6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Email Test\"] = true;\n}\nelse {\n tests[\"Missing Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372366012,
			"name": "TC0023 - Reset Password - Missing Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"password\": \"Abc123456!?\"\n}",
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444"
		},
		{
			"id": "5796d463-6ca2-340a-362f-3083b9324cd4",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334527756,
			"name": "TC0021 - Get 3rd User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "586204a3-a85b-3a60-8391-3e5d5e287658",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device Token Test\"] = true;\n}\nelse {\n tests[\"Missing Device Token Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032468134,
			"name": "TC0020 - Save User Device - Missing Device Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\"\n}",
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3"
		},
		{
			"id": "593d0981-73fb-7a77-490a-3ffdc0ce3e1e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0020 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3"
		},
		{
			"id": "5c00c07a-29bb-454e-26ff-8ea3e6c4e775",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236219141,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "5d833188-922a-57ac-dc1e-e102776a8973",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "9637c08d-73e9-b917-f1c5-f39190d1a2d0"
		},
		{
			"id": "5dbba645-696f-d570-7321-b8e676801dde",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "5deba3aa-e8e2-0a22-e6ae-b58dd00cdf1a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588934907,
			"name": "TC0015 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41"
		},
		{
			"id": "618dad3f-c5e8-a959-50b0-fa37a3d4a1ee",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 52.456060 &&\n    data.long == -61.032336 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1441740986247,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 2000\n    },\n    \"lat\": 52.456060,\n    \"long\": -61.032336,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\",\n    \"created\": \"2015-07-12T18:31:01.000Z\"\n}"
		},
		{
			"id": "61a8eb60-7e1d-5f37-1654-aa4a6df00bf9",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4fd9e92d-954d-753c-f0db-805a04ef9c02",
			"isFromCollection": true
		},
		{
			"id": "6248fe9e-b6ed-ade2-b56f-7f882e5aa9c2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438884235559,
			"name": "TC0022 - Reset Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"NewAbc123456!?\"\n}",
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7"
		},
		{
			"id": "62b4ce5d-351d-f93c-8e64-cb89120ab44b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\" &&\n    data.points_awarded == 5000 && data.points_next_redemption == 5000) {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405396116,
			"name": "TC0027 - Update User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "6719275e-bac1-0fc2-04bd-bb8cdf7535de",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Janet\" &&\n    data.points_awarded == 5001 &&\n    data.points_next_redemption == 10000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405478766,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "674965a3-5a74-b1ce-d366-eabe0bcc1a3d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589888750,
			"name": "Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "688f1295-d6ca-8be8-c8c7-d5ffe4cedf63",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588650405,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "6afd63ec-94d7-d9df-c0c4-a82866386a53",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0028 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012",
			"isFromCollection": true
		},
		{
			"id": "6b071cba-515e-b24b-349c-7415ad7f6681",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436230651181,
			"name": "TC0028 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "6c49a86e-910e-565a-de94-3359a37aa88c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email2\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token2\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438122944798,
			"name": "TC0021 - Create 2nd New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email2}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "6d25067d-15bd-06ff-c18d-ba82e51b06e9",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1",
			"isFromCollection": true
		},
		{
			"id": "6d4fc4d1-d5e0-5c65-8c3d-09a14fc39a70",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0016 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "bbfe6eee-f1fc-00cc-623b-5792a7c23973",
			"isFromCollection": true
		},
		{
			"id": "6d95fa10-f105-32f1-0bdd-94fa62af6a2e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "6dba0abf-f642-df50-181f-14c2fdffe347",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439927437705,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"locationId\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1"
		},
		{
			"id": "6dd44cb6-d86b-5514-4222-ce04afe984cb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0025 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "bcdad464-ceec-abd6-92e1-d1f41740b743"
		},
		{
			"id": "6de8d16b-5c36-9cd1-a12c-740c517fde7f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "71deae40-7ed3-609a-c110-6f738a878eab",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595240128,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1"
		},
		{
			"id": "720dcbc5-8c06-06a3-9290-5bb3813c0902",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.Result[0].ContactId && data.Result[0].Points == 750) {\n  tests[\"Contact fetched\"] = true;\n  postman.setEnvironmentVariable(\"g_contact_id\", data.Result[0].ContactId);\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931437629,
			"name": "TC0028 - TA Get Contact By Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "72425ac1-e45d-a6ed-c6a9-c08aadf36562",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "Create New Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "735359fc-b202-219d-906f-72f1714a096b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594912508,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "749cd81e-30f8-1605-e19f-7260a352b8b3",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "TC0015 - Delete Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41",
			"isFromCollection": true
		},
		{
			"id": "75adef73-75c9-d43e-470b-c31e1e6fa360",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "76842b8d-6531-ed09-6bb4-c08eaea55ddf",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437693825016,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "789e2dc5-a9d5-441d-612f-aeef9f6ec564",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "7b9fc544-7d3a-e131-4b81-f56250e18a30",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "9502a246-0712-2261-4da0-24352221ba24"
		},
		{
			"id": "7bd879a0-24d2-5fb2-d49d-63c910dc81fc",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "7dc91f9e-ec7f-6144-a448-61b2d3aea3a4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "7f0d4dc5-6b9a-6d91-d7e8-53d4387ed134",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0022 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "7fdebf37-56cf-1b8d-7c78-5324b3b61313",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588851510,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "8129d1d1-7156-70ad-d784-d1b761ecd51a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0024 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"isFromCollection": true
		},
		{
			"id": "81e03703-9905-2d48-4f09-78537b6897ca",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234900253,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "81fd167f-8855-d8b6-07b5-0965a98537bb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405898710,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"{{g_new_password}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "83809b7f-aebf-7ad9-4f51-5c9afbfed49d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032275182,
			"name": "Save User Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "8495f38c-12a1-4a2f-bf52-b5a4191a1725",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "9502a246-0712-2261-4da0-24352221ba24",
			"isFromCollection": true
		},
		{
			"id": "8722993c-64f5-896e-3d0a-1c1b86656521",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236208705,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "8880aa1c-e595-92d2-c165-dfca9a006991",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588839342,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "891d0a9a-cfe5-f550-8191-95cb02df5f08",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0025 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "bcdad464-ceec-abd6-92e1-d1f41740b743"
		},
		{
			"id": "8a72c220-4fd6-075c-677f-349845c900d6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "fd37046c-b412-4cf3-b3f4-2003c4cc6076",
			"isFromCollection": true
		},
		{
			"id": "8ae406ca-4d02-a4ba-b91b-18eb29e7321d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439927964625,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf"
		},
		{
			"id": "8bf7ca06-9915-bc9a-5049-a9419604bc48",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "ecd8ef59-6f66-03ad-00fc-554b287f3809"
		},
		{
			"id": "8cfc8898-6819-b652-dfdf-5dfafb03c724",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0022 - Verify Reset Password Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "8e6a3006-6dc2-4292-a4ee-04949cf843d2",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar pointsAwarded = 750 + parseInt(environment[\"g_survey_points\"], 10);\n\nif (data.Result[0] && parseInt(data.Result[0].Points, 10) == pointsAwarded) {\n  tests[\"Contact fetched\"] = true;\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931464206,
			"name": "TA0028 - TA Get Contact By Email",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "8eb1e62b-cfbb-a3ac-950e-0d0bc5bc625e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "fd37046c-b412-4cf3-b3f4-2003c4cc6076",
			"isFromCollection": true
		},
		{
			"id": "8ec98adc-f9d0-5d93-abe4-4db6577e2185",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "PUT",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "5000",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n    tests[\"Contact points set\"] = true;\n} else {\n    tests[\"Contact points set\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405999526,
			"name": "TC0027 - TA Set Contact Incentive Points",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "9236dc07-9d3b-ede2-2e5d-9b6843710b4f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588857620,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "930c8d5b-c78e-b9e7-4228-905554b92533",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1",
			"isFromCollection": true
		},
		{
			"id": "948da103-2a28-397c-a6e1-4a7ea40d2014",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333630797,
			"name": "TC0021 - Save User Device - Duplicate Device UID",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "9590ccb0-3cc5-32f6-3a6c-b06dace8ec39",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0017 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea"
		},
		{
			"id": "959bafd9-0e66-4435-d0bc-2b8bf12754bc",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595153291,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c00bcba3-46df-a5d8-664f-bd927ce162d5"
		},
		{
			"id": "96880886-76fe-977c-2004-03651c359db5",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "TC0015 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41",
			"isFromCollection": true
		},
		{
			"id": "96bf29d4-1a91-1bd0-daaf-d8d878f94ca6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "96e03a44-caba-07f3-1430-ced0c2edc8bb",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "97fae0a5-ceb5-8d93-4008-da63fa2762d6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0027 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388",
			"isFromCollection": true
		},
		{
			"id": "9bf4e4b5-eead-1b41-bd98-0ecf2b1bebad",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPAD Air\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438205980205,
			"name": "TC0019 - Save User Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa212\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPAD Air\"\n}",
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e"
		},
		{
			"id": "9cb3710c-0644-6852-40f5-03f9dcdd560d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236298780,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "9d5645ff-f8db-e35b-d790-3e6c95b62960",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0020 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3",
			"isFromCollection": true
		},
		{
			"id": "9e319fe4-377d-31b3-5c2e-3d701f7c802f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588875516,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "9f272894-1361-e4d8-6a24-b26d96091ef4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "9f79c3af-1b11-7d24-a4ea-faf91a5cc094",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236171279,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "a1b22a73-dbe6-6c81-21ed-7fb006f51e67",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email3\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token3\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333787190,
			"name": "TC0021 - Create 3rd New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email3}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\",\n    \"is_test_user\" : true\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "a2447708-8214-7d57-c92b-54f5b69ec343",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588864021,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "a7461b40-6385-28a5-b047-33b0861f298a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601902635,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "a9fe875b-39de-b6a1-8f19-84fc33a6b9ea",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372093977,
			"name": "TC0023 - Reset Password - Empty",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444"
		},
		{
			"id": "aa4a716d-b9af-c266-9ee9-33992d76dae6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334377444,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "aa558109-16ba-c36c-86a8-01f36d764d3d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595205372,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2"
		},
		{
			"id": "ab6aa7eb-9822-d8ce-a65e-6c090fa367c3",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595216594,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf"
		},
		{
			"id": "abcd1a83-658e-7e4f-fbe2-29db23662558",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439927428769,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"locationId\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1"
		},
		{
			"id": "ace372be-7134-fbe9-1342-97aaac584789",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "9502a246-0712-2261-4da0-24352221ba24"
		},
		{
			"id": "ad7dfda4-0432-bf44-c85f-477089408d27",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595162450,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "adec4502-62b5-fac2-e683-23468b7fb446",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0012 - Save User Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "ae86d85d-95f9-c284-d5fa-82efd79023e5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "aee64d2e-ede2-1857-80d4-59caf43db8e9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0019 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e"
		},
		{
			"id": "b0933cc7-b816-2e2c-118d-254a46a02302",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126749791,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "b1c2ad09-00c5-6241-fe24-267f8a7dba4d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c00bcba3-46df-a5d8-664f-bd927ce162d5"
		},
		{
			"id": "b4125998-40da-9252-5d13-586b59955459",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234875607,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "b638b1de-5385-7215-da00-cb626c1566fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0024 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "b9289b84-1da8-d8f9-5926-ee05bcac5b63",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email 2",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "ba32b8e9-5d57-1841-4b9c-2bb41425d1ec",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588825223,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "baa56312-b115-f047-d939-2e98d11314fb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0024 - API Info",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "bb3a6283-59cc-78c2-0810-f81972f5a787",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437684537023,
			"name": "Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee",
			"isFromCollection": true
		},
		{
			"id": "bb6bdca2-4d2b-272d-3891-ff156895f433",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404826804,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4fd9e92d-954d-753c-f0db-805a04ef9c02"
		},
		{
			"id": "bc397f90-63a8-e548-505a-61c0969b337e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 4) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1441740932063,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": []
		},
		{
			"id": "bcd14bdb-ae0c-2606-2a76-8d2a2fba84c2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198446741,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "be0feac7-7fcb-abd1-1cf6-e4f980f5a644",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885922776,
			"name": "TC0024 - Reset Password 1",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New1Abc123456!?\"\n}",
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "c0354892-4f9d-376d-b4bd-667535ff09c2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236201773,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "c0749b70-9f12-707f-3c55-4979b897af18",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601868169,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "c0f24dbc-03dd-2c59-654e-e7b7b680aabf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0020 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "67113311-b3a9-76aa-aa79-76a3baf013c3"
		},
		{
			"id": "c19fd0da-8ef0-4495-5d59-851cf3b6a0d2",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "PUT",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "5001",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n    tests[\"Contact points set\"] = true;\n} else {\n    tests[\"Contact points set\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439406009442,
			"name": "TC0027 - TA Set Contact Incentive Points",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"folder": "c2c87b03-e2e0-de17-f64c-d9c19ab0d388"
		},
		{
			"id": "c459cbea-d090-35f9-805f-31ab3ccbaee4",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975170336,
			"name": "Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "c5e886fa-91de-8686-99b5-aec8f439b693",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Password Test\"] = true;\n}\nelse {\n tests[\"Missing Password Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372387059,
			"name": "TC0023 - Reset Password - Missing Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\"\n}",
			"folder": "bd00639b-6299-4f25-3b06-165a46e93444"
		},
		{
			"id": "c6ebdebc-5381-64b5-dabf-53c65f421168",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234912311,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "c81cdea8-d33d-af77-293f-23584b298b57",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595023918,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "c9272a22-9df3-5c01-f9e2-446becb96050",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "TC0026 - Refresh User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "172f029d-13d7-511a-faa1-cd7dbea95b26",
			"isFromCollection": true
		},
		{
			"id": "c948592e-1d24-7601-0272-5973e216420f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0015 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41"
		},
		{
			"id": "ca47837b-5880-2b2c-ad41-43cea62e0e6b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c",
			"isFromCollection": true
		},
		{
			"id": "ca53caf6-b15d-dbcc-6a73-6be244651f14",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "54d34beb-f850-a742-2eac-43ecc43f9fc1"
		},
		{
			"id": "cbadfa96-e87c-1238-6406-a397b066dcd5",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "cdbc0b88-5d0a-b978-9b28-ce3689e38a45",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_USER_ALREADY_REGISTERED\") {\n  tests[\"FB User Already Registered Test\"] = true;\n}\nelse {\n  tests[\"FB User Already Registered Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1440014345042,
			"name": "TC0015 - Create Existing Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41"
		},
		{
			"id": "cea0bba4-b150-43ff-225a-71614721b55f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "NewAbc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728788941,
			"name": "TC0022 - Login User with New Password",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7"
		},
		{
			"id": "d15c41b9-0d17-fbf7-d1bb-85ab6b2d801c",
			"headers": "Authorization: Bearer {{g_access_token3}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333809820,
			"name": "TC0021 - Delete 3rd User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "d18441f6-d558-cdf5-b7f7-cecb8fd68ad8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234818342,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "d4425440-ede5-ed93-889c-9c64b08d959c",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 7S+++\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334485804,
			"name": "TC0021 - Save User Device - Duplicate Device Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa678\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPhone 7S+++\"\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "d60dbb44-4a1b-6d1f-71b5-77cb1a8210d1",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "0c45556e-cca4-ddf8-68dc-73999e978eaf"
		},
		{
			"id": "d6e66089-2bfd-2f45-39c0-5d818351ac87",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236464313,
			"name": "TC0011 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2"
		},
		{
			"id": "d82a7d3b-2cd2-d0b0-d7f4-bc41e557892c",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729618776,
			"name": "TC0022 - Follow Reset Password Link",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7"
		},
		{
			"id": "da5401d2-704d-4f96-5559-182308850dca",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438196832548,
			"name": "TC0021 - Save User Device",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "da83b786-bbb1-3e8b-155d-ad2b305a9250",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "db966fa9-6d07-e1ba-f7ea-c0a5291afa2c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0022 - API Info",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "dd386748-4dcc-5212-4523-5d9e80e933df",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "ddc3b892-77be-9a6b-bceb-9975223f1b4a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Tes user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234941884,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "deead56f-4d05-b0de-c894-d840a2aeb642",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588722769,
			"name": "Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "df598074-274a-4123-99d9-8329bbf1cba3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "df5ffa97-3455-ff77-5d87-604ab587047f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588934907,
			"name": "TC0017 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "4f91e61c-9deb-5c48-8262-eb7f0e7014ea"
		},
		{
			"id": "df7cf9da-3527-c57f-a531-97634bfcb7ee",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "e0625c4e-3b3f-c877-bd6e-b06afda96526",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438651505885,
			"name": "TC0022 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "e121f08c-e217-b20f-daa5-41e25743e2ea",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334438845,
			"name": "TC0021 - Save User Device - Duplicate UID and Device Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0338b780-d9e2-9d97-3cd3-000570e24d1d"
		},
		{
			"id": "e56951aa-d229-9a15-2cd7-38c6956a3f2a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0018 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "fc85e4e6-844c-dfa1-4193-9cb085aa1627"
		},
		{
			"id": "e6a40fe0-51b4-57b6-8aae-42e5828db8fd",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "fd37046c-b412-4cf3-b3f4-2003c4cc6076",
			"isFromCollection": true
		},
		{
			"id": "e796a94e-533a-cd80-63e5-c2ef382da6f7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234905684,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "e85aa4e6-fec0-23dd-1d0c-cd06c49154b5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588899204,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "ec17d86d-0dc9-1de9-93e9-4c580681266f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595162450,
			"name": "TC0028 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "ecc1b413-d34c-c432-339d-5170ac53d411",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB Access Token Test\"] = true;\n}\nelse {\n  tests[\"Invalid FB Access Token Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437593820527,
			"name": "TC0016 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"invalid_fb_access_token1\"\n    }\n}",
			"folder": "bbfe6eee-f1fc-00cc-623b-5792a7c23973"
		},
		{
			"id": "ed264c3a-de2a-0704-58d7-f850aad089b0",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0025 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "bcdad464-ceec-abd6-92e1-d1f41740b743",
			"isFromCollection": true
		},
		{
			"id": "f2516803-c5f4-e375-f0bb-d0edd610945a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "Refresh User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "4dadae5c-28e6-a6cc-7ee8-25937a14f6ee"
		},
		{
			"id": "f32724fc-0f2d-dd83-0476-6ba560202b5d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595147291,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "c00bcba3-46df-a5d8-664f-bd927ce162d5"
		},
		{
			"id": "f4b6248b-f90d-9ba3-b68e-6fd57dbf60d6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0019 - Delete User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e",
			"isFromCollection": true
		},
		{
			"id": "f5d93a26-a3f7-0e21-454a-05af5e428dec",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589286351,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "dcdbfb4f-d2b4-067b-a4d2-4004c710fa7c"
		},
		{
			"id": "f6b5c4ba-a7cb-d159-7867-1fda6ccc906b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595182347,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "f6d6cf4e-ab6c-6970-1d49-a860a14ed1d6",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_RESET_REJECTED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438731216718,
			"name": "TC0024 - Follow Reset Password Link 1",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "f6db175d-bbe0-00ad-cc06-4ec361eb6aa5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404744574,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "fd37046c-b412-4cf3-b3f4-2003c4cc6076"
		},
		{
			"id": "f775597d-e5ca-116a-b6c4-2502a524d7a6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0022 - Get App Access Token",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "2f8497ef-afc4-4804-3a13-39fa5566a5c7",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "fbc27770-3763-ff66-b110-bb232bc07ffc",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595169640,
			"name": "TC0028 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "fc5332e9-db89-d8df-6637-314c12c78912",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "fc63b66f-0321-905f-03ae-507c7e4bdc5e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595169640,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "d7e163de-d8c8-f169-acc1-43582f5733e9"
		},
		{
			"id": "fcafb060-4ec4-a0be-1b4f-822bb7fd6085",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar pointsAwarded = 750 + parseInt(environment[\"g_survey_points\"], 10);\n\nif (data.firstname && data.firstname == \"Jane\" && data.points_awarded == pointsAwarded) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439931979465,
			"name": "TC0028 - Get Logged In User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "3efebf56-cc48-ab93-235d-cf2a89c69012"
		},
		{
			"id": "fcec3b02-2c71-0eca-a306-b4a5e9bfdbc4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438206048739,
			"name": "TC0019 - Get User Devices",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "53881a88-ad6b-cd46-87c9-86d7dfbdf64e"
		},
		{
			"id": "fd802e96-4e32-524d-8099-2e62dd7d6678",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0014 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "a0eb92ed-1c1b-9e06-924f-a36ba23abde1"
		},
		{
			"id": "fe9a9921-1839-289f-f4fc-3774cf3e0fe5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New2Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730314373,
			"name": "TC0024 - Login User with Password 2",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "20bafa4d-a416-ca50-fb84-6260ca72440c"
		},
		{
			"id": "ff185c7b-a508-32e1-9015-b5054dc9942b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "63df178b-3b34-aed2-9a85-f33ea326c13f"
		},
		{
			"id": "ff30f839-84b2-f4c6-7595-875db84ff12f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588917203,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "6ff40802-1ba9-1ad2-f9d8-7230755cb4f2"
		},
		{
			"id": "ff380191-9885-e794-238d-144c8a7021b5",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236664570,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"M\"\n}",
			"folder": "112443c0-a137-6245-4400-53093693bc02"
		},
		{
			"id": "ff5530be-2be3-faf3-527c-9e5289ed3d64",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "TC0015 - Create New Facebook Test User",
			"description": "",
			"collectionId": "0ffcf405-3c8b-48dc-8730-4aabfcab6804",
			"responses": [],
			"folder": "494f4e2f-865d-3f78-3a87-217841aabc41",
			"isFromCollection": true
		}
	]
}