{
	"id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
	"name": "Bizrate Rewards API (V 1.10.3)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"e9e255ac-1840-0312-4468-d588034166ad",
				"bbb0c805-83c8-86f7-ac63-49ab98e7f186",
				"4ccba030-09c0-dc92-b56a-2c3a0ed5a9b1",
				"7759b81d-2b4b-4ee1-7697-549536a6f699",
				"2468232e-bbc8-699d-831f-ee60d1529ed0",
				"c29304b0-5928-407a-28f3-1c27ce063252",
				"b6968008-65ab-94b3-f2e2-5204988a5ddc",
				"0cfa0e95-0598-fb53-b133-5b0e24c47d45",
				"6fa692d5-743d-c89b-b494-46c84b9ec55d",
				"5da9a532-c140-b6f2-fd26-5ca805d5d904",
				"b10f5288-d726-ed08-44a0-7df67695d4ad",
				"cce89f0d-1df5-0908-19ae-9f40f490a1af",
				"44496873-6633-f8a6-5771-bcf68dc22958",
				"8a88ec83-9866-a0e5-ea53-8ded0a4da222",
				"2f2ada9f-774b-005f-43a4-e892ed57055d",
				"74fadbbe-7fd2-94b0-26ca-0fb40204fa0a",
				"937b1cf2-c48f-9768-b4c3-27710a496c38",
				"4a5c4388-48e5-02fa-b77a-333de4b071b8",
				"232ac10f-181e-c601-6110-4b59d0f208b6",
				"7dba1850-74f7-d2d2-2269-b91ec85b2c07",
				"4b123e2e-606b-c115-cf8c-ab46f52dd674",
				"4ae8d4f4-4d73-f400-ed4e-8ea463c1ca2c"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		},
		{
			"id": "cb1674d3-1c89-d902-d2b5-43794df6d644",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"cf500e76-b3bd-ed30-3c12-fcfdf33c3161",
				"f07705b7-c0ca-145e-a96e-e6de1600b384"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "beaaa3fe-1f98-506e-abf5-f76661224cac",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"1777b6dd-076a-5ddb-3824-114ab93e9165"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "14a1f846-d7c0-78cd-3171-45ca46663707",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"0f5cd113-0c63-9e0f-07da-2728c5592d03"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "a2601463-0136-4ed0-bdb5-177400098052",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"f9714128-33d0-354d-0357-480c3e13f1fc"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "8f3ea3f1-7ef6-fece-f371-c6a748bb9901",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"b17ad8b9-e651-586d-0c33-483e01ffa972",
				"0b4614aa-6026-ba03-d9bd-706252032e35",
				"8fae8ce6-965b-a3dd-0053-02bf6829f85f",
				"a29e21e5-5b23-c45d-e708-ab75e9d5e6b1"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"50c33c16-ebac-5c6f-5288-bfde3c189719",
				"02598fdd-3f9b-de2e-1d43-21ea96999512",
				"fd42dfd5-b132-0d10-2da0-5e58a65d03ea",
				"a736df04-19b8-9a6b-a30d-c811ca294aa8",
				"c878f4ef-cfd8-a232-96aa-65ab9aed7bce",
				"618f2453-6881-376c-7528-566f9dedc19d",
				"52007d34-1ae7-dbb4-a6be-d615e8e5eb4b",
				"aac3d6bb-9554-5d2b-f38f-db13972bf2bf",
				"56f3d084-c8a3-0167-fb75-0aa8c95e3d52",
				"40c5e409-83af-adee-f47e-b1fdebf9abf5",
				"0ee7a8d8-a0e9-0891-8093-738524852eee",
				"e68302a4-39e3-f244-c124-181ec60707a4",
				"c668dd02-b971-d15b-0a1e-c67d7a7e4cbf",
				"1cc97b51-2ab9-136b-a5bb-5db1d5a64b1a"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "59287b1b-6021-760c-1b9a-18a602ecd030",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"483f52ec-3d48-1bc0-7d5c-0d2a4689c87d",
				"1dc08722-64cb-f667-25fc-7e12222face1",
				"47c753bf-49d1-f4d8-591e-c24010042f29",
				"05822bea-dc10-faf4-c962-992669bbba7c"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"2ee074a7-d6a7-05d9-144c-824496cdfdec",
				"d84b9c20-1141-5ae2-dddb-4f1a56359e89",
				"8d1c50a9-0570-0c51-724d-2e792d7032e9",
				"cf798052-c850-15ad-d572-e8f27eb4e96e",
				"b7c8aad3-4b39-177d-5a68-4f267f33afb0",
				"588c59e4-1054-14d3-a928-a4ea0715f665",
				"3409e567-ca92-35d8-6a8b-d88ae49bd82c"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"d951ca92-3285-4ae1-c094-4c3158095ed4",
				"1d079cb1-c20a-4767-0da4-c81dee365641",
				"d34615a5-a506-9288-53d6-b2444848effb",
				"b793132e-0445-b8ed-4502-65bc31c41635",
				"5be4defb-8b21-0b86-bddb-79452de15e0b",
				"d7bda18f-c0cc-cc1a-0436-cb5b4442984e",
				"15690c8e-3ee8-7b24-d2c6-d6f44ed4123b",
				"93032408-d3e2-e105-4870-fe086b5dd5d9",
				"2231465d-b35e-d9bf-fb6a-3f73fa957b7a",
				"0c21484b-9590-b7c3-70ef-1340e4922807",
				"e4b490a2-b087-ebcc-4a38-74efad1d70a1",
				"e55082e6-61ea-328f-ee62-48044b4d7ce6",
				"25c699d3-d50e-8a55-e923-e51840736271",
				"796d2551-5036-4578-bfa1-704ab0840f9c",
				"7e35ebd6-fcac-dac9-3de1-58df3ad87143",
				"d85119e1-e031-c22c-b495-8b71023c8425",
				"c809742c-29f0-c516-befd-74ee86cfa71d",
				"86eaf6a0-dddd-06cf-c3fc-2027b0ad412e",
				"9e569fae-5c53-8998-c8b6-280e413c7acd",
				"d9f6ee0b-86b0-411d-0d84-f8a225530011",
				"056c0651-de4c-4e64-4420-1b51f58cd1ab",
				"6d3b2d99-8bcb-9fc5-ab1b-138e6a17e543",
				"29ccf921-1dad-52e0-e46a-385884a7b942",
				"70df9fec-5e75-c045-95a2-cc814e988d93",
				"7e06d78d-4f41-0f3b-c328-cf6090f0202d"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "864c7f4c-9f9a-d331-50f6-47ce44cade8d"
		},
		{
			"id": "7657bd04-7046-9614-137b-2a24f8d4eeaf",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"c65f48c0-f913-4c2d-4ddc-b17d87214702",
				"fda7b764-6ac0-90f4-1e36-e7151155f019",
				"f2411a2b-4320-9ef3-d0e1-7268d227163b",
				"4850ff49-bb42-c897-ae66-0b03bd4534ad",
				"1b99d263-8021-4e0f-c7b2-8ff51036e2cf",
				"0d0a5b50-1ff6-18d3-6575-9d1ab915703e",
				"9b28cecc-ce57-ac46-62d8-b835bff738cf",
				"d622575a-5f95-e80e-a44f-73c9e392d496",
				"8e8b7d1f-6489-cb4a-b174-2fc5957816b4"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "be159e96-5cbf-3fb3-6a6e-e0caf0139801"
		},
		{
			"id": "ada642fe-6cea-dafa-9162-805aeaabbac9",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"576d6ce2-ad29-bb92-b45f-ae6cac0704fe",
				"a67f5e64-14c6-2b0c-ccdf-0da94cfbb99c",
				"1d29eee2-7921-53e6-1227-8dd7c1607e45",
				"d3bca4cd-1856-264b-fcec-3ff05eb5415d",
				"bd0dd7f4-b6da-6915-1754-1b01e6d98eab"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "78edf739-f1c2-315f-7355-da1b3954d619",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"907a8b0b-e879-203e-0e99-249dad7af07e",
				"4efcff88-122a-9059-613d-9dec7e2850a2",
				"b98282ed-42df-d9d7-76c7-af7022cd325a",
				"d0f501c8-ad6d-5353-af60-b22cc7276dc6",
				"55c5cdc3-d362-d8b7-62c9-a3fdbfe3b2a7",
				"d6493145-449a-a3ba-48cb-f645c3ac5fa8"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"ff9cb488-08c2-0107-5d6b-6642160fb094",
				"d815c695-4d78-5032-36cc-69b8cc23661f",
				"0fee1559-86a0-9e9f-c75b-b6bd6a0e984a",
				"cce4a7d3-0708-639c-76f7-c3899b98a11b",
				"841f7f8a-ada5-ddfc-7a0d-3ca821c42ae8",
				"03336b5c-4a69-cca7-ae3a-f1396c6c60c5"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "b5f25b5f-6ee0-fd63-110a-5402a98c3944",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"00992554-0242-0ea1-4fcd-5c1c51fc3b9f",
				"4ecd0dfc-fff6-438c-9493-1bbf4ef21f9e",
				"846f6ca7-7e31-bcf2-7eb3-96e59741ed71",
				"22775f61-8b29-1bdb-0063-443486734a2d",
				"f35bb5ac-5adb-1e15-c405-a06cac5576a8",
				"e8fa8339-3896-788e-b095-bf307734a4f1",
				"93245138-5e8b-b812-1dbe-ee481b1e1c72",
				"47f8f888-0e3c-ca28-d11a-2cc96de5e2b8",
				"cd373aa5-895b-f73c-c991-86525ab03c94",
				"f9dd0d1f-6210-867c-cc42-f55b874be7ba"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5",
			"name": "TC0015 - Test Create New Bizrate-Facebook User",
			"description": "",
			"write": true,
			"order": [
				"dac668eb-932a-d4e9-5a9a-44bfdcffc27b",
				"e18c6021-923b-11cc-95e3-7e6fd6ee910c",
				"b123d119-df79-5584-1433-b771be1c8a7f",
				"ba73d069-7669-d074-6a6b-3553b8f16c39",
				"8f2f82f3-ddce-c68a-4851-6f6dc2bbed01",
				"5c96e5c2-ded4-f64d-2063-404db7ffdb42"
			],
			"collection": "0a31db07-09cf-0d34-e70b-4c5bf0aafa0d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "409dba90-9ba6-78a7-ac94-c0c9fbd87bd9"
		},
		{
			"id": "54f17951-5e2c-a048-a8d8-c8e8f223d44f",
			"name": "TC0016 - Test Create New Bizrate-Facebook User  Validations",
			"description": "",
			"write": true,
			"order": [
				"dc4cb163-8725-60b3-a418-2cea75b10469",
				"9bf38913-4311-9d04-a22b-9bac188511fa"
			],
			"collection": "7cc73dc2-b7b0-1e9d-47ff-b1fe02f2a0f4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "168f05db-6c4f-258e-14d0-dbb5eb7f2703",
			"name": "TC0017 - Test Bizrate-Facebook Login",
			"description": "",
			"write": true,
			"order": [
				"cd2c5742-c2ce-2085-8cbe-76961f2c8d88",
				"6f5667aa-25ad-9adb-7677-9bbc735fb7aa",
				"9b0ff4ee-7cec-78ca-452a-55472189f654",
				"43ea3864-a5a7-e745-6b38-a1b0b71f55cd",
				"bb7f4bc8-7385-15ff-4d5a-deb95ec5d3ec",
				"495f9e98-c97f-7a33-ab59-17dc97ac3a78",
				"7c46a5f6-b5e4-ada0-8cca-ea90509b4522"
			],
			"collection": "c3567692-1479-029d-1318-c508deb005d4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "d6147f53-a28f-1679-eab7-ead005f2fa96",
			"name": "TC0018 - Test Bizrate-Facebook Login - Validations",
			"description": "",
			"write": true,
			"order": [
				"9acef780-8396-d28b-9ded-e3c214ce832d",
				"d94b1e99-3786-87ff-38d8-a23aa08f4413",
				"8f8239f3-7fe5-a257-ae91-d4f73c2803c7"
			],
			"collection": "be159e96-5cbf-3fb3-6a6e-e0caf0139801",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "b216ce64-37f6-887c-9cad-c5e2fe3635a4",
			"name": "TC0019 - Test Save User Device",
			"description": "test the same user with 2 devices",
			"write": true,
			"order": [
				"1367bea8-e186-c007-ab0d-426ab49b0edf",
				"2cd9e008-7fc6-48b6-255b-031bc1e1d588",
				"16c9d363-ecce-4eab-d0a0-7a64285de7a2",
				"4cfd4a4f-9d20-5831-7648-9b33c274708a",
				"5a750075-4929-a5be-3fc4-2bd10b59424c",
				"c3bdf04c-3e81-638a-927e-818673e17450"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "2a68b772-0aa6-29cc-c096-cff30165709c",
			"name": "TC0020 - Test Save User Device - Validations",
			"description": "test validations: negative test cases",
			"write": true,
			"order": [
				"9c2f1e59-8b36-9d8d-66e2-2c74ee26c48e",
				"c6624993-05be-7fe2-c0b0-0ecee5878e14",
				"fa416ded-4eaf-c770-67c5-ab84e7442667",
				"37c210fd-8a0d-e442-4656-fbc0bfd90a80",
				"0903d83a-c766-cd50-4f3b-65d65bc00884",
				"8270bdf8-9472-293f-1be9-bf77d6cf1b9e"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "0b6a0287-0326-bf06-b971-c91bfe9ed337",
			"name": "TC0021 - Test Save User Device - Transfer Device",
			"description": "Test cases for validating user's device.\nInclude test case with 2 users share 1 device",
			"write": true,
			"order": [
				"3bce1b0e-8478-c301-34df-e778541bc548",
				"85de5797-11b6-784d-c3f5-525e4e4dc9bf",
				"fb88730d-42c9-c805-6285-ea2d0870808d",
				"52532612-5e62-6495-0ffd-28622a82daf8",
				"95a466ea-5db7-6af2-39c4-87a4305c14d9",
				"d2e413bd-633b-cac8-ed3c-8f919792343b",
				"1a0f4d7c-3a73-a4bb-fa6e-dc95caebafa9",
				"cba35156-aefa-a1cc-7dcb-bbbd7bd18d74",
				"4005fa77-3abe-768c-4851-596bc1df606b",
				"7f580b99-f4c7-9ab2-67d3-7939c90e595d",
				"70a9b8bf-bb10-f3b3-dc60-344b36db827d",
				"fad0b0bf-7112-b25c-eaa3-951bb4273bc7",
				"a1e8289a-bab7-4fcd-8b74-b9ccc405cb43",
				"214b0b3a-b815-da1c-92ac-49e9a078d7e5",
				"a7b06967-a264-3bf7-7acf-6f71ea579a0a",
				"595208f0-8fb3-b35f-345a-4c05168d5380",
				"fca2ea7a-61ec-dbea-957c-5fc80110ef3a"
			],
			"collection": "6f04cf03-e3d4-160b-b968-20c0c58272de",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "0ef87fc6-0f32-56a3-d038-dfe50baed65d"
		},
		{
			"id": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"name": "TC0022 - Test Reset Password",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email\n- Follow the link to activate password\n- Use the access token to login \n- Use the old password to be denied access\n- Use the new password to confirm the password reset worked.",
			"write": true,
			"order": [
				"6c72cccf-b8c7-07da-2e82-8a05b8f18386",
				"194a29e2-d211-f4d3-1e74-11335e4b0af5",
				"56c7ee57-4b41-5d80-41b4-8d1155615c7d",
				"e4084d38-bccc-fce6-c2c4-8dcba4cf91f4",
				"af5ca380-713e-c99f-3b79-db76a110d140",
				"8c139870-46a9-bc8e-ec74-85b7bfaf5bfb",
				"ac9511a3-5585-2200-b387-175c62ec0fd5",
				"e871f6e1-daa0-f4ab-1f9f-53a2444f0af4",
				"988b9e64-90ef-cc45-cb85-09584bcee916",
				"c09e2839-137c-5259-bd9a-aad34cd3e3a9",
				"a3a98fbe-e4aa-e497-c1ca-bfaf6c826098",
				"6bfae0b5-297a-6c3e-820d-8d5d4fbd181a"
			],
			"collection": "1810e467-54e0-f716-46cd-be101e5adaf6",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "94cd25f7-0312-482e-989c-4ee321862148",
			"name": "TC0023 - Test Reset Password - Validations",
			"description": "",
			"write": true,
			"order": [
				"5f95dc68-3efb-ee7d-b909-397a415419e8",
				"aea7cb79-b40a-5046-d39c-ab1daead8b69",
				"1e77b8bd-1797-9fb5-2443-12baf1e6d9fa",
				"4936420e-4a28-df5c-35ee-7db71d789c26",
				"56f6cd65-f752-e9bd-6140-89cea545078f",
				"404e35a4-f629-0a5f-b28b-bc94b0b6e615"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "b7fc31ec-2e06-7850-9f09-ecf787e2704d"
		},
		{
			"id": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"name": "TC0024 - Test Reset Password with Multiple Requests",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email and save as link1\n- Reset password again\n- Verify the reset password email again\n- Find the link in the reset password email and save as link2\n- Follow the link to activate password in link1 and it should fail\n- Follow the link to activate password in link2 and it should succeed\n- Use the access token to login \n- Use the password used in first attempt to be denied access\n- Use the password used in second attempt and it should work.",
			"write": true,
			"order": [
				"9e90832b-4a19-d0d4-c77a-4bdfcab31fc9",
				"a28c514e-703c-b826-a334-8b012d549856",
				"bbc32240-6b28-049c-c083-8b8efffa7fd0",
				"86c912e5-e17b-8a0c-d730-bc9a615f04b5",
				"54d9edfb-fb31-9686-96af-c29b2a0e1b8e",
				"cadaf8a3-9fd8-0337-979c-cdeaa041da94",
				"d5fe83a2-167b-6f11-657d-e84481234ef0",
				"5422a14b-e75f-9131-08b5-63b82b75c5b5",
				"e734a750-03fb-85e2-5434-8b2d3280d94a",
				"f1f94e10-2d72-c876-7334-ef7e7bd5b569",
				"c8f99ae3-d6d4-71b4-4e72-0044cacd3228",
				"8d986b9b-c58e-d49e-c63d-16b42fe2655b",
				"724ea5de-18d6-5d96-4149-1d1d826c9a6a",
				"deb7f48d-dfdb-5561-7344-36b51f7c7e55",
				"265e63b2-8d0a-71b9-9a4b-ed830abc4620"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "7fbc7770-1544-dc14-0e71-571a8d25dbdc",
			"name": "TC0025 - Test Get Featured Giftcards",
			"description": "",
			"write": true,
			"order": [
				"1677373e-b6d2-096e-5390-4a78e68db312",
				"967a30e7-56a8-39a4-b44f-23cda1b1e9e7",
				"162a435f-f2eb-b582-ccb0-458f35c2387f",
				"b1a888f8-db70-0fce-5ae3-23e3968bbb99"
			],
			"collection": "b3fdc6f9-c682-0e99-525b-491eb58c5e45",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553"
		},
		{
			"id": "c75c0e04-5491-0029-5ee2-912722dc4a77",
			"name": "TC0026 - Test Refresh User Access Token",
			"description": "",
			"write": true,
			"order": [
				"1c2be16c-6c27-60c6-d6d5-a8259900ec42",
				"df9cc5ba-0f70-7886-71d3-bbd23f8cc9d4",
				"2cc4fe99-480e-100f-1445-981102e1ec84",
				"a38b6a16-c672-8e2b-0f12-8cd9df633549"
			],
			"collection": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		},
		{
			"id": "92b9b5fa-b5c9-446e-ad47-f15520317d73",
			"name": "TC0027 - Test Points Awarded and Points Next Redemption",
			"description": "Test to verify points_awarded and points_next_redemption are calculated and returned correctly.",
			"write": true,
			"order": [
				"b4fb73a6-471e-e2b5-fb56-c152c26140dd",
				"1451f6fd-544c-449b-f3cb-561917d03310",
				"5d52b62a-dbb8-eb2d-97c8-28a331cc38d6",
				"26bd5791-50f6-25cb-d580-c76586222577",
				"18d36b53-d67e-bbaa-5a0e-b9a5fbac5efa",
				"9e040fb3-dc63-c8db-6cbb-119c56f28cd4",
				"11cc90d2-ab21-b605-c33a-f0ff7d4780cf",
				"95cf3283-af81-bd53-3bf2-2212a03abe4b",
				"e92bf897-5b07-4b66-62df-8a9005138649",
				"cb2f5a1a-0b12-c686-f49f-ccefabfe9385",
				"e6597d9e-6d43-6759-dc4d-d3843753b1db",
				"671d739e-fe42-6c2a-3bff-9f547e996793",
				"7fa36d0d-8cb3-84ea-3f41-187f51f955bb"
			],
			"collection_name": "Bizrate Rewards API (V 1.10.3)",
			"collection_owner": "66688",
			"collection_id": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"collection": "864c7f4c-9f9a-d331-50f6-47ce44cade8d",
			"owner": "66688",
			"collectionId": "864c7f4c-9f9a-d331-50f6-47ce44cade8d"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "00992554-0242-0ea1-4fcd-5c1c51fc3b9f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595248909,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "02598fdd-3f9b-de2e-1d43-21ea96999512",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588825223,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "03336b5c-4a69-cca7-ae3a-f1396c6c60c5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c",
			"isFromCollection": true
		},
		{
			"id": "056c0651-de4c-4e64-4420-1b51f58cd1ab",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234900253,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "05822bea-dc10-faf4-c962-992669bbba7c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "59287b1b-6021-760c-1b9a-18a602ecd030"
		},
		{
			"id": "0903d83a-c766-cd50-4f3b-65d65bc00884",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device Token Test\"] = true;\n}\nelse {\n tests[\"Missing Device Token Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032468134,
			"name": "TC0020 - Save User Device - Missing Device Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\"\n}",
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c"
		},
		{
			"id": "0b4614aa-6026-ba03-d9bd-706252032e35",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "8f3ea3f1-7ef6-fece-f371-c6a748bb9901"
		},
		{
			"id": "0c21484b-9590-b7c3-70ef-1340e4922807",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236201773,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "0cfa0e95-0598-fb53-b133-5b0e24c47d45",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601868169,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "0d0a5b50-1ff6-18d3-6575-9d1ab915703e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437693825016,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "0ee7a8d8-a0e9-0891-8093-738524852eee",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588882333,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "0f5cd113-0c63-9e0f-07da-2728c5592d03",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658515448,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "14a1f846-d7c0-78cd-3171-45ca46663707"
		},
		{
			"id": "0fee1559-86a0-9e9f-c75b-b6bd6a0e984a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007520567,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c"
		},
		{
			"id": "11cc90d2-ab21-b605-c33a-f0ff7d4780cf",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Jane\" &&\n    data.points_awarded == 500 &&\n    data.points_next_redemption == 5000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439232561612,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "1367bea8-e186-c007-ab0d-426ab49b0edf",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0019 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4"
		},
		{
			"id": "1451f6fd-544c-449b-f3cb-561917d03310",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595169640,
			"name": "TC0027 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "15690c8e-3ee8-7b24-d2c6-d6f44ed4123b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234800110,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "162a435f-f2eb-b582-ccb0-458f35c2387f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}giftcards/featured",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 8) {\n  tests[\"Test get featured giftcards\"] = true;\n}\nelse {\n    tests[\"Test get featured giftcards\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438730368482,
			"name": "TC0025 - Get Featured Giftcards",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7fbc7770-1544-dc14-0e71-571a8d25dbdc"
		},
		{
			"id": "1677373e-b6d2-096e-5390-4a78e68db312",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0025 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7fbc7770-1544-dc14-0e71-571a8d25dbdc"
		},
		{
			"id": "16c9d363-ecce-4eab-d0a0-7a64285de7a2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPAD Air\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438205980205,
			"name": "TC0019 - Save User Device",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa212\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPAD Air\"\n}",
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4"
		},
		{
			"id": "1777b6dd-076a-5ddb-3824-114ab93e9165",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "beaaa3fe-1f98-506e-abf5-f76661224cac"
		},
		{
			"id": "18d36b53-d67e-bbaa-5a0e-b9a5fbac5efa",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436229061247,
			"name": "TC0027 - Submit Survey Completion",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "194a29e2-d211-f4d3-1e74-11335e4b0af5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0022 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "1a0f4d7c-3a73-a4bb-fa6e-dc95caebafa9",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198446741,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "1b99d263-8021-4e0f-c7b2-8ff51036e2cf",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "1c2be16c-6c27-60c6-d6d5-a8259900ec42",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0026 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "c75c0e04-5491-0029-5ee2-912722dc4a77",
			"isFromCollection": true
		},
		{
			"id": "1cc97b51-2ab9-136b-a5bb-5db1d5a64b1a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "1d079cb1-c20a-4767-0da4-c81dee365641",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595187960,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "1d29eee2-7921-53e6-1227-8dd7c1607e45",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "ada642fe-6cea-dafa-9162-805aeaabbac9"
		},
		{
			"id": "1dc08722-64cb-f667-25fc-7e12222face1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595153291,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "59287b1b-6021-760c-1b9a-18a602ecd030"
		},
		{
			"id": "1e77b8bd-1797-9fb5-2443-12baf1e6d9fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Password Test\"] = true;\n}\nelse {\n tests[\"Missing Password Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372387059,
			"name": "TC0023 - Reset Password - Missing Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\"\n}",
			"folder": "94cd25f7-0312-482e-989c-4ee321862148"
		},
		{
			"id": "214b0b3a-b815-da1c-92ac-49e9a078d7e5",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334527756,
			"name": "TC0021 - Get 3rd User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "2231465d-b35e-d9bf-fb6a-3f73fa957b7a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234917572,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "22775f61-8b29-1bdb-0063-443486734a2d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "232ac10f-181e-c601-6110-4b59d0f208b6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588722769,
			"name": "Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "2468232e-bbc8-699d-831f-ee60d1529ed0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "Refresh User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "25c699d3-d50e-8a55-e923-e51840736271",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234912311,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "265e63b2-8d0a-71b9-9a4b-ed830abc4620",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0024 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"isFromCollection": true
		},
		{
			"id": "26bd5791-50f6-25cb-d580-c76586222577",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437601902635,
			"name": "TC0027 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "29ccf921-1dad-52e0-e46a-385884a7b942",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Tes user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234941884,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "2cc4fe99-480e-100f-1445-981102e1ec84",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "TC0026 - Refresh User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "c75c0e04-5491-0029-5ee2-912722dc4a77",
			"isFromCollection": true
		},
		{
			"id": "2cd9e008-7fc6-48b6-255b-031bc1e1d588",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0019 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4"
		},
		{
			"id": "2ee074a7-d6a7-05d9-144c-824496cdfdec",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595162450,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "2f2ada9f-774b-005f-43a4-e892ed57055d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032275182,
			"name": "Save User Device",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "3409e567-ca92-35d8-6a8b-d88ae49bd82c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e",
			"isFromCollection": true
		},
		{
			"id": "37c210fd-8a0d-e442-4656-fbc0bfd90a80",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device UID Test\"] = true;\n}\nelse {\n tests[\"Missing Device UID Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032442495,
			"name": "TC0020 - Save User Device - Missing Device UID",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_token\": \"APNS_DEVICE_TOKEN\"\n}",
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c"
		},
		{
			"id": "3bce1b0e-8478-c301-34df-e778541bc548",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0021 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "4005fa77-3abe-768c-4851-596bc1df606b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email3\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token3\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333787190,
			"name": "TC0021 - Create 3rd New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email3}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\",\n    \"is_test_user\" : true\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "404e35a4-f629-0a5f-b28b-bc94b0b6e615",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors, \"EMAIL_INVALID_FORMAT\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors, \"PASSWORD_INVALID\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372500480,
			"name": "TC0023 - Reset Password - Invalid Email & Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email.test.com\",\n    \"password\": \"Abc\"\n}",
			"folder": "94cd25f7-0312-482e-989c-4ee321862148"
		},
		{
			"id": "40c5e409-83af-adee-f47e-b1fdebf9abf5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588875516,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "43ea3864-a5a7-e745-6b38-a1b0b71f55cd",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588934907,
			"name": "TC0017 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703"
		},
		{
			"id": "44496873-6633-f8a6-5771-bcf68dc22958",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "47c753bf-49d1-f4d8-591e-c24010042f29",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601889389,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "59287b1b-6021-760c-1b9a-18a602ecd030"
		},
		{
			"id": "47f8f888-0e3c-ca28-d11a-2cc96de5e2b8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "483f52ec-3d48-1bc0-7d5c-0d2a4689c87d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595147291,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "59287b1b-6021-760c-1b9a-18a602ecd030"
		},
		{
			"id": "4850ff49-bb42-c897-ae66-0b03bd4534ad",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "4936420e-4a28-df5c-35ee-7db71d789c26",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Email Test\"] = true;\n}\nelse {\n tests[\"Missing Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372366012,
			"name": "TC0023 - Reset Password - Missing Email",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"password\": \"Abc123456!?\"\n}",
			"folder": "94cd25f7-0312-482e-989c-4ee321862148"
		},
		{
			"id": "495f9e98-c97f-7a33-ab59-17dc97ac3a78",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589899772,
			"name": "TC0017 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703"
		},
		{
			"id": "4a5c4388-48e5-02fa-b77a-333de4b071b8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "Create New Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "4ae8d4f4-4d73-f400-ed4e-8ea463c1ca2c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589888750,
			"name": "Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "4b123e2e-606b-c115-cf8c-ab46f52dd674",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "Delete Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "4ccba030-09c0-dc92-b56a-2c3a0ed5a9b1",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "4cfd4a4f-9d20-5831-7648-9b33c274708a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0019 - Save User second device",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4"
		},
		{
			"id": "4ecd0dfc-fff6-438c-9493-1bbf4ef21f9e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595254911,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "4efcff88-122a-9059-613d-9dec7e2850a2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595223607,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619"
		},
		{
			"id": "50c33c16-ebac-5c6f-5288-bfde3c189719",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589286351,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "52007d34-1ae7-dbb4-a6be-d615e8e5eb4b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588857620,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "52532612-5e62-6495-0ffd-28622a82daf8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPad Mini\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334500045,
			"name": "TC0021 - Save User 2nd Device",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa345\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPad Mini\"\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "5422a14b-e75f-9131-08b5-63b82b75c5b5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email 2",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "54d9edfb-fb31-9686-96af-c29b2a0e1b8e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "55c5cdc3-d362-d8b7-62c9-a3fdbfe3b2a7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619"
		},
		{
			"id": "56c7ee57-4b41-5d80-41b4-8d1155615c7d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0022 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "56f3d084-c8a3-0167-fb75-0aa8c95e3d52",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588869424,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "56f6cd65-f752-e9bd-6140-89cea545078f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_NOT_REGISTERED\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372407099,
			"name": "TC0023 - Reset Password - Email Not Registered",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email@.test.com\",\n    \"password\": \"Abc123!?\"\n}",
			"folder": "94cd25f7-0312-482e-989c-4ee321862148"
		},
		{
			"id": "576d6ce2-ad29-bb92-b45f-ae6cac0704fe",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595205372,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "ada642fe-6cea-dafa-9162-805aeaabbac9"
		},
		{
			"id": "588c59e4-1054-14d3-a928-a4ea0715f665",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "595208f0-8fb3-b35f-345a-4c05168d5380",
			"headers": "Authorization: Bearer {{g_access_token2}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126629309,
			"name": "TC0021 - Delete 2nd User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "5a750075-4929-a5be-3fc4-2bd10b59424c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438206048739,
			"name": "TC0019 - Get User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4"
		},
		{
			"id": "5be4defb-8b21-0b86-bddb-79452de15e0b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234680873,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "5c96e5c2-ded4-f64d-2063-404db7ffdb42",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "TC0015 - Delete Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5",
			"isFromCollection": true
		},
		{
			"id": "5d52b62a-dbb8-eb2d-97c8-28a331cc38d6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Jane\" &&\n    data.points_awarded == 0 &&\n    data.points_next_redemption == 5000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439230582784,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "5da9a532-c140-b6f2-fd26-5ca805d5d904",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "5f95dc68-3efb-ee7d-b909-397a415419e8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0023 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "94cd25f7-0312-482e-989c-4ee321862148",
			"isFromCollection": true
		},
		{
			"id": "618f2453-6881-376c-7528-566f9dedc19d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588851510,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "671d739e-fe42-6c2a-3bff-9f547e996793",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Janet\" &&\n    data.points_awarded == 1000 &&\n    data.points_next_redemption == 5000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234242317,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "6bfae0b5-297a-6c3e-820d-8d5d4fbd181a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0023 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"isFromCollection": true
		},
		{
			"id": "6c72cccf-b8c7-07da-2e82-8a05b8f18386",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0022 - API Info",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "6d3b2d99-8bcb-9fc5-ab1b-138e6a17e543",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "6f5667aa-25ad-9adb-7677-9bbc735fb7aa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516530203,
			"name": "TC0017 - Create New Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703",
			"isFromCollection": true
		},
		{
			"id": "6fa692d5-743d-c89b-b494-46c84b9ec55d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "70a9b8bf-bb10-f3b3-dc60-344b36db827d",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334438845,
			"name": "TC0021 - Save User Device - Duplicate UID and Device Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "70df9fec-5e75-c045-95a2-cc814e988d93",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "724ea5de-18d6-5d96-4149-1d1d826c9a6a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New1Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730299231,
			"name": "TC0024 - Login User with Password 1",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "74fadbbe-7fd2-94b0-26ca-0fb40204fa0a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "7759b81d-2b4b-4ee1-7697-549536a6f699",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "796d2551-5036-4578-bfa1-704ab0840f9c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236208705,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "7c46a5f6-b5e4-ada0-8cca-ea90509b4522",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516536928,
			"name": "TC0017 - Delete Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703",
			"isFromCollection": true
		},
		{
			"id": "7dba1850-74f7-d2d2-2269-b91ec85b2c07",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437684537023,
			"name": "Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed",
			"isFromCollection": true
		},
		{
			"id": "7e06d78d-4f41-0f3b-c328-cf6090f0202d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d",
			"isFromCollection": true
		},
		{
			"id": "7e35ebd6-fcac-dac9-3de1-58df3ad87143",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236664570,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"M\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "7f580b99-f4c7-9ab2-67d3-7939c90e595d",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 7S+++\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334485804,
			"name": "TC0021 - Save User Device - Duplicate Device Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa678\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPhone 7S+++\"\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "7fa36d0d-8cb3-84ea-3f41-187f51f955bb",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0027 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73",
			"isFromCollection": true
		},
		{
			"id": "8270bdf8-9472-293f-1be9-bf77d6cf1b9e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0020 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c",
			"isFromCollection": true
		},
		{
			"id": "841f7f8a-ada5-ddfc-7a0d-3ca821c42ae8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c"
		},
		{
			"id": "846f6ca7-7e31-bcf2-7eb3-96e59741ed71",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0012 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "85de5797-11b6-784d-c3f5-525e4e4dc9bf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0021 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "86c912e5-e17b-8a0c-d730-bc9a615f04b5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885922776,
			"name": "TC0024 - Reset Password 1",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New1Abc123456!?\"\n}",
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "86eaf6a0-dddd-06cf-c3fc-2027b0ad412e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236219141,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "8a88ec83-9866-a0e5-ea53-8ded0a4da222",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "8c139870-46a9-bc8e-ec74-85b7bfaf5bfb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438651505885,
			"name": "TC0022 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "8d1c50a9-0570-0c51-724d-2e792d7032e9",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "8d986b9b-c58e-d49e-c63d-16b42fe2655b",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0024 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "8e8b7d1f-6489-cb4a-b174-2fc5957816b4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf",
			"isFromCollection": true
		},
		{
			"id": "8f2f82f3-ddce-c68a-4851-6f6dc2bbed01",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589899772,
			"name": "TC0015 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5"
		},
		{
			"id": "8f8239f3-7fe5-a257-ae91-d4f73c2803c7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB access token test\"] = true;\n}\nelse {\n  tests[\"Invalid FB access token test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437695889495,
			"name": "TC0018 - Login with Bizrate-Facebook User - Invalid Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"invalid_fb_access_token1\"\n}",
			"folder": "d6147f53-a28f-1679-eab7-ead005f2fa96"
		},
		{
			"id": "8fae8ce6-965b-a3dd-0053-02bf6829f85f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "8f3ea3f1-7ef6-fece-f371-c6a748bb9901"
		},
		{
			"id": "907a8b0b-e879-203e-0e99-249dad7af07e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595216594,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619"
		},
		{
			"id": "93032408-d3e2-e105-4870-fe086b5dd5d9",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236273130,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "93245138-5e8b-b812-1dbe-ee481b1e1c72",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "937b1cf2-c48f-9768-b4c3-27710a496c38",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "Get Facebook App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "95a466ea-5db7-6af2-39c4-87a4305c14d9",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email2\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token2\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438122944798,
			"name": "TC0021 - Create 2nd New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email2}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "95cf3283-af81-bd53-3bf2-2212a03abe4b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437601902635,
			"name": "TC0027 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73",
			"isFromCollection": true
		},
		{
			"id": "967a30e7-56a8-39a4-b44f-23cda1b1e9e7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0025 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7fbc7770-1544-dc14-0e71-571a8d25dbdc"
		},
		{
			"id": "988b9e64-90ef-cc45-cb85-09584bcee916",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "Abc123!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728720255,
			"name": "TC0022 - Login User with Old Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6"
		},
		{
			"id": "9acef780-8396-d28b-9ded-e3c214ce832d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0018 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "d6147f53-a28f-1679-eab7-ead005f2fa96"
		},
		{
			"id": "9b0ff4ee-7cec-78ca-452a-55472189f654",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0017 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703"
		},
		{
			"id": "9b28cecc-ce57-ac46-62d8-b835bff738cf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "9bf38913-4311-9d04-a22b-9bac188511fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB Access Token Test\"] = true;\n}\nelse {\n  tests[\"Invalid FB Access Token Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437593820527,
			"name": "TC0016 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"invalid_fb_access_token1\"\n    }\n}",
			"folder": "54f17951-5e2c-a048-a8d8-c8e8f223d44f"
		},
		{
			"id": "9c2f1e59-8b36-9d8d-66e2-2c74ee26c48e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0020 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c"
		},
		{
			"id": "9e040fb3-dc63-c8db-6cbb-119c56f28cd4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436230651181,
			"name": "TC0027 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "9e569fae-5c53-8998-c8b6-280e413c7acd",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234875607,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "9e90832b-4a19-d0d4-c77a-4bdfcab31fc9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0024 - API Info",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "a1e8289a-bab7-4fcd-8b74-b9ccc405cb43",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334030730,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "a28c514e-703c-b826-a334-8b012d549856",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0024 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "a29e21e5-5b23-c45d-e708-ab75e9d5e6b1",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "8f3ea3f1-7ef6-fece-f371-c6a748bb9901",
			"isFromCollection": true
		},
		{
			"id": "a38b6a16-c672-8e2b-0f12-8cd9df633549",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0026 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "c75c0e04-5491-0029-5ee2-912722dc4a77",
			"isFromCollection": true
		},
		{
			"id": "a3a98fbe-e4aa-e497-c1ca-bfaf6c826098",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_ALREADY_CONFIRMED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729700250,
			"name": "TC0022 - Follow Reset Password Link Again",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6"
		},
		{
			"id": "a67f5e64-14c6-2b0c-ccdf-0da94cfbb99c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588917203,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "ada642fe-6cea-dafa-9162-805aeaabbac9"
		},
		{
			"id": "a736df04-19b8-9a6b-a30d-c811ca294aa8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588839342,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "a7b06967-a264-3bf7-7acf-6f71ea579a0a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0021 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337",
			"isFromCollection": true
		},
		{
			"id": "aac3d6bb-9554-5d2b-f38f-db13972bf2bf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588864021,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "ac9511a3-5585-2200-b387-175c62ec0fd5",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729618776,
			"name": "TC0022 - Follow Reset Password Link",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6"
		},
		{
			"id": "aea7cb79-b40a-5046-d39c-ab1daead8b69",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372093977,
			"name": "TC0023 - Reset Password - Empty",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "94cd25f7-0312-482e-989c-4ee321862148"
		},
		{
			"id": "af5ca380-713e-c99f-3b79-db76a110d140",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0022 - Verify Reset Password Email",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "b10f5288-d726-ed08-44a0-7df67695d4ad",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "b123d119-df79-5584-1433-b771be1c8a7f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0015 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5"
		},
		{
			"id": "b17ad8b9-e651-586d-0c33-483e01ffa972",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "8f3ea3f1-7ef6-fece-f371-c6a748bb9901"
		},
		{
			"id": "b1a888f8-db70-0fce-5ae3-23e3968bbb99",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0025 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7fbc7770-1544-dc14-0e71-571a8d25dbdc",
			"isFromCollection": true
		},
		{
			"id": "b4fb73a6-471e-e2b5-fb56-c152c26140dd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595162450,
			"name": "TC0027 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "b6968008-65ab-94b3-f2e2-5204988a5ddc",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "b793132e-0445-b8ed-4502-65bc31c41635",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236125960,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "b7c8aad3-4b39-177d-5a68-4f267f33afb0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "b98282ed-42df-d9d7-76c7-af7022cd325a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073135571,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619"
		},
		{
			"id": "ba73d069-7669-d074-6a6b-3553b8f16c39",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588934907,
			"name": "TC0015 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5"
		},
		{
			"id": "bb7f4bc8-7385-15ff-4d5a-deb95ec5d3ec",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437684537023,
			"name": "TC0017 - Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703"
		},
		{
			"id": "bbb0c805-83c8-86f7-ac63-49ab98e7f186",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975170336,
			"name": "Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "bbc32240-6b28-049c-c083-8b8efffa7fd0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0024 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "bd0dd7f4-b6da-6915-1754-1b01e6d98eab",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "ada642fe-6cea-dafa-9162-805aeaabbac9",
			"isFromCollection": true
		},
		{
			"id": "c09e2839-137c-5259-bd9a-aad34cd3e3a9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "NewAbc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728788941,
			"name": "TC0022 - Login User with New Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6"
		},
		{
			"id": "c29304b0-5928-407a-28f3-1c27ce063252",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "c3bdf04c-3e81-638a-927e-818673e17450",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0019 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "b216ce64-37f6-887c-9cad-c5e2fe3635a4",
			"isFromCollection": true
		},
		{
			"id": "c65f48c0-f913-4c2d-4ddc-b17d87214702",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594912508,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "c6624993-05be-7fe2-c0b0-0ecee5878e14",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0020 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c"
		},
		{
			"id": "c668dd02-b971-d15b-0a1e-c67d7a7e4cbf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588899204,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "c809742c-29f0-c516-befd-74ee86cfa71d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234905684,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "c878f4ef-cfd8-a232-96aa-65ab9aed7bce",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588845893,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{TEST_USER1_EMAIL}}\",\n    \"password\": \"{{TEST_USER1_PASSWORD}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "c8f99ae3-d6d4-71b4-4e72-0044cacd3228",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link2}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730263719,
			"name": "TC0024 - Follow Reset Password Link 2",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "cadaf8a3-9fd8-0337-979c-cdeaa041da94",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link1\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730152060,
			"name": "TC0024 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "cb2f5a1a-0b12-c686-f49f-ccefabfe9385",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436230651181,
			"name": "TC0027 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73",
			"isFromCollection": true
		},
		{
			"id": "cba35156-aefa-a1cc-7dcb-bbbd7bd18d74",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126749791,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "cce4a7d3-0708-639c-76f7-c3899b98a11b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007791106,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c"
		},
		{
			"id": "cce89f0d-1df5-0908-19ae-9f40f490a1af",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "cd2c5742-c2ce-2085-8cbe-76961f2c8d88",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516520957,
			"name": "TC0017 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "168f05db-6c4f-258e-14d0-dbb5eb7f2703",
			"isFromCollection": true
		},
		{
			"id": "cd373aa5-895b-f73c-c991-86525ab03c94",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "cf500e76-b3bd-ed30-3c12-fcfdf33c3161",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "cb1674d3-1c89-d902-d2b5-43794df6d644",
			"isFromCollection": true
		},
		{
			"id": "cf798052-c850-15ad-d572-e8f27eb4e96e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601902635,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "d0f501c8-ad6d-5353-af60-b22cc7276dc6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073140763,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619"
		},
		{
			"id": "d2e413bd-633b-cac8-ed3c-8f919792343b",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333630797,
			"name": "TC0021 - Save User Device - Duplicate Device UID",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "d34615a5-a506-9288-53d6-b2444848effb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236145832,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "d3bca4cd-1856-264b-fcec-3ff05eb5415d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236464313,
			"name": "TC0011 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "ada642fe-6cea-dafa-9162-805aeaabbac9"
		},
		{
			"id": "d5fe83a2-167b-6f11-657d-e84481234ef0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885930559,
			"name": "TC0024 - Reset Password 2",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New2Abc123456!?\"\n}",
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "d622575a-5f95-e80e-a44f-73c9e392d496",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "d6493145-449a-a3ba-48cb-f645c3ac5fa8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "78edf739-f1c2-315f-7355-da1b3954d619",
			"isFromCollection": true
		},
		{
			"id": "d7bda18f-c0cc-cc1a-0436-cb5b4442984e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236171279,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "d815c695-4d78-5032-36cc-69b8cc23661f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595240128,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c"
		},
		{
			"id": "d84b9c20-1141-5ae2-dddb-4f1a56359e89",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595169640,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "956d3c1c-a524-de01-d7dc-259bc5fd4b0e"
		},
		{
			"id": "d85119e1-e031-c22c-b495-8b71023c8425",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236298780,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "d94b1e99-3786-87ff-38d8-a23aa08f4413",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"ACCESS_TOKEN_REQUIRED\") {\n  tests[\"Empty FB login test\"] = true;\n}\nelse {\n  tests[\"Empty FB login test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437691833373,
			"name": "TC0018 - Login with Bizrate-Facebook User - Empty",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "d6147f53-a28f-1679-eab7-ead005f2fa96"
		},
		{
			"id": "d951ca92-3285-4ae1-c094-4c3158095ed4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595182347,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "d9f6ee0b-86b0-411d-0d84-f8a225530011",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236312954,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "dac668eb-932a-d4e9-5a9a-44bfdcffc27b",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "TC0015 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5",
			"isFromCollection": true
		},
		{
			"id": "dc4cb163-8725-60b3-a418-2cea75b10469",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0016 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "54f17951-5e2c-a048-a8d8-c8e8f223d44f",
			"isFromCollection": true
		},
		{
			"id": "deb7f48d-dfdb-5561-7344-36b51f7c7e55",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New2Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730314373,
			"name": "TC0024 - Login User with Password 2",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "df9cc5ba-0f70-7886-71d3-bbd23f8cc9d4",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975695249,
			"name": "TC0026 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c75c0e04-5491-0029-5ee2-912722dc4a77"
		},
		{
			"id": "e18c6021-923b-11cc-95e3-7e6fd6ee910c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "TC0015 - Create New Facebook Test User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "61dd8ab7-bf8e-492d-f409-65ffd0b547d5",
			"isFromCollection": true
		},
		{
			"id": "e4084d38-bccc-fce6-c2c4-8dcba4cf91f4",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438884235559,
			"name": "TC0022 - Reset Password",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"NewAbc123456!?\"\n}",
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6"
		},
		{
			"id": "e4b490a2-b087-ebcc-4a38-74efad1d70a1",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234818342,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "e55082e6-61ea-328f-ee62-48044b4d7ce6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236287206,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "4a7cfdee-44c1-96ca-19b6-f9b070b25d2d"
		},
		{
			"id": "e6597d9e-6d43-6759-dc4d-d3843753b1db",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\" &&\n    data.points_awarded == 1000 && data.points_next_redemption == 5000) {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439233029767,
			"name": "TC0027 - Update User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73"
		},
		{
			"id": "e68302a4-39e3-f244-c124-181ec60707a4",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_OR_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589156942,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "e734a750-03fb-85e2-5434-8b2d3280d94a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link2\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730207059,
			"name": "TC0024 - Verify Reset Password Email Contents 2",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "e871f6e1-daa0-f4ab-1f9f-53a2444f0af4",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0022 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "11ae66e0-791d-14c3-5f1c-8bbe19ce90f6",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "e8fa8339-3896-788e-b095-bf307734a4f1",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "e92bf897-5b07-4b66-62df-8a9005138649",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436229061247,
			"name": "TC0027 - Submit Survey Completion",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "92b9b5fa-b5c9-446e-ad47-f15520317d73",
			"isFromCollection": true
		},
		{
			"id": "e9e255ac-1840-0312-4468-d588034166ad",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588650405,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "deb6b5ed-371b-41a7-eeeb-fd097198a4ed"
		},
		{
			"id": "f07705b7-c0ca-145e-a96e-e6de1600b384",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437163945635,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "cb1674d3-1c89-d902-d2b5-43794df6d644"
		},
		{
			"id": "f1f94e10-2d72-c876-7334-ef7e7bd5b569",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_RESET_REJECTED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438731216718,
			"name": "TC0024 - Follow Reset Password Link 1",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0629e4c6-72c5-6d96-3a07-f7283326a253"
		},
		{
			"id": "f2411a2b-4320-9ef3-d0e1-7268d227163b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "f35bb5ac-5adb-1e15-c405-a06cac5576a8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944"
		},
		{
			"id": "f9714128-33d0-354d-0357-480c3e13f1fc",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "a2601463-0136-4ed0-bdb5-177400098052"
		},
		{
			"id": "f9dd0d1f-6210-867c-cc42-f55b874be7ba",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "b5f25b5f-6ee0-fd63-110a-5402a98c3944",
			"isFromCollection": true
		},
		{
			"id": "fa416ded-4eaf-c770-67c5-ab84e7442667",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438030454158,
			"name": "TC0020 - Save User Device - Empty",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "2a68b772-0aa6-29cc-c096-cff30165709c"
		},
		{
			"id": "fad0b0bf-7112-b25c-eaa3-951bb4273bc7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334377444,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "fb88730d-42c9-c805-6285-ea2d0870808d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438196832548,
			"name": "TC0021 - Save User Device",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "fca2ea7a-61ec-dbea-957c-5fc80110ef3a",
			"headers": "Authorization: Bearer {{g_access_token3}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333809820,
			"name": "TC0021 - Delete 3rd User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "0b6a0287-0326-bf06-b971-c91bfe9ed337"
		},
		{
			"id": "fd42dfd5-b132-0d10-2da0-5e58a65d03ea",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Gender Validation\"] = true;\n}\nelse {\n  tests[\"Gender Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589113419,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "18704a38-3ac9-4cc9-048a-c46cefa7d9cb"
		},
		{
			"id": "fda7b764-6ac0-90f4-1e36-e7151155f019",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595023918,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7657bd04-7046-9614-137b-2a24f8d4eeaf"
		},
		{
			"id": "ff9cb488-08c2-0107-5d6b-6642160fb094",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595234011,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"responses": [],
			"folder": "e4833d30-a97e-58f9-7f9f-68ccf2c4050c"
		}
	]
}