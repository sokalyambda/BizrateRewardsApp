{
	"id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
	"name": "Bizrate Rewards API (V 1.11.1)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "f358aa05-af18-fb16-179f-e5667c535cc6",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"4f674e86-776c-ee02-f1b6-e1aecf439ee0",
				"be2d4908-c5c2-1973-97d2-af3cdd8caa5d",
				"f99266ea-7935-af16-60cc-8fd3994b87cb",
				"4a3ac3ea-3ef7-ce08-c8c2-880a67878b6f",
				"71d26061-0efe-ffa8-ce4f-864755446029",
				"4417bd9a-a6e7-156b-a3e5-104a68e32805",
				"9ee8b961-5965-3a66-146c-5e79b39cef05",
				"ee91459e-5f86-c2bb-e8a1-30c0b280c069",
				"c15c7b6a-38be-7798-02ec-ea4f48bfbc88",
				"c53999a7-e604-17fd-bbfe-41bd20ee4c5a",
				"01b3ebae-d93b-ba30-5c63-f7c3e1344081",
				"ce46cc10-479f-7876-1a68-e9d4785bd96e",
				"c0591404-e6a3-b18b-8b2d-4c2e760ea2f9",
				"86064aba-1ccb-f5c9-9a49-84fc36ba8482",
				"dc7d050e-3cad-61ba-ea9d-d858465b589f",
				"dea76108-1eb1-b0c0-7af1-ea2e55960ae1",
				"3897a327-d453-1a8c-ea92-be095e66a81c",
				"7ec15e51-cfad-a448-8012-20ee5d80360f",
				"d07a1bde-e6bf-67bc-3a43-77544e1f2c26",
				"a7db10d7-3490-fa82-3e51-31b904a39db8",
				"fe36443b-b94a-ec91-7f47-5b97c7e6e206",
				"6e2b2759-5c8d-5d69-f294-cd4ab488faea"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		},
		{
			"id": "2348f276-7c68-2764-6732-0e52afa03ab0",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"7bd2bfb4-b968-4f6d-21d8-b0aa6e5b7db4",
				"59b4e5ed-b283-c58b-14d6-ae4df8d13fc1",
				"d2637d02-7cbd-699a-9e7d-64c3c964fcb0",
				"bd455d5b-332c-1e97-7cf6-fe1e8744fd21",
				"9400a344-e7ef-2f9c-5cd7-bb7b4a64828c"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "87f15fb3-3650-50b4-f449-039171839945",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"9c6374ac-54ee-b25d-2953-a4bc3c2669a6"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "d8e09a6a-9136-53af-f725-66ebbef8fae0",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"23c27573-f340-25cf-1bde-b7cb82e4c888",
				"7e72b827-ed8b-4663-91e4-1b5524a9fe23",
				"dd909abb-db4e-ba15-ef5b-ee4b2813abb9",
				"f1603949-d5c6-0ed6-1ec4-d44d4f8cb090"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "40c91163-9c5d-a2be-0ca8-8cf6d92f52f9",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"9d154da7-32f9-125b-d320-7ccca1bd4f8b"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "f8beec77-6990-fcee-df4e-8d19b42de027",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"a33cc1b6-2d1c-3f53-f413-23954b2c5eb2",
				"9da34e55-11e4-1d85-1212-b7dbe7126850",
				"1a9ea694-12ea-4a60-3a74-ea4e11985fc6",
				"69a19714-7fa7-ad52-085a-625b2766ece3"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "2c53fb55-48b7-8dc7-6983-4f4bb14105be",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"8e4a6d6c-b38d-d2b0-d905-d81cbfbc063c",
				"8108ad84-ca37-1d5e-8a06-faa8ca281225",
				"35b611d1-dc95-8aec-7617-2e1a0ba9454d",
				"a3a99ce6-7bda-fed6-2606-40b0f616d33f",
				"1095ea77-4db1-088f-dcd2-5096e1341283",
				"ee38bd26-ebdd-faff-d475-8d53a61d7557",
				"fe8f9b06-869c-a9ae-a1cc-7c561d775557",
				"69c3d62d-726e-7a30-c01b-0f37c87c1177",
				"4a883827-df43-503c-1f34-b66bac8f71a1",
				"10b20eb2-0114-f2a3-d455-bd46b27e5a36",
				"edcbdf34-61c3-9132-2a61-e3a09a68074f",
				"65ef2866-5bdf-7eef-fdf8-137b46b9feda",
				"6b6d1176-e242-4929-e3dd-6b16462418ee",
				"d665c5c8-e6eb-b163-8a11-2a1b9f96a209",
				"7adaa01a-08f8-d69c-e17f-d99c67112b2c",
				"24ad3673-e181-3a68-c6ba-4ffdc362d61d"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "9c68a644-343f-dad0-f3bf-324474476e56",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"087cc98e-7159-41b1-bf3d-ec486b8cbf29",
				"9bca4698-102c-0e54-248b-b9ab93878116",
				"3d786666-f4bd-f361-5d02-c5d13f64cb64",
				"43eb85cc-5857-e431-8b5b-01e17b053aaa"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "0cf193e9-47ad-4307-caba-0a5cd34e225d",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"cfe4c034-0789-e7bf-d024-8739e9c15c21",
				"33344087-b218-2810-c7df-e6d7315e29e6",
				"19df53a7-a2e0-5343-4599-d4a6d679787e",
				"eb072c86-063d-6876-286b-bcb72bc0806b",
				"02965254-58ce-932a-d07a-18e85d0b0394",
				"6086348f-ca00-da75-13d8-d2eaa2011c74",
				"1450b2a8-b9c6-283a-5808-0e8199a66d51"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "6c180bc4-c3f5-3482-51c5-0f1822cf9319",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"75b53dd2-1c9e-90e6-2eb3-2ac7d85be4de",
				"24368e1c-c1fe-f63c-6b26-b2128d36a231",
				"e2059951-44fc-b676-bdae-46f6f5e3cd0f",
				"438f6334-eaee-218e-7fa6-468f8e90b549",
				"4f31acdd-cabf-87a0-3e87-ed52766f7efc",
				"aafe0b4b-8b45-b8c1-4f3e-3378035dee1f",
				"64aef2d2-ddee-b311-d45c-98cb63a65f5d",
				"357ce569-57d4-f435-84ef-bbe165403530",
				"151bb911-311c-f4f2-797e-eb873f6e9610",
				"f1f23eae-c554-d356-893d-e05a286d6a8f",
				"ddc0cc91-c94f-5239-21e0-e4df5b23fa01",
				"cb80b5c7-bd7e-1226-6476-73b27e1fcb26",
				"9f13a69e-f7a7-4198-0372-b908b262a503",
				"602dc7b2-94f1-1c7e-db1e-62ba84342181",
				"e90a1176-04d1-3c9c-b45b-71c638b227c9",
				"f269eaa4-ed28-17bd-2275-d2cef1fea922",
				"b14388aa-65d0-c4f9-d500-bc3037398444",
				"d4046ad5-5fda-e910-9f3e-a0c24b2b3ab4",
				"f597ea3b-0aea-ecfd-05b6-796755d4fa7e",
				"46e96d15-b088-2872-bd8d-0bb6005ac5e5",
				"2140d7cb-445f-9630-bb6f-0d039cdb4bae",
				"ee508619-b64e-ce68-52d7-9b2b854405e8",
				"22207bdb-237d-8fc9-c821-2bbc69d7506a",
				"6a446c3c-0704-397f-7080-66d172c13137",
				"16564858-2bf5-f52d-b36d-2a4952bbb9fc"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "864c7f4c-9f9a-d331-50f6-47ce44cade8d"
		},
		{
			"id": "14510946-25ab-f407-cf5e-118664a14800",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"34958791-f4c5-2ff1-c2e5-6996981260c8",
				"d84b854a-bd4d-89c1-2b02-2cc25331315e",
				"53c37bae-cfcf-06f8-07bc-bcb3090ad236",
				"7734a4ef-597d-cf16-1812-7cb51a6517b5",
				"3d0cb2e4-46c3-eb01-53e5-eb0da4aa7db6",
				"94397b6d-ff9d-e56a-d5de-d881884460c8",
				"2dd107ee-88df-cc00-cda7-3fe1314247ef",
				"2f1fd12e-82ba-4178-1587-3c052e12c83f",
				"100f3a6c-a6d3-70bc-06ad-4b5afe82fc96"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "be159e96-5cbf-3fb3-6a6e-e0caf0139801"
		},
		{
			"id": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"d501f9fb-4673-fc30-9001-6bcf14905389",
				"a9234116-29fc-0430-f82d-f27c5d8e49ba",
				"3de7efe1-a9b5-abc4-94e8-9af1a2855dc6",
				"7a17f84c-9a3e-7ef3-28d9-062b73b7c454",
				"eea89114-1040-a36a-3804-56ad9bbf3dea"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "bfd49c0d-d05c-da76-5c06-6aae84159c5f",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"4febb353-d5a6-62a9-d565-6a8abe0107bd",
				"4551fafa-467d-bcc2-3ac0-f26e4f6d3188",
				"1b31160a-3bc7-1f92-8d2e-4673de41594f",
				"7c033e9e-3e02-4216-7a83-88789544e0c3",
				"d5f38e6d-3bb2-79ab-19e6-264d8a3631bd",
				"51be4abb-54d7-52f1-a0e5-d737afe56d9b"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"01470417-0c3c-aae8-e30d-4c9a44a3251d",
				"cc3ef826-3c84-5cfd-335c-531db2971dbf",
				"6a840bf6-8502-b626-cceb-8116b3d4609b",
				"33132db0-cfad-96e7-3a64-987c7d5815c3",
				"afcef5e2-a379-97a3-e703-3f0197fc479d",
				"218483b6-656c-40a4-ba5f-209a517233f4"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "62715541-8303-34be-c1af-21b4e8a10473",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"61dab125-56d1-a48a-872e-d708baa02be8",
				"e3948453-cc46-0e7b-130d-c1921df92c3f",
				"dd464bc7-3662-3ef5-1a3c-bf1a4063f11d",
				"ec5366f2-a900-ba52-a9ba-fd2e8c759ded",
				"19b06375-c157-f8be-0ad4-e387b0fc32e0",
				"8dbb1df7-9120-23fe-1311-e135480447ad",
				"167b597c-6177-83c0-3750-c89fbd891e0f",
				"ce6858a4-2741-bc51-1b9a-2bfb8f72db15",
				"42c86ec1-6f4d-ff8e-c1a2-c5ea3bd11041",
				"5c394c60-2a9f-df55-403f-1283d7f75b39"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "9b6ac4c5-9567-9264-6812-cc02517d69d6",
			"name": "TC0015 - Test Create New Bizrate-Facebook User",
			"description": "",
			"write": true,
			"order": [
				"a67e3495-83d4-ab8f-f5b6-8766556da816",
				"4cfd4708-ca9e-576e-dd02-9ae982ebad98",
				"3b63a849-55b4-39a4-b40c-b503cad2c408",
				"37170e74-fd00-b9f9-4498-3c7a6b4bacdd",
				"d278850d-f37d-f250-415c-8032d3778a66",
				"98dd3fe5-3c74-c36c-9109-fda12914645f"
			],
			"collection": "0a31db07-09cf-0d34-e70b-4c5bf0aafa0d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "409dba90-9ba6-78a7-ac94-c0c9fbd87bd9"
		},
		{
			"id": "145fd7f0-6eba-ab54-b48e-9826f600dddb",
			"name": "TC0016 - Test Create New Bizrate-Facebook User  Validations",
			"description": "",
			"write": true,
			"order": [
				"54f46716-66d3-fd06-78dd-a292e7fcc301",
				"503fc8dc-8c9b-03dc-f737-44b12e118434"
			],
			"collection": "7cc73dc2-b7b0-1e9d-47ff-b1fe02f2a0f4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f",
			"name": "TC0017 - Test Bizrate-Facebook Login",
			"description": "",
			"write": true,
			"order": [
				"a2604111-c7fa-5b52-e040-f49fd4032e96",
				"1e5aa84c-2101-a2bb-176e-5209bc50e0f1",
				"b57d4f9f-e240-cd67-aa80-7b82ccc4b632",
				"312021dd-087a-09bd-df8b-12674fc2566c",
				"9ee22a5a-fa62-6dc2-7a3e-98d65195f612",
				"dbc6b176-c12a-acde-3088-39ffb2ec795c",
				"cfcd614d-1641-70b3-6509-fedf999d3594"
			],
			"collection": "c3567692-1479-029d-1318-c508deb005d4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "34eeeb5a-cb3b-b619-4ca7-cbdb8f30deb5",
			"name": "TC0018 - Test Bizrate-Facebook Login - Validations",
			"description": "",
			"write": true,
			"order": [
				"47f7b766-c5a0-dd34-7ab6-bb0f9c3489ce",
				"3b2f76ba-f034-8f01-fa83-9da10619a01c",
				"9601e081-e6b2-0a3f-e08a-3a1d243c09c5"
			],
			"collection": "be159e96-5cbf-3fb3-6a6e-e0caf0139801",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324",
			"name": "TC0019 - Test Save User Device",
			"description": "test the same user with 2 devices",
			"write": true,
			"order": [
				"94ac0512-42a3-356f-6207-17b5c8be3c29",
				"07848a53-23bb-a268-4284-d9666020498f",
				"a582e886-bb1c-4e00-b77a-47e19b28aef6",
				"05665b30-501c-2d1e-acee-6ead0be9f291",
				"38e3a3e8-ed56-ac0b-3005-2f7b1610e7f0",
				"ad01a770-c1b8-bb20-5d0b-30354e5fb415"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "95e3bc6e-3480-c2d7-90d3-224479106e4d",
			"name": "TC0020 - Test Save User Device - Validations",
			"description": "test validations: negative test cases",
			"write": true,
			"order": [
				"13046817-091d-f519-293f-368076593f3c",
				"6fc645b4-4a18-797d-7618-6fbc8b45d463",
				"03e836c9-8171-93a0-525c-b4259c8e4a93",
				"4913b63d-1050-1483-a6c7-19266036221f",
				"d2e4061b-3b9f-1a00-3c67-2569d9bc0112",
				"cfe1de7a-2d9c-7e3d-f8c2-12160de454f2"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "94643950-a933-b5ae-d350-de5ba73c80f4",
			"name": "TC0021 - Test Save User Device - Transfer Device",
			"description": "Test cases for validating user's device.\nInclude test case with 2 users share 1 device",
			"write": true,
			"order": [
				"3dcad22f-3b31-0ee1-faf7-6439eb89c670",
				"9a2c893d-d0a0-8a81-02d3-0ec5376da2e6",
				"6112e713-96de-c6f6-eb35-c582aa9126a4",
				"08a78105-d087-a780-325e-8679ebd9d23c",
				"fe00523f-d6f3-e50a-616e-30474350d9a8",
				"630fbd89-021e-5109-4873-a9b57db46a08",
				"24e45f35-70ec-2799-f8cf-8dd6ba676947",
				"75427a2c-a72a-71a8-f42d-589a7159229e",
				"24ec9c00-1228-e81b-2298-ad2b33fefac8",
				"1df77514-ced6-8429-3885-cb820d686aad",
				"4673eb48-dc51-1188-f50d-de68441a9c5c",
				"683c464c-1955-33dd-bdee-be8842b0fc0b",
				"c6dd1d46-eeca-ded9-58ef-ce01e2e55512",
				"5307a7cc-f87f-aebb-7ab7-f4b47f1afc7e",
				"42c5c8c4-ee96-bfaf-78d5-5e42ad9ace1a",
				"1e6a1560-779e-9fc5-a58e-22f8041c75a7",
				"a1650207-f569-29ac-336c-abdfe1f7d16a"
			],
			"collection": "6f04cf03-e3d4-160b-b968-20c0c58272de",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "0ef87fc6-0f32-56a3-d038-dfe50baed65d"
		},
		{
			"id": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"name": "TC0022 - Test Reset Password",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email\n- Follow the link to activate password\n- Use the access token to login \n- Use the old password to be denied access\n- Use the new password to confirm the password reset worked.",
			"write": true,
			"order": [
				"82a0017a-225c-ebf0-0a93-fe136112e7a2",
				"78fa90b8-a058-1da0-a6dd-291c7ff0a46f",
				"333c7977-c93a-7456-b850-32615e63ae66",
				"4b5485da-3465-4639-d0e8-470101e70ecb",
				"0830d050-64a0-360f-7021-430d7c6fe424",
				"8aead100-f437-3321-415e-d8751241d97b",
				"b84fe4c3-d07e-4913-d186-bfae2a68dd6c",
				"0c42680d-46f5-97e6-3c59-6e08880a4e91",
				"e0d6518b-4995-7275-4084-f035c685ed3b",
				"c165c86e-6878-eab4-2e15-cb9817fdb4b9",
				"c40e3fce-f474-d365-b6a6-197c0d880773",
				"f19a1a25-9c5e-eb95-230a-0b1c77ac76f6"
			],
			"collection": "1810e467-54e0-f716-46cd-be101e5adaf6",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0",
			"name": "TC0023 - Test Reset Password - Validations",
			"description": "",
			"write": true,
			"order": [
				"73bbf15b-b6f0-7d86-c5e8-9c38a68242d6",
				"b81240a6-5df8-4259-f218-a890107a9ecc",
				"a40a5bcf-3a13-3f6c-d862-d78eae8b3d07",
				"b5094663-8258-252d-6b32-c5b6d5b16e72",
				"e86daed8-70c1-6908-7075-6d2bc96aa594",
				"3e54e14b-615f-0ecd-84e0-5c523bca0632"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "b7fc31ec-2e06-7850-9f09-ecf787e2704d"
		},
		{
			"id": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"name": "TC0024 - Test Reset Password with Multiple Requests",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email and save as link1\n- Reset password again\n- Verify the reset password email again\n- Find the link in the reset password email and save as link2\n- Follow the link to activate password in link1 and it should fail\n- Follow the link to activate password in link2 and it should succeed\n- Use the access token to login \n- Use the password used in first attempt to be denied access\n- Use the password used in second attempt and it should work.",
			"write": true,
			"order": [
				"2dc06d6a-0c22-a0b6-d58a-a9829c9bdb3c",
				"b8282897-ed8c-6552-3696-9454c31ca6d6",
				"dee9acfc-799b-d231-d882-cdaf76c24bf2",
				"f21362fa-2605-cf61-ac23-c217df3dcf9b",
				"bf76a96a-fc38-deab-b4dd-6238b5d2a741",
				"0257fc00-48a4-53cc-dda4-2b854e205db9",
				"3bd4d7ff-9a07-546e-85a4-5bb2374056ba",
				"feaa22e2-0f2c-9681-f59a-cd93cabb76e8",
				"41c54d3a-1d04-a4f7-741d-ffd81ec14351",
				"ef647a9b-5276-d46f-b861-fa1f260b9f8a",
				"6315714e-1ec6-7c40-ebf7-1050234bb0b7",
				"7525950c-7362-891d-f834-04106329d2bc",
				"4f344de2-58e6-2c41-e263-64b6487c28fd",
				"50403126-9868-fa35-2ab3-8fc0503fdc9e",
				"ea5d4f5b-3b94-276d-cf3a-f1c4b33a216f"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "8c2c5637-3c32-a134-8ce7-e19b795dd207",
			"name": "TC0025 - Test Get Featured Giftcards",
			"description": "",
			"write": true,
			"order": [
				"4a8acb12-423d-5c14-1ad1-c5234e6ae3c8",
				"e51b001d-397e-282c-5ab9-9c8b5eafb443",
				"8360cd7c-576c-50f0-7f2d-099a5f291c42",
				"712a3619-33e0-9922-26e1-64cff5a48033"
			],
			"collection": "b3fdc6f9-c682-0e99-525b-491eb58c5e45",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "4a65cf2e-ae3b-3859-bc2d-38d623b9ff21",
			"name": "TC0026 - Test Refresh User Access Token",
			"description": "",
			"write": true,
			"order": [
				"f581e603-ead4-1e5f-476d-873190b48a89",
				"15f736d4-8d23-461f-c226-e39e374d0fb5",
				"a6aa2f2b-3454-8112-7021-57b0ec79ca1d",
				"e6607e6b-d35b-d5e1-a6d3-9b814553a672"
			],
			"collection": "e16f6a2e-71c9-f794-f8e5-d48220555cfd",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collectionId": "e16f6a2e-71c9-f794-f8e5-d48220555cfd"
		},
		{
			"id": "b0012c9e-9050-eea6-1707-10aaab6274b1",
			"name": "TC0027 - Test Points Awarded and Points Next Redemption",
			"description": "Test to verify points_awarded and points_next_redemption are calculated and returned correctly.",
			"write": true,
			"order": [
				"4b7e0769-f9e3-7393-1fe9-8bea23530628",
				"46d8915d-f773-ed67-7055-c3d6c8db65fa",
				"cf06cead-554a-1aa8-7ba7-d3171fe6d2e7",
				"261ff6ef-7f2e-7db3-17e7-91d77af5fb65",
				"7cad0dc5-eaf3-6a33-d48d-ffcd328f19d2",
				"d106ac77-dea3-6b7c-5488-a002641d1e7b",
				"c402ff6f-519e-8c2a-cc80-058fb5b5934d",
				"424abc9a-3868-e093-c0ae-9c8cc12aa71d",
				"fa35147b-b3b0-5b42-73cb-5c550a611515"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "864c7f4c-9f9a-d331-50f6-47ce44cade8d",
			"owner": "66688",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "b934ec72-f7ef-23be-93da-2d81fc1bc21e",
			"name": "TC0028 - Test Sync User Points Awarded",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"a1addeb7-e91c-0f4d-e138-1a45659c5842",
				"d9caedc2-7146-117d-d0e0-050f7fe9ad82",
				"2806f3ed-a8d8-dfeb-a76d-fc70462f47a5",
				"1b4461bd-b4b6-8517-ab99-b65b6c4f561d",
				"7c694f81-91a8-9c0f-5084-dba721e83e1e",
				"d27afbfa-db53-34fc-e89f-7ce588655bc2",
				"4cf1038d-29c1-b7e8-812c-bb80b4893c73",
				"73edd3d9-7d22-4ae4-a865-0e0032549bf2",
				"0eda3b82-21f2-d25b-4e70-8dffd3264564",
				"803d0d34-07a0-0a62-4435-cfa14ff178ad",
				"daee5ef7-945d-4816-2645-637b6b61c50c"
			],
			"collection_name": "Bizrate Rewards API (V 1.11.1)",
			"collection_owner": "66688",
			"collection_id": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"collection": "a55d839f-35d0-2396-5d42-2826bdfc9553",
			"owner": "66688",
			"collectionId": "a55d839f-35d0-2396-5d42-2826bdfc9553"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "01470417-0c3c-aae8-e30d-4c9a44a3251d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595234011,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21"
		},
		{
			"id": "01b3ebae-d93b-ba30-5c63-f7c3e1344081",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "0257fc00-48a4-53cc-dda4-2b854e205db9",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link1\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730152060,
			"name": "TC0024 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "02965254-58ce-932a-d07a-18e85d0b0394",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "03e836c9-8171-93a0-525c-b4259c8e4a93",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438030454158,
			"name": "TC0020 - Save User Device - Empty",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d"
		},
		{
			"id": "05665b30-501c-2d1e-acee-6ead0be9f291",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0019 - Save User second device",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324"
		},
		{
			"id": "07848a53-23bb-a268-4284-d9666020498f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0019 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324"
		},
		{
			"id": "0830d050-64a0-360f-7021-430d7c6fe424",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0022 - Verify Reset Password Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "087cc98e-7159-41b1-bf3d-ec486b8cbf29",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595147291,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9c68a644-343f-dad0-f3bf-324474476e56"
		},
		{
			"id": "08a78105-d087-a780-325e-8679ebd9d23c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPad Mini\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334500045,
			"name": "TC0021 - Save User 2nd Device",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa345\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPad Mini\"\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "0c42680d-46f5-97e6-3c59-6e08880a4e91",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0022 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "0eda3b82-21f2-d25b-4e70-8dffd3264564",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar pointsAwarded = 500 + parseInt(environment[\"g_survey_points\"], 10);\n\nif (data.Result[0] && parseInt(data.Result[0].Points, 10) == pointsAwarded) {\n  tests[\"Contact fetched\"] = true;\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342946452,
			"name": "TA0028 - TA Get Contact By Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "100f3a6c-a6d3-70bc-06ad-4b5afe82fc96",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "14510946-25ab-f407-cf5e-118664a14800",
			"isFromCollection": true
		},
		{
			"id": "1095ea77-4db1-088f-dcd2-5096e1341283",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0006 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be",
			"isFromCollection": true,
			"collectionRequestId": "1095ea77-4db1-088f-dcd2-5096e1341283"
		},
		{
			"id": "10b20eb2-0114-f2a3-d455-bd46b27e5a36",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588864021,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "13046817-091d-f519-293f-368076593f3c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0020 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d"
		},
		{
			"id": "1450b2a8-b9c6-283a-5808-0e8199a66d51",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d",
			"isFromCollection": true
		},
		{
			"id": "151bb911-311c-f4f2-797e-eb873f6e9610",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234917572,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "15f736d4-8d23-461f-c226-e39e374d0fb5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975695249,
			"name": "TC0026 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4a65cf2e-ae3b-3859-bc2d-38d623b9ff21"
		},
		{
			"id": "16564858-2bf5-f52d-b36d-2a4952bbb9fc",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319",
			"isFromCollection": true
		},
		{
			"id": "167b597c-6177-83c0-3750-c89fbd891e0f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "19b06375-c157-f8be-0ad4-e387b0fc32e0",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "19df53a7-a2e0-5343-4599-d4a6d679787e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "1a9ea694-12ea-4a60-3a74-ea4e11985fc6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f8beec77-6990-fcee-df4e-8d19b42de027"
		},
		{
			"id": "1b31160a-3bc7-1f92-8d2e-4673de41594f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073135571,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f"
		},
		{
			"id": "1b4461bd-b4b6-8517-ab99-b65b6c4f561d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" && data.points_awarded == 500) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342186523,
			"name": "TC0028 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "1df77514-ced6-8429-3885-cb820d686aad",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 7S+++\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334485804,
			"name": "TC0021 - Save User Device - Duplicate Device Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa678\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPhone 7S+++\"\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "1e5aa84c-2101-a2bb-176e-5209bc50e0f1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516530203,
			"name": "TC0017 - Create New Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f",
			"isFromCollection": true
		},
		{
			"id": "1e6a1560-779e-9fc5-a58e-22f8041c75a7",
			"headers": "Authorization: Bearer {{g_access_token2}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126629309,
			"name": "TC0021 - Delete 2nd User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "2140d7cb-445f-9630-bb6f-0d039cdb4bae",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234900253,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "218483b6-656c-40a4-ba5f-209a517233f4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21",
			"isFromCollection": true
		},
		{
			"id": "22207bdb-237d-8fc9-c821-2bbc69d7506a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Tes user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234941884,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "23c27573-f340-25cf-1bde-b7cb82e4c888",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "d8e09a6a-9136-53af-f725-66ebbef8fae0",
			"isFromCollection": true,
			"collectionRequestId": "23c27573-f340-25cf-1bde-b7cb82e4c888"
		},
		{
			"id": "24368e1c-c1fe-f63c-6b26-b2128d36a231",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595187960,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "24ad3673-e181-3a68-c6ba-4ffdc362d61d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "24e45f35-70ec-2799-f8cf-8dd6ba676947",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198446741,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "24ec9c00-1228-e81b-2298-ad2b33fefac8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email3\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token3\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333787190,
			"name": "TC0021 - Create 3rd New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email3}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\",\n    \"is_test_user\" : true\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "261ff6ef-7f2e-7db3-17e7-91d77af5fb65",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Jane\" &&\n    data.points_awarded == 500 &&\n    data.points_next_redemption == 5000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404892581,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": []
		},
		{
			"id": "2806f3ed-a8d8-dfeb-a76d-fc70462f47a5",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.Result[0].ContactId && data.Result[0].Points == 500) {\n  tests[\"Contact fetched\"] = true;\n  postman.setEnvironmentVariable(\"g_contact_id\", data.Result[0].ContactId);\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439341995073,
			"name": "TC0028 - TA Get Contact By Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "2dc06d6a-0c22-a0b6-d58a-a9829c9bdb3c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0024 - API Info",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "2dd107ee-88df-cc00-cda7-3fe1314247ef",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "2f1fd12e-82ba-4178-1587-3c052e12c83f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "312021dd-087a-09bd-df8b-12674fc2566c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588934907,
			"name": "TC0017 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f"
		},
		{
			"id": "33132db0-cfad-96e7-3a64-987c7d5815c3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007791106,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21"
		},
		{
			"id": "33344087-b218-2810-c7df-e6d7315e29e6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595169640,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "333c7977-c93a-7456-b850-32615e63ae66",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0022 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "34958791-f4c5-2ff1-c2e5-6996981260c8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594912508,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "357ce569-57d4-f435-84ef-bbe165403530",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236273130,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "35b611d1-dc95-8aec-7617-2e1a0ba9454d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Gender Validation\"] = true;\n}\nelse {\n  tests[\"Gender Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589113419,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "37170e74-fd00-b9f9-4498-3c7a6b4bacdd",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588934907,
			"name": "TC0015 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6"
		},
		{
			"id": "3897a327-d453-1a8c-ea92-be095e66a81c",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "Get Facebook App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "38e3a3e8-ed56-ac0b-3005-2f7b1610e7f0",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438206048739,
			"name": "TC0019 - Get User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324"
		},
		{
			"id": "3b2f76ba-f034-8f01-fa83-9da10619a01c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"ACCESS_TOKEN_REQUIRED\") {\n  tests[\"Empty FB login test\"] = true;\n}\nelse {\n  tests[\"Empty FB login test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437691833373,
			"name": "TC0018 - Login with Bizrate-Facebook User - Empty",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "34eeeb5a-cb3b-b619-4ca7-cbdb8f30deb5"
		},
		{
			"id": "3b63a849-55b4-39a4-b40c-b503cad2c408",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0015 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6"
		},
		{
			"id": "3bd4d7ff-9a07-546e-85a4-5bb2374056ba",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885930559,
			"name": "TC0024 - Reset Password 2",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New2Abc123456!?\"\n}",
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "3d0cb2e4-46c3-eb01-53e5-eb0da4aa7db6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "3d786666-f4bd-f361-5d02-c5d13f64cb64",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601889389,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9c68a644-343f-dad0-f3bf-324474476e56"
		},
		{
			"id": "3dcad22f-3b31-0ee1-faf7-6439eb89c670",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0021 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "3de7efe1-a9b5-abc4-94e8-9af1a2855dc6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5"
		},
		{
			"id": "3e54e14b-615f-0ecd-84e0-5c523bca0632",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors, \"EMAIL_INVALID_FORMAT\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors, \"PASSWORD_INVALID\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372500480,
			"name": "TC0023 - Reset Password - Invalid Email & Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email.test.com\",\n    \"password\": \"Abc\"\n}",
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0"
		},
		{
			"id": "41c54d3a-1d04-a4f7-741d-ffd81ec14351",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link2\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730207059,
			"name": "TC0024 - Verify Reset Password Email Contents 2",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "424abc9a-3868-e093-c0ae-9c8cc12aa71d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname &&\n    data.firstname == \"Janet\" &&\n    data.points_awarded == 5001 &&\n    data.points_next_redemption == 10000) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405478766,
			"name": "TC0027 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": []
		},
		{
			"id": "42c5c8c4-ee96-bfaf-78d5-5e42ad9ace1a",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0021 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4",
			"isFromCollection": true
		},
		{
			"id": "42c86ec1-6f4d-ff8e-c1a2-c5ea3bd11041",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "438f6334-eaee-218e-7fa6-468f8e90b549",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236125960,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "43eb85cc-5857-e431-8b5b-01e17b053aaa",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9c68a644-343f-dad0-f3bf-324474476e56"
		},
		{
			"id": "4417bd9a-a6e7-156b-a3e5-104a68e32805",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "4551fafa-467d-bcc2-3ac0-f26e4f6d3188",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595223607,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f"
		},
		{
			"id": "4673eb48-dc51-1188-f50d-de68441a9c5c",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334438845,
			"name": "TC0021 - Save User Device - Duplicate UID and Device Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "46d8915d-f773-ed67-7055-c3d6c8db65fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595169640,
			"name": "TC0027 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "b0012c9e-9050-eea6-1707-10aaab6274b1"
		},
		{
			"id": "46e96d15-b088-2872-bd8d-0bb6005ac5e5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236312954,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "47f7b766-c5a0-dd34-7ab6-bb0f9c3489ce",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0018 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "34eeeb5a-cb3b-b619-4ca7-cbdb8f30deb5"
		},
		{
			"id": "4913b63d-1050-1483-a6c7-19266036221f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device UID Test\"] = true;\n}\nelse {\n tests[\"Missing Device UID Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032442495,
			"name": "TC0020 - Save User Device - Missing Device UID",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_token\": \"APNS_DEVICE_TOKEN\"\n}",
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d"
		},
		{
			"id": "4a3ac3ea-3ef7-ce08-c8c2-880a67878b6f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "4a883827-df43-503c-1f34-b66bac8f71a1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588857620,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "4a8acb12-423d-5c14-1ad1-c5234e6ae3c8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0025 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "8c2c5637-3c32-a134-8ce7-e19b795dd207"
		},
		{
			"id": "4b5485da-3465-4639-d0e8-470101e70ecb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438884235559,
			"name": "TC0022 - Reset Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"NewAbc123456!?\"\n}",
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1"
		},
		{
			"id": "4b7e0769-f9e3-7393-1fe9-8bea23530628",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595162450,
			"name": "TC0027 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b0012c9e-9050-eea6-1707-10aaab6274b1"
		},
		{
			"id": "4cf1038d-29c1-b7e8-812c-bb80b4893c73",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436229061247,
			"name": "TC0028 - Submit Survey Completion",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "4cfd4708-ca9e-576e-dd02-9ae982ebad98",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "TC0015 - Create New Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6",
			"isFromCollection": true
		},
		{
			"id": "4f31acdd-cabf-87a0-3e87-ed52766f7efc",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234680873,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "4f344de2-58e6-2c41-e263-64b6487c28fd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New1Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730299231,
			"name": "TC0024 - Login User with Password 1",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "4f674e86-776c-ee02-f1b6-e1aecf439ee0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588650405,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "4febb353-d5a6-62a9-d565-6a8abe0107bd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595216594,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f"
		},
		{
			"id": "503fc8dc-8c9b-03dc-f737-44b12e118434",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB Access Token Test\"] = true;\n}\nelse {\n  tests[\"Invalid FB Access Token Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437593820527,
			"name": "TC0016 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"invalid_fb_access_token1\"\n    }\n}",
			"folder": "145fd7f0-6eba-ab54-b48e-9826f600dddb"
		},
		{
			"id": "50403126-9868-fa35-2ab3-8fc0503fdc9e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New2Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730314373,
			"name": "TC0024 - Login User with Password 2",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "51be4abb-54d7-52f1-a0e5-d737afe56d9b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f",
			"isFromCollection": true
		},
		{
			"id": "5307a7cc-f87f-aebb-7ab7-f4b47f1afc7e",
			"headers": "Authorization: Bearer {{g_access_token3}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334527756,
			"name": "TC0021 - Get 3rd User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "53c37bae-cfcf-06f8-07bc-bcb3090ad236",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "54f46716-66d3-fd06-78dd-a292e7fcc301",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0016 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "145fd7f0-6eba-ab54-b48e-9826f600dddb",
			"isFromCollection": true
		},
		{
			"id": "59b4e5ed-b283-c58b-14d6-ae4df8d13fc1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2348f276-7c68-2764-6732-0e52afa03ab0",
			"isFromCollection": true,
			"collectionRequestId": "59b4e5ed-b283-c58b-14d6-ae4df8d13fc1"
		},
		{
			"id": "5c394c60-2a9f-df55-403f-1283d7f75b39",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "62715541-8303-34be-c1af-21b4e8a10473",
			"isFromCollection": true
		},
		{
			"id": "602dc7b2-94f1-1c7e-db1e-62ba84342181",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236208705,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "6086348f-ca00-da75-13d8-d2eaa2011c74",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "6112e713-96de-c6f6-eb35-c582aa9126a4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438196832548,
			"name": "TC0021 - Save User Device",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "61dab125-56d1-a48a-872e-d708baa02be8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595248909,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "630fbd89-021e-5109-4873-a9b57db46a08",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333630797,
			"name": "TC0021 - Save User Device - Duplicate Device UID",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN3\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "6315714e-1ec6-7c40-ebf7-1050234bb0b7",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link2}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730263719,
			"name": "TC0024 - Follow Reset Password Link 2",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "64aef2d2-ddee-b311-d45c-98cb63a65f5d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234800110,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "65ef2866-5bdf-7eef-fdf8-137b46b9feda",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588875516,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "683c464c-1955-33dd-bdee-be8842b0fc0b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334377444,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "69a19714-7fa7-ad52-085a-625b2766ece3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f8beec77-6990-fcee-df4e-8d19b42de027",
			"isFromCollection": true
		},
		{
			"id": "69c3d62d-726e-7a30-c01b-0f37c87c1177",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588851510,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "6a446c3c-0704-397f-7080-66d172c13137",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "6a840bf6-8502-b626-cceb-8116b3d4609b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007520567,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21"
		},
		{
			"id": "6b6d1176-e242-4929-e3dd-6b16462418ee",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588882333,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "6e2b2759-5c8d-5d69-f294-cd4ab488faea",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589888750,
			"name": "Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "6fc645b4-4a18-797d-7618-6fbc8b45d463",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0020 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d"
		},
		{
			"id": "712a3619-33e0-9922-26e1-64cff5a48033",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0025 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "8c2c5637-3c32-a134-8ce7-e19b795dd207",
			"isFromCollection": true
		},
		{
			"id": "71d26061-0efe-ffa8-ce4f-864755446029",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "Refresh User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "73bbf15b-b6f0-7d86-c5e8-9c38a68242d6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0023 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0",
			"isFromCollection": true
		},
		{
			"id": "73edd3d9-7d22-4ae4-a865-0e0032549bf2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436230651181,
			"name": "TC0028 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "7525950c-7362-891d-f834-04106329d2bc",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0024 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "75427a2c-a72a-71a8-f42d-589a7159229e",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126749791,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "75b53dd2-1c9e-90e6-2eb3-2ac7d85be4de",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595182347,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "7734a4ef-597d-cf16-1812-7cb51a6517b5",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "78fa90b8-a058-1da0-a6dd-291c7ff0a46f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0022 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "7a17f84c-9a3e-7ef3-28d9-062b73b7c454",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236464313,
			"name": "TC0011 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5"
		},
		{
			"id": "7adaa01a-08f8-d69c-e17f-d99c67112b2c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588899204,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "7bd2bfb4-b968-4f6d-21d8-b0aa6e5b7db4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "2348f276-7c68-2764-6732-0e52afa03ab0",
			"isFromCollection": true,
			"collectionRequestId": "7bd2bfb4-b968-4f6d-21d8-b0aa6e5b7db4"
		},
		{
			"id": "7c033e9e-3e02-4216-7a83-88789544e0c3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073140763,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f"
		},
		{
			"id": "7c694f81-91a8-9c0f-5084-dba721e83e1e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n    postman.setEnvironmentVariable(\"g_survey_points\", data[0].points);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342250765,
			"name": "TC0028 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "7cad0dc5-eaf3-6a33-d48d-ffcd328f19d2",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "PUT",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "5000",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n    tests[\"Contact points set\"] = true;\n} else {\n    tests[\"Contact points set\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405999526,
			"name": "TC0027 - TA Set Contact Incentive Points",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "7e72b827-ed8b-4663-91e4-1b5524a9fe23",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "d8e09a6a-9136-53af-f725-66ebbef8fae0",
			"isFromCollection": true,
			"collectionRequestId": "7e72b827-ed8b-4663-91e4-1b5524a9fe23"
		},
		{
			"id": "7ec15e51-cfad-a448-8012-20ee5d80360f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "Create New Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "803d0d34-07a0-0a62-4435-cfa14ff178ad",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\nvar pointsAwarded = 500 + parseInt(environment[\"g_survey_points\"], 10);\n\nif (data.firstname && data.firstname == \"Jane\" && data.points_awarded == pointsAwarded) {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342986005,
			"name": "TC0028 - Get Logged In User copy",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "8108ad84-ca37-1d5e-8a06-faa8ca281225",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588825223,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "82a0017a-225c-ebf0-0a93-fe136112e7a2",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0022 - API Info",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "8360cd7c-576c-50f0-7f2d-099a5f291c42",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}giftcards/featured",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 8) {\n  tests[\"Test get featured giftcards\"] = true;\n}\nelse {\n    tests[\"Test get featured giftcards\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438730368482,
			"name": "TC0025 - Get Featured Giftcards",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "8c2c5637-3c32-a134-8ce7-e19b795dd207"
		},
		{
			"id": "86064aba-1ccb-f5c9-9a49-84fc36ba8482",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "8aead100-f437-3321-415e-d8751241d97b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438651505885,
			"name": "TC0022 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "8dbb1df7-9120-23fe-1311-e135480447ad",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "8e4a6d6c-b38d-d2b0-d905-d81cbfbc063c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589286351,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "9400a344-e7ef-2f9c-5cd7-bb7b4a64828c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "2348f276-7c68-2764-6732-0e52afa03ab0",
			"isFromCollection": true,
			"collectionRequestId": "9400a344-e7ef-2f9c-5cd7-bb7b4a64828c"
		},
		{
			"id": "94397b6d-ff9d-e56a-d5de-d881884460c8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437693825016,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "94ac0512-42a3-356f-6207-17b5c8be3c29",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0019 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324"
		},
		{
			"id": "9601e081-e6b2-0a3f-e08a-3a1d243c09c5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB access token test\"] = true;\n}\nelse {\n  tests[\"Invalid FB access token test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437695889495,
			"name": "TC0018 - Login with Bizrate-Facebook User - Invalid Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"invalid_fb_access_token1\"\n}",
			"folder": "34eeeb5a-cb3b-b619-4ca7-cbdb8f30deb5"
		},
		{
			"id": "98dd3fe5-3c74-c36c-9109-fda12914645f",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "TC0015 - Delete Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6",
			"isFromCollection": true
		},
		{
			"id": "9a2c893d-d0a0-8a81-02d3-0ec5376da2e6",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0021 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "9bca4698-102c-0e54-248b-b9ab93878116",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595153291,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "9c68a644-343f-dad0-f3bf-324474476e56"
		},
		{
			"id": "9c6374ac-54ee-b25d-2953-a4bc3c2669a6",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "87f15fb3-3650-50b4-f449-039171839945"
		},
		{
			"id": "9d154da7-32f9-125b-d320-7ccca1bd4f8b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "40c91163-9c5d-a2be-0ca8-8cf6d92f52f9"
		},
		{
			"id": "9da34e55-11e4-1d85-1212-b7dbe7126850",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "f8beec77-6990-fcee-df4e-8d19b42de027"
		},
		{
			"id": "9ee22a5a-fa62-6dc2-7a3e-98d65195f612",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437684537023,
			"name": "TC0017 - Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f"
		},
		{
			"id": "9ee8b961-5965-3a66-146c-5e79b39cef05",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "9f13a69e-f7a7-4198-0372-b908b262a503",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234912311,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "a1650207-f569-29ac-336c-abdfe1f7d16a",
			"headers": "Authorization: Bearer {{g_access_token3}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email3\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439333809820,
			"name": "TC0021 - Delete 3rd User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "a1addeb7-e91c-0f4d-e138-1a45659c5842",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595162450,
			"name": "TC0028 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "a2604111-c7fa-5b52-e040-f49fd4032e96",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516520957,
			"name": "TC0017 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f",
			"isFromCollection": true
		},
		{
			"id": "a33cc1b6-2d1c-3f53-f413-23954b2c5eb2",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f8beec77-6990-fcee-df4e-8d19b42de027"
		},
		{
			"id": "a3a99ce6-7bda-fed6-2606-40b0f616d33f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588839342,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "a40a5bcf-3a13-3f6c-d862-d78eae8b3d07",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Password Test\"] = true;\n}\nelse {\n tests[\"Missing Password Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372387059,
			"name": "TC0023 - Reset Password - Missing Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\"\n}",
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0"
		},
		{
			"id": "a582e886-bb1c-4e00-b77a-47e19b28aef6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPAD Air\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438205980205,
			"name": "TC0019 - Save User Device",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa212\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPAD Air\"\n}",
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324"
		},
		{
			"id": "a67e3495-83d4-ab8f-f5b6-8766556da816",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "TC0015 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6",
			"isFromCollection": true
		},
		{
			"id": "a6aa2f2b-3454-8112-7021-57b0ec79ca1d",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "refresh_token",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "refresh_token",
					"value": "{{g_refresh_token}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975257956,
			"name": "TC0026 - Refresh User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4a65cf2e-ae3b-3859-bc2d-38d623b9ff21",
			"isFromCollection": true
		},
		{
			"id": "a7db10d7-3490-fa82-3e51-31b904a39db8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437684537023,
			"name": "Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6",
			"isFromCollection": true
		},
		{
			"id": "a9234116-29fc-0430-f82d-f27c5d8e49ba",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588917203,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5"
		},
		{
			"id": "aafe0b4b-8b45-b8c1-4f3e-3378035dee1f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236171279,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "ad01a770-c1b8-bb20-5d0b-30354e5fb415",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0019 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "572a2d51-b6c9-8cd5-f3cf-83b0f8b3f324",
			"isFromCollection": true
		},
		{
			"id": "afcef5e2-a379-97a3-e703-3f0197fc479d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21"
		},
		{
			"id": "b14388aa-65d0-c4f9-d500-bc3037398444",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234905684,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "b5094663-8258-252d-6b32-c5b6d5b16e72",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Email Test\"] = true;\n}\nelse {\n tests[\"Missing Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372366012,
			"name": "TC0023 - Reset Password - Missing Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"password\": \"Abc123456!?\"\n}",
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0"
		},
		{
			"id": "b57d4f9f-e240-cd67-aa80-7b82ccc4b632",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0017 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f"
		},
		{
			"id": "b81240a6-5df8-4259-f218-a890107a9ecc",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372093977,
			"name": "TC0023 - Reset Password - Empty",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0"
		},
		{
			"id": "b8282897-ed8c-6552-3696-9454c31ca6d6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0024 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "b84fe4c3-d07e-4913-d186-bfae2a68dd6c",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729618776,
			"name": "TC0022 - Follow Reset Password Link",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1"
		},
		{
			"id": "bd455d5b-332c-1e97-7cf6-fe1e8744fd21",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404843160,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": []
		},
		{
			"id": "be2d4908-c5c2-1973-97d2-af3cdd8caa5d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"g_refresh_token\", data.refresh_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438975170336,
			"name": "Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "bf76a96a-fc38-deab-b4dd-6238b5d2a741",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "c0591404-e6a3-b18b-8b2d-4c2e760ea2f9",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "c15c7b6a-38be-7798-02ec-ea4f48bfbc88",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "c165c86e-6878-eab4-2e15-cb9817fdb4b9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "NewAbc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728788941,
			"name": "TC0022 - Login User with New Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1"
		},
		{
			"id": "c402ff6f-519e-8c2a-cc80-058fb5b5934d",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "PUT",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "5001",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n    tests[\"Contact points set\"] = true;\n} else {\n    tests[\"Contact points set\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439406009442,
			"name": "TC0027 - TA Set Contact Incentive Points",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f"
		},
		{
			"id": "c40e3fce-f474-d365-b6a6-197c0d880773",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_ALREADY_CONFIRMED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729700250,
			"name": "TC0022 - Follow Reset Password Link Again",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1"
		},
		{
			"id": "c53999a7-e604-17fd-bbfe-41bd20ee4c5a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "c6dd1d46-eeca-ded9-58ef-ce01e2e55512",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 0) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439334030730,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "cb80b5c7-bd7e-1226-6476-73b27e1fcb26",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236287206,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "cc3ef826-3c84-5cfd-335c-531db2971dbf",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595240128,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4f281e35-8e8d-d6e5-1b9d-0695999f7e21"
		},
		{
			"id": "ce46cc10-479f-7876-1a68-e9d4785bd96e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "ce6858a4-2741-bc51-1b9a-2bfb8f72db15",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "cf06cead-554a-1aa8-7ba7-d3171fe6d2e7",
			"headers": "",
			"url": "https://survey.qualtrics.com/WRAPI/Contacts/api.php?Request=getContactByInfoFields&User=api-user&Token=mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy&Format=JSON&Version=2.3&Email={{g_new_email}}&EmbeddedData=1",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.Result[0].ContactId && data.Result[0].Points == 500) {\n  tests[\"Contact fetched\"] = true;\n  postman.setEnvironmentVariable(\"g_contact_id\", data.Result[0].ContactId);\n}\nelse {\n  tests[\"Contact fetched\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1439341995073,
			"name": "TC0027 - TA Get Contact By Email",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"folder": "b0012c9e-9050-eea6-1707-10aaab6274b1",
			"isFromCollection": true,
			"collectionRequestId": "cf06cead-554a-1aa8-7ba7-d3171fe6d2e7"
		},
		{
			"id": "cfcd614d-1641-70b3-6509-fedf999d3594",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516536928,
			"name": "TC0017 - Delete Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f",
			"isFromCollection": true
		},
		{
			"id": "cfe1de7a-2d9c-7e3d-f8c2-12160de454f2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0020 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d",
			"isFromCollection": true
		},
		{
			"id": "cfe4c034-0789-e7bf-d024-8739e9c15c21",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595162450,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "d07a1bde-e6bf-67bc-3a43-77544e1f2c26",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588722769,
			"name": "Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "d106ac77-dea3-6b7c-5488-a002641d1e7b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\" &&\n    data.points_awarded == 5000 && data.points_next_redemption == 5000) {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405396116,
			"name": "TC0027 - Update User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}"
		},
		{
			"id": "d2637d02-7cbd-699a-9e7d-64c3c964fcb0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404826804,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": []
		},
		{
			"id": "d278850d-f37d-f250-415c-8032d3778a66",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589899772,
			"name": "TC0015 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "9b6ac4c5-9567-9264-6812-cc02517d69d6"
		},
		{
			"id": "d27afbfa-db53-34fc-e89f-7ce588655bc2",
			"headers": "",
			"url": "https://az1.qualtrics.com/API/v1/contacts/{{g_contact_id}}/incentivePoints/",
			"preRequestScript": "function generateUUID(){\n    var d = new Date().getTime();\n    var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        var r = (d + Math.random()*16)%16 | 0;\n        d = Math.floor(d/16);\n        return (c=='x' ? r : (r&0x3|0x8)).toString(16);\n    });\n    return uuid;\n};\npostman.setGlobalVariable(\"request_guid\", generateUUID());",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "apiToken",
					"value": "mDBoA2YfT34g0fMfTOyRKVxNtu7IRgloBvtCYcwy",
					"type": "text",
					"enabled": true
				},
				{
					"key": "points",
					"value": "{{g_survey_points}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "requestId",
					"value": "{{request_guid}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.meta && data.meta.status == \"Success\") {\n  tests[\"Contact incentive points added\"] = true;\n}\nelse {\n  tests[\"Contact incentive points added\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439342438078,
			"name": "TC0028 - TA Add Incentive Points",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "d2e4061b-3b9f-1a00-3c67-2569d9bc0112",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device Token Test\"] = true;\n}\nelse {\n tests[\"Missing Device Token Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032468134,
			"name": "TC0020 - Save User Device - Missing Device Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\"\n}",
			"folder": "95e3bc6e-3480-c2d7-90d3-224479106e4d"
		},
		{
			"id": "d4046ad5-5fda-e910-9f3e-a0c24b2b3ab4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236219141,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "d501f9fb-4673-fc30-9001-6bcf14905389",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595205372,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5"
		},
		{
			"id": "d5f38e6d-3bb2-79ab-19e6-264d8a3631bd",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "bfd49c0d-d05c-da76-5c06-6aae84159c5f"
		},
		{
			"id": "d665c5c8-e6eb-b163-8a11-2a1b9f96a209",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_OR_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589156942,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "d84b854a-bd4d-89c1-2b02-2cc25331315e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595023918,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "14510946-25ab-f407-cf5e-118664a14800"
		},
		{
			"id": "d9caedc2-7146-117d-d0e0-050f7fe9ad82",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595169640,
			"name": "TC0028 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e"
		},
		{
			"id": "daee5ef7-945d-4816-2645-637b6b61c50c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0028 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b934ec72-f7ef-23be-93da-2d81fc1bc21e",
			"isFromCollection": true
		},
		{
			"id": "dbc6b176-c12a-acde-3088-39ffb2ec795c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589899772,
			"name": "TC0017 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "79c7fa8b-cb3a-73d9-5527-60a1a29b5b2f"
		},
		{
			"id": "dc7d050e-3cad-61ba-ea9d-d858465b589f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032275182,
			"name": "Save User Device",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "dd464bc7-3662-3ef5-1a3c-bf1a4063f11d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0014 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "dd909abb-db4e-ba15-ef5b-ee4b2813abb9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439404744574,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": []
		},
		{
			"id": "ddc0cc91-c94f-5239-21e0-e4df5b23fa01",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234818342,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "dea76108-1eb1-b0c0-7af1-ea2e55960ae1",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "dee9acfc-799b-d231-d882-cdaf76c24bf2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0024 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "e0d6518b-4995-7275-4084-f035c685ed3b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "Abc123!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728720255,
			"name": "TC0022 - Login User with Old Password",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1"
		},
		{
			"id": "e2059951-44fc-b676-bdae-46f6f5e3cd0f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Janet\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236145832,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "e3948453-cc46-0e7b-130d-c1921df92c3f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595254911,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "e51b001d-397e-282c-5ab9-9c8b5eafb443",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0025 - Create New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "8c2c5637-3c32-a134-8ce7-e19b795dd207"
		},
		{
			"id": "e6607e6b-d35b-d5e1-a6d3-9b814553a672",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0026 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4a65cf2e-ae3b-3859-bc2d-38d623b9ff21",
			"isFromCollection": true
		},
		{
			"id": "e86daed8-70c1-6908-7075-6d2bc96aa594",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_NOT_REGISTERED\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372407099,
			"name": "TC0023 - Reset Password - Email Not Registered",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email@.test.com\",\n    \"password\": \"Abc123!?\"\n}",
			"folder": "1e61a9e1-8d09-3e9a-28f9-c23788e732b0"
		},
		{
			"id": "e90a1176-04d1-3c9c-b45b-71c638b227c9",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236664570,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"M\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "ea5d4f5b-3b94-276d-cf3a-f1c4b33a216f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0024 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"isFromCollection": true
		},
		{
			"id": "eb072c86-063d-6876-286b-bcb72bc0806b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601902635,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0cf193e9-47ad-4307-caba-0a5cd34e225d"
		},
		{
			"id": "ec5366f2-a900-ba52-a9ba-fd2e8c759ded",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "62715541-8303-34be-c1af-21b4e8a10473"
		},
		{
			"id": "edcbdf34-61c3-9132-2a61-e3a09a68074f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588869424,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be"
		},
		{
			"id": "ee38bd26-ebdd-faff-d475-8d53a61d7557",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439405898710,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"{{g_new_password}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "ee508619-b64e-ce68-52d7-9b2b854405e8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236226357,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "ee91459e-5f86-c2bb-e8a1-30c0b280c069",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601868169,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "eea89114-1040-a36a-3804-56ad9bbf3dea",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0baff301-b3a4-4b52-faa8-b8e828a5c7c5",
			"isFromCollection": true
		},
		{
			"id": "ef647a9b-5276-d46f-b861-fa1f260b9f8a",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_RESET_REJECTED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438731216718,
			"name": "TC0024 - Follow Reset Password Link 1",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "f1603949-d5c6-0ed6-1ec4-d44d4f8cb090",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "d8e09a6a-9136-53af-f725-66ebbef8fae0",
			"isFromCollection": true,
			"collectionRequestId": "f1603949-d5c6-0ed6-1ec4-d44d4f8cb090"
		},
		{
			"id": "f19a1a25-9c5e-eb95-230a-0b1c77ac76f6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0023 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4edaa126-b805-9c7b-117a-09792ccd50b1",
			"isFromCollection": true
		},
		{
			"id": "f1f23eae-c554-d356-893d-e05a286d6a8f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236201773,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "f21362fa-2605-cf61-ac23-c217df3dcf9b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438885922776,
			"name": "TC0024 - Reset Password 1",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New1Abc123456!?\"\n}",
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630"
		},
		{
			"id": "f269eaa4-ed28-17bd-2275-d2cef1fea922",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439236298780,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "f581e603-ead4-1e5f-476d-873190b48a89",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0026 - Get App Access Token",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "4a65cf2e-ae3b-3859-bc2d-38d623b9ff21",
			"isFromCollection": true
		},
		{
			"id": "f597ea3b-0aea-ecfd-05b6-796755d4fa7e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1995\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1439234875607,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1995\"\n}",
			"folder": "6c180bc4-c3f5-3482-51c5-0f1822cf9319"
		},
		{
			"id": "f99266ea-7935-af16-60cc-8fd3994b87cb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "fa35147b-b3b0-5b42-73cb-5c550a611515",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0027 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "b0012c9e-9050-eea6-1707-10aaab6274b1",
			"isFromCollection": true
		},
		{
			"id": "fe00523f-d6f3-e50a-616e-30474350d9a8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email2\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token2\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438122944798,
			"name": "TC0021 - Create 2nd New User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email2}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "94643950-a933-b5ae-d350-de5ba73c80f4"
		},
		{
			"id": "fe36443b-b94a-ec91-7f47-5b97c7e6e206",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "Delete Facebook Test User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "f358aa05-af18-fb16-179f-e5667c535cc6"
		},
		{
			"id": "fe8f9b06-869c-a9ae-a1cc-7c561d775557",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "2c53fb55-48b7-8dc7-6983-4f4bb14105be",
			"isFromCollection": true,
			"collectionRequestId": "fe8f9b06-869c-a9ae-a1cc-7c561d775557"
		},
		{
			"id": "feaa22e2-0f2c-9681-f59a-cd93cabb76e8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email 2",
			"description": "",
			"collectionId": "bfbce8f7-d8e1-f6c5-2250-e244daa8226f",
			"responses": [],
			"folder": "0d4affbe-db4b-0295-165b-7dd0f5864630",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		}
	]
}