{
	"id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
	"owner": "67292",
	"name": "Bizrate Rewards API (V 0.9.5)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "241b1ce1-f89d-c967-f8a7-b92a50747cc9",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"5d0c5f73-8f03-5f8c-7d80-074939e58067",
				"1c016bc3-a77e-89c9-5872-52e40e4d49e4",
				"418b52bc-06d0-e423-9ae9-84e1c94c6b36",
				"eadbd971-952a-cfde-2e6d-fa061f591307",
				"7e179d00-98b0-e6d1-7dcf-e8722f984343",
				"7a0b79f2-b38f-62fe-2e8a-d6886b3dfd3b",
				"37801f5d-f73b-65fa-7170-7a2e32f91e9b",
				"465f3f8a-1ca8-51ab-e15c-13ff8f92a23c",
				"cd192a57-33cf-e898-8f90-4fdde6751a3e",
				"2082856b-9eeb-afae-3c7c-159d481a1d1e"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95"
		},
		{
			"id": "aa806554-b100-29e0-6ef2-e38125f3ff01",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"db6fc506-88f2-3a30-464d-531857a76a9e",
				"de0ba2df-32e8-7c7f-4693-a76afef6ffc2"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "e2de758b-c224-63ce-6bed-494b1deb3124",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"3f73b828-22a4-ed22-3a23-ce471c8077c0"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "fdb3026e-6510-cd8b-6f87-0e8e33b32ceb",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"45475b24-1487-d515-52ab-8219d37ceb12"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "9d338a45-72e5-2270-8bbc-7c41505fa501",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"ae7a9a80-9300-5481-bddf-a711a38a2f42"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "428a80b1-c45c-aaef-02b7-63a9095d8f61",
			"name": "TC0005 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"9eb4a0fe-cccd-3a60-8d98-775f6bc693eb",
				"3ddcf91c-c30c-5bb0-bb49-88972e688644",
				"18639673-1e1f-94b6-b27d-089f5f6dd135",
				"d4a03211-63cd-fddc-57fc-fc1fe78664f0"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "24418160-e139-8015-04fc-2f85ca857038",
			"name": "TC0006 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"6d32cc0b-ccc4-cc5a-a301-88a6482c3080",
				"45e2e59d-aaaf-705d-e4eb-bde3e88434f5",
				"27ea6338-fd0b-d805-75c3-27384a764d7e",
				"1cb79509-87c4-1738-6f6a-e1ef8d5809f8",
				"8404d7b3-c53b-1cb1-f051-70b25a99e2bf",
				"c0fe9f85-1e3e-1e87-1054-047e66a266d8"
			],
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "bfc7f061-0470-ca42-f594-353c8b58fe75",
			"name": "TC0007 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"64994a5a-aa59-9cb2-2f59-d95a0db2ca48",
				"875ad1ac-4524-c727-4fc7-e84cae9a6214"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"name": "TC0008 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"0eda4357-bd78-4c16-e994-ea86a9d6be79",
				"eea07171-e634-418d-f7eb-db02eb109d20",
				"96a0812b-6bea-7e15-08b6-a4e4345d1b53",
				"846b5334-1cc6-97f8-247a-323bc163385b",
				"90302146-97bf-7739-fa3d-550257b4febb",
				"64585052-0ad7-887b-49d5-1d127e0c7927",
				"0c954385-649c-f59b-0647-6014c25205aa",
				"4e4e0905-53b1-5e89-2be4-4dfae97f2405",
				"1be73b96-a621-7892-e870-a14b102c2748",
				"cabaffee-4409-f847-2b39-6ccc938ccc16",
				"24684383-de4e-ec16-b29c-a7fb00fdc8ed"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "67292",
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"f0c3ca52-9d78-b139-e7d0-ac213bf4aa33",
				"942a6344-67fb-6b29-5e39-2ff9ccea15be",
				"55fcff38-11b7-ecd9-201d-fb9fa1272dfb",
				"7e121f40-102f-d6cb-d1ad-a16d6485bb8f",
				"f80a80af-696f-cb19-37bf-65f209528948",
				"676114ad-4cc7-6d32-ac9b-aaa459f48dca",
				"af808ec4-2080-1e47-7573-f1bef3f386eb",
				"662fe585-1942-2581-6a61-45ffead67f35",
				"7a29f0c1-5a89-9f1a-9214-685d6e26d50a",
				"94d98457-d055-e6ee-8794-f920f10c1fb1",
				"bccbb584-4aa8-3620-164a-deb0d5c1dc31",
				"7d069622-f101-fdbb-6aa7-c39085377d6f"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "67292",
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "26534867-50cd-da01-08a8-e42a886dab9b",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"1fa2e8d8-2583-3059-2690-ff2dfdf149c1",
				"fc575853-eb16-1fc0-652d-d0126f91cf8c",
				"3ed28601-ebb6-3111-fc27-1041074d358f",
				"ff3eaf35-0cfe-3958-b763-ee5078d3de3a"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "67292",
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "4422c1d2-c6fa-10be-5c62-82b74e0cf51e",
			"name": "TC0011Test update user with only required fields",
			"description": "Create a new user with only required fields:\nfirstname, lastname, email and password.\nupdate gender and dob",
			"write": true,
			"order": [
				"95634d58-74e9-0765-eb90-99e8d27e107b",
				"cca10e29-83ea-ae71-fed8-c0cd2c32de87",
				"1f744a94-8c3f-9196-b909-1feb2be2afe4"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "67292",
			"collection_name": "Bizrate Rewards API (V 0.9.4)",
			"collection_owner": "67292",
			"collection_id": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		}
	],
	"timestamp": 1435331574838,
	"remoteLink": null,
	"public": false,
	"lastUpdatedBy": {
		"id": "67292",
		"username": "chandra123"
	},
	"lastRevision": 22387357,
	"team": null,
	"requests": [
		{
			"id": "0c954385-649c-f59b-0647-6014c25205aa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_ALPHA_NUMERIC\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436397328677,
			"name": "TC0008 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "0eda4357-bd78-4c16-e994-ea86a9d6be79",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648257369,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"isFromCollection": true
		},
		{
			"id": "18639673-1e1f-94b6-b27d-089f5f6dd135",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "TC0005 - Delete all Surveys taken copy copy",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "428a80b1-c45c-aaef-02b7-63a9095d8f61",
			"isFromCollection": true
		},
		{
			"id": "1be73b96-a621-7892-e870-a14b102c2748",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436326629417,
			"name": "TC0008 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "1c016bc3-a77e-89c9-5872-52e40e4d49e4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "1cb79509-87c4-1738-6f6a-e1ef8d5809f8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230578659,
			"name": "TC0006 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038"
		},
		{
			"id": "1f744a94-8c3f-9196-b909-1feb2be2afe4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437001982632,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"descriptionFormat": null,
			"folder": "4422c1d2-c6fa-10be-5c62-82b74e0cf51e",
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}"
		},
		{
			"id": "1fa2e8d8-2583-3059-2690-ff2dfdf149c1",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436387364370,
			"name": "TC0010 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "26534867-50cd-da01-08a8-e42a886dab9b",
			"isFromCollection": true
		},
		{
			"id": "2082856b-9eeb-afae-3c7c-159d481a1d1e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "24684383-de4e-ec16-b29c-a7fb00fdc8ed",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "/*\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_ALPHA_NUMERIC\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}\n*/",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436326705504,
			"name": "TC0008 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "27ea6338-fd0b-d805-75c3-27384a764d7e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "TC0006 - Delete all Surveys taken copy",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038",
			"isFromCollection": true
		},
		{
			"id": "37801f5d-f73b-65fa-7170-7a2e32f91e9b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648257369,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "3ddcf91c-c30c-5bb0-bb49-88972e688644",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435296102484,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "428a80b1-c45c-aaef-02b7-63a9095d8f61"
		},
		{
			"id": "3ed28601-ebb6-3111-fc27-1041074d358f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436583650683,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "26534867-50cd-da01-08a8-e42a886dab9b",
			"descriptionFormat": null
		},
		{
			"id": "3f73b828-22a4-ed22-3a23-ce471c8077c0",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "e2de758b-c224-63ce-6bed-494b1deb3124"
		},
		{
			"id": "418b52bc-06d0-e423-9ae9-84e1c94c6b36",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227426349,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "45475b24-1487-d515-52ab-8219d37ceb12",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658515448,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fdb3026e-6510-cd8b-6f87-0e8e33b32ceb"
		},
		{
			"id": "45e2e59d-aaaf-705d-e4eb-bde3e88434f5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435296102484,
			"name": "TC0006 - Get Logged In User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038"
		},
		{
			"id": "465f3f8a-1ca8-51ab-e15c-13ff8f92a23c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436228240328,
			"name": "Create New User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9",
			"descriptionFormat": null
		},
		{
			"id": "4e4e0905-53b1-5e89-2be4-4dfae97f2405",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_ALPHA_NUMERIC\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436397448594,
			"name": "TC0008 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "55fcff38-11b7-ecd9-201d-fb9fa1272dfb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "5d0c5f73-8f03-5f8c-7d80-074939e58067",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "64585052-0ad7-887b-49d5-1d127e0c7927",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436326645346,
			"name": "TC0008 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "64994a5a-aa59-9cb2-2f59-d95a0db2ca48",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "bfc7f061-0470-ca42-f594-353c8b58fe75",
			"isFromCollection": true
		},
		{
			"id": "662fe585-1942-2581-6a61-45ffead67f35",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436582289288,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"F\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "676114ad-4cc7-6d32-ac9b-aaa459f48dca",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436582304893,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "6d32cc0b-ccc4-cc5a-a301-88a6482c3080",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0006 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038",
			"isFromCollection": true
		},
		{
			"id": "7a0b79f2-b38f-62fe-2e8a-d6886b3dfd3b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "7a29f0c1-5a89-9f1a-9214-685d6e26d50a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "7d069622-f101-fdbb-6aa7-c39085377d6f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436582246233,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "7e121f40-102f-d6cb-d1ad-a16d6485bb8f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436582331786,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "7e179d00-98b0-e6d1-7dcf-e8722f984343",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436222977074,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "8404d7b3-c53b-1cb1-f051-70b25a99e2bf",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0006 - Submit Survey Completion",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038"
		},
		{
			"id": "846b5334-1cc6-97f8-247a-323bc163385b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436397284479,
			"name": "TC0008 - Create New User - Too Young",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "875ad1ac-4524-c727-4fc7-e84cae9a6214",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436228411407,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "bfc7f061-0470-ca42-f594-353c8b58fe75",
			"descriptionFormat": null
		},
		{
			"id": "90302146-97bf-7739-fa3d-550257b4febb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436326651939,
			"name": "TC0008 - Create New User - Existing User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{TEST_USER1_EMAIL}}\",\n    \"password\": \"{{TEST_USER1_PASSWORD}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "942a6344-67fb-6b29-5e39-2ff9ccea15be",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580544488,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"isFromCollection": true,
			"descriptionFormat": null
		},
		{
			"id": "94d98457-d055-e6ee-8794-f920f10c1fb1",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436582269052,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"descriptionFormat": null
		},
		{
			"id": "95634d58-74e9-0765-eb90-99e8d27e107b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648257369,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "4422c1d2-c6fa-10be-5c62-82b74e0cf51e",
			"isFromCollection": true
		},
		{
			"id": "96a0812b-6bea-7e15-08b6-a4e4345d1b53",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436318874028,
			"name": "TC0008 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "9eb4a0fe-cccd-3a60-8d98-775f6bc693eb",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0005 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "428a80b1-c45c-aaef-02b7-63a9095d8f61",
			"isFromCollection": true
		},
		{
			"id": "ae7a9a80-9300-5481-bddf-a711a38a2f42",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "9d338a45-72e5-2270-8bbc-7c41505fa501"
		},
		{
			"id": "af808ec4-2080-1e47-7573-f1bef3f386eb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "bccbb584-4aa8-3620-164a-deb0d5c1dc31",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "c0fe9f85-1e3e-1e87-1054-047e66a266d8",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0006 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "24418160-e139-8015-04fc-2f85ca857038"
		},
		{
			"id": "cabaffee-4409-f847-2b39-6ccc938ccc16",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4) {\n  tests[\"Empty Test\"] = true;\n}\nelse {\n  tests[\"Empty Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436326624268,
			"name": "TC0008 - Create New User - Empty ",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "cca10e29-83ea-ae71-fed8-c0cd2c32de87",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436818934440,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "4422c1d2-c6fa-10be-5c62-82b74e0cf51e",
			"descriptionFormat": null
		},
		{
			"id": "cd192a57-33cf-e898-8f90-4fdde6751a3e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9",
			"descriptionFormat": null
		},
		{
			"id": "d4a03211-63cd-fddc-57fc-fc1fe78664f0",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435297184458,
			"name": "TC0005 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "428a80b1-c45c-aaef-02b7-63a9095d8f61"
		},
		{
			"id": "db6fc506-88f2-3a30-464d-531857a76a9e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "aa806554-b100-29e0-6ef2-e38125f3ff01",
			"isFromCollection": true
		},
		{
			"id": "de0ba2df-32e8-7c7f-4693-a76afef6ffc2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434654433906,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "aa806554-b100-29e0-6ef2-e38125f3ff01"
		},
		{
			"id": "eadbd971-952a-cfde-2e6d-fa061f591307",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "241b1ce1-f89d-c967-f8a7-b92a50747cc9"
		},
		{
			"id": "eea07171-e634-418d-f7eb-db02eb109d20",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436320809974,
			"name": "TC0008 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7a9b569b-ba55-6659-8381-e396f2a185ca",
			"descriptionFormat": null
		},
		{
			"id": "f0c3ca52-9d78-b139-e7d0-ac213bf4aa33",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436387364370,
			"name": "TC0009 - Get User Access Token",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"isFromCollection": true
		},
		{
			"id": "f80a80af-696f-cb19-37bf-65f209528948",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"folder": "fb8c82f6-cee8-7bb7-6b8e-2d0d072d6fbb",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "fc575853-eb16-1fc0-652d-d0126f91cf8c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "26534867-50cd-da01-08a8-e42a886dab9b",
			"descriptionFormat": null
		},
		{
			"id": "ff3eaf35-0cfe-3958-b763-ee5078d3de3a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "7f86aa9e-a6f9-03ee-f234-4b6c330abf0c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "26534867-50cd-da01-08a8-e42a886dab9b",
			"descriptionFormat": null
		}
	]
}