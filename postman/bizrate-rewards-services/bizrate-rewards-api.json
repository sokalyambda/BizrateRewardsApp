{
	"id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
	"name": "Bizrate Rewards API (V 1.9.1)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "ee913f81-d110-4658-8354-79727f1daddf",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"dfe65e0e-7b9d-2556-b0f6-57f913adda8a",
				"6c971fd8-dcb0-fc62-7ad2-77ab4f44c824",
				"122e7b9b-839a-ca2d-518a-fceb05680845",
				"5bda1706-a1d9-e793-dfb0-7d5556107d5b",
				"c2c48afd-1c4b-d077-24ea-11e69efc3d34",
				"db7c38e2-797e-b7ca-5638-8ea02078eacd",
				"83adebf9-9f37-b48d-4e63-f236ecc496da",
				"49fe5298-21ab-5033-712d-056654f70d9e",
				"12a399bb-357a-80b7-6758-9b3964ec101c",
				"eb1e42d8-097f-e0f6-f050-6043f0e7c7bd",
				"ad42acc8-1d9a-03b5-1deb-1dffa5cd5456",
				"47f0c4d1-cb98-4175-5649-1b601afdce3e",
				"15bb92f4-e2d2-0aa9-0905-4115b7813155",
				"489c11e6-a8ce-e170-ac90-c3e5f9df8db6",
				"8c927e0a-0af8-a93d-693a-417be1cd2619",
				"7914b573-8ab9-6369-9348-1449d5e3ff1e",
				"6440a04a-3760-3759-2d7a-f5a6fdd6d988",
				"43644d69-0ba8-077c-227d-01c5aa23ad86",
				"1774e72f-36a5-d880-1608-e300900f3ee5",
				"9d5786a2-50e5-8570-0c61-fc64ce5fec41",
				"c954beb5-a729-3e15-9903-a25ea27ce5f3"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "d2cafea1-a92b-b887-628c-d2ec4484c2bf",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"f2281aea-cf2b-cde1-35ac-508cf2ecff90",
				"d6c7d5fe-a23a-cbcb-3fdb-8a2b320ba8bd"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "faeb488d-ff9e-1dd9-6f91-9e845369b8ba",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"cc08ecbd-9f57-8283-1220-ada8932c74ae"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "52de8236-ce00-a7d2-c0e8-81dbe32cc8a1",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"9f8cf24e-9d68-5559-2d8c-f1a3729122c8"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "79adcd88-a1e9-80a9-ab29-e50368605841",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"130de804-cef5-2b1a-da1c-6be3a98bf968"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "cea5012d-0830-a4f3-54aa-0a6d6021570c",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"53791493-2021-d9d7-6d38-79fefd300c2f",
				"13758ee5-09c0-d7d0-9e0e-f963660578c2",
				"d42ae71f-03b0-f536-2237-011811ba7a39",
				"6002e9e4-f261-ec06-5142-374b5a95b93c"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "c99ad41e-905a-dd07-0ab8-27df1ec5219e",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"64db70d8-a88f-a67d-e615-c8d33bf63ef4",
				"7dc8bc3c-6c62-91e5-6c37-b1c55e6b04e2",
				"79be44c8-5f6e-2830-7ee1-15bce1b01f9a",
				"4358048a-c1d3-fbe9-2970-b36e38aa0669",
				"1338c117-472b-8b99-e552-1ba3b12129c8",
				"2a691425-d191-b7d8-4877-dfb6f8236e95",
				"29897a69-5a8b-0b67-292b-759d82c948b9",
				"76932a6a-562b-d425-5d9a-8e89ce9e231a",
				"f25da537-4a4f-b566-ea45-b98d89098aea",
				"0d29fa08-a30e-28cd-c2f2-fb35a467135e",
				"6d237950-1e66-1534-5cb5-599bfc1bce40",
				"f6dd8bd0-374a-2443-f600-bdf9faababbd",
				"1d7e3d26-b271-a360-a457-9454e14e4c52",
				"e6a4fc93-f89d-06f2-6c62-6005bdf7448c"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "ae5bd659-a035-8fbe-e3b7-0a2debfc5114",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"1f34d94b-e8cf-deb9-898a-12920c939e46",
				"0dbb4e8a-7f13-e1c5-039b-2cb741a0ff0d",
				"9f695190-97bb-6aca-488a-04ad644b9b83",
				"84989ccb-05b4-d67b-cc6b-52fb821746b6"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "8f84d906-0c0f-8427-7613-128573a200b4",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"c665fbbb-82ee-9b85-552b-8543ac3874b9",
				"33e801c4-6880-e77c-7c07-74b1ac2d6970",
				"89ad9d6c-5248-363f-9fb5-2cb20c6ceab4",
				"db83577a-2ed0-1571-296f-2d9832b69abf",
				"a302a46e-e81c-9144-4313-2c210ea2a1c0",
				"c6059eb8-b98a-a0f6-a0bf-785a7ee54582",
				"6d1d0fb9-7583-549d-69ca-c81347446e43"
			],
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "a528e761-1f1d-8c1e-7173-57f62eea3cbf",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"be2cee27-3313-65af-993f-2f0b62e39c7b",
				"e98085c2-c599-e28a-49a8-d483368d390d",
				"8cc56dc5-2f60-b973-2e72-54016b35a5e2",
				"46f6d5ca-2c51-6b9f-c483-5fe508760116",
				"0b6dd80f-f396-e9e4-1afb-7a337b56a492",
				"bfe12376-b57e-79e5-3054-dda14e790af7",
				"f2f85167-671a-7f91-92ab-ea92df15d98e",
				"8c63a064-6997-d502-2fe8-404ae8fa891b",
				"c37c1e3b-5522-e8ed-fb41-fc0219fb112f",
				"72ddd371-e027-34ed-c981-e9fdf0258e45",
				"864a0e38-9102-dec5-be8a-d89502712e24",
				"559b46ff-531f-44da-488a-fa3d482ac2e4",
				"8bb2d834-44c6-ec8f-d25d-130a242c9825",
				"ff16a0cb-df67-547e-ff9a-076a71dea36e",
				"29d299da-c32d-55a9-3a50-05f183996360"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "60fa1822-c54a-086f-2ff9-b550d592e29d",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"8e43b163-71ad-5723-2250-b659b9ae8eee",
				"7d81770e-1e8b-427b-3b41-4e38fc5df37a",
				"e3b9a334-96fe-820a-c5d6-a9ba0059aaf0",
				"cae4c584-2e89-ab35-1b93-3a44a8ceec8b",
				"339fada6-0f87-c5c8-b035-6b2f18acbf65",
				"c3f28223-b2f2-33c9-6799-67fdf936f5cf",
				"1c39b9e8-5973-148f-080e-4fac461fb13d",
				"b53b2443-18a6-054e-a24c-861dbb1c32ed",
				"58870974-e033-4a83-13f8-79106a5e89b2"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "be159e96-5cbf-3fb3-6a6e-e0caf0139801"
		},
		{
			"id": "8837cffa-dee5-9d9d-e4c8-294cc599c91a",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"eac3457a-7702-c1f9-8fbb-19b73e2d0c69",
				"86b56189-83ed-98ab-7fc5-eea6127a8e14",
				"0bca56d8-640e-e9e8-0d36-b18e22a6782d",
				"e2285672-8f34-d820-c525-0f5bb157019b"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"ed464f23-d451-7693-5f93-63c9f0a9ba11",
				"7531d92d-bf93-bee9-f2d2-f6c10fbb283d",
				"a8b537e5-d0d0-a8c0-3bf2-1c69fb9cccd8",
				"df41d407-426d-932b-10c0-dafd4b51bf0d",
				"0f395bb1-d03e-87dd-0840-30e188f357dc",
				"ffca26b9-7fdd-699d-72a3-f11847d97792"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "581f6323-4348-b436-45b6-e9c8371ddcc7",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"d4ab2ef8-3912-7ea8-6be3-9062f3ca2484",
				"346ed423-c776-3310-87c0-e28cc5801b53",
				"a6005b84-9863-a5b7-688e-ee9b055dfd9b",
				"be2cdd33-323b-f435-7a97-3a11bb089d69",
				"fe1b9763-6472-7ea2-d13e-ff7a5bfcb491",
				"ecdfe1ee-696e-9f6c-2569-f4faa9b6f399"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "56ab3c37-017a-0efd-9f1e-9703e1103e6b",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"b8783bd9-3ffe-039b-0035-95c4f2466747",
				"25449ef7-e262-3dd7-9aaa-020f26ff7c23",
				"3940459f-7412-dee3-f778-62e146c3d4fe",
				"0e1e6774-2fba-7a62-6f3d-9be19f484bd2",
				"14bb3f5d-adaa-2c7a-a833-4426da9a1ceb",
				"181ec093-f7cc-76a2-89c8-04934f12e6fe",
				"9a10cb9d-95d8-aad4-8851-e7cdcd969a39",
				"626241d9-bc4f-960f-c840-b4c8950724be",
				"ff697993-b56e-2ab6-501e-aca41c82fb5b",
				"41b76dc6-6128-cd63-6d44-c3b9cd8d166e"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "51e5df92-1343-d64c-e1f4-09cc3bd222ee",
			"name": "TC0015 - Test Create New Bizrate-Facebook User",
			"description": "",
			"write": true,
			"order": [
				"3cfabdd8-b396-62ae-2c2c-1e0eca2ba8be",
				"f9795bff-8634-fba7-f0ad-fd91dc841e7a",
				"fc8a4a5d-a770-a695-8016-3b484c2d19a5",
				"1f5e5004-8259-6e41-49ca-0f219a7b0703",
				"ba4e9613-e16b-4743-2ece-841f4c328dd5",
				"69a6cc33-ccfa-a799-1222-44b8dc0d2e7d"
			],
			"collection": "0a31db07-09cf-0d34-e70b-4c5bf0aafa0d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "409dba90-9ba6-78a7-ac94-c0c9fbd87bd9"
		},
		{
			"id": "26b9431a-fbd3-f91f-ca99-2847f03f8026",
			"name": "TC0016 - Test Create New Bizrate-Facebook User  Validations",
			"description": "",
			"write": true,
			"order": [
				"ee457b7e-c5b1-7a07-8f65-5cf8ea0378dd",
				"77d5e75b-6c11-54f4-5693-7c8910af2775"
			],
			"collection": "7cc73dc2-b7b0-1e9d-47ff-b1fe02f2a0f4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "b66c0da9-46ce-c446-8d8e-dd03f03b9827",
			"name": "TC0017 - Test Bizrate-Facebook Login",
			"description": "",
			"write": true,
			"order": [
				"d55786b3-0d9b-5fa9-545c-81d93873d723",
				"ecf222f8-17c0-be1f-31da-3bfa2f23e38a",
				"3fd9083a-767d-19f9-5f97-6407ff4e2308",
				"18062afc-66e4-99cb-b388-7ebfe1764792",
				"f79f1b39-8c9e-a761-985d-14024ec74903",
				"5d48f203-e8f3-ccfe-c93a-8b513a2aa060",
				"559ca2b5-7f53-946d-b7dd-97cbedcff2b4"
			],
			"collection": "c3567692-1479-029d-1318-c508deb005d4",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "4cd9851a-6250-42fe-5830-170ed447a6d9",
			"name": "TC0018 - Test Bizrate-Facebook Login - Validations",
			"description": "",
			"write": true,
			"order": [
				"d45dedcd-7682-b948-6d8a-004519c90a71",
				"608097e5-fcf2-05c5-9e3d-adcca1309270",
				"3c57d04d-9faf-b080-02ee-86d3a17856a7"
			],
			"collection": "be159e96-5cbf-3fb3-6a6e-e0caf0139801",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e",
			"name": "TC0019 - Test Save User Device",
			"description": "test the same user with 2 devices",
			"write": true,
			"order": [
				"a07fbc85-8b4d-1cf3-08bd-772d85bd45ff",
				"1ce95a86-9188-d157-e56b-0f91956cc0b0",
				"d1e378de-dd22-71dc-515e-c9b7cd046736",
				"561e50e8-4b61-fff0-addc-22f119630427",
				"14c237ee-21fa-04cf-b44b-fb8c8fc1d022",
				"f3bf1bf3-b779-f3ae-7b3d-e54023679f54"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "f28b6c39-5938-c3d6-c27f-82726e7e1207",
			"name": "TC0020 - Test Save User Device - Validations",
			"description": "test validations: negative test cases",
			"write": true,
			"order": [
				"484bb73c-37ab-dfe3-54da-4f44be9057ae",
				"363ba9b8-4bfb-768b-06a1-ffcb6d0c6987",
				"dbcb07a1-89a6-8b6d-dcb4-33b365a205d5",
				"37a3c035-2414-2d79-a9eb-517c1a072f6d",
				"7538c30f-0ab1-33b8-8c01-7ca8a6b4fba3",
				"efd137f9-64f8-41f6-b77b-8affa60cc765"
			],
			"collection": "40fc0cd7-6043-b252-25b7-6fb16e6ea5fe",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "518b128f-29e1-89c9-35e3-5f723dcf4334"
		},
		{
			"id": "c76823a5-a5c2-4f2a-ada6-171b7f60019b",
			"name": "TC0021 - Test Save User Device - Transfer Device",
			"description": "Test cases for validating user's device.\nInclude test case with 2 users share 1 device",
			"write": true,
			"order": [
				"17a85a3d-7ab8-23e3-9f4d-8af5df19d8f8",
				"f3c4785e-af74-3cf5-5f8b-207fcadb150a",
				"c17527d7-1d9b-2590-8c05-927bb95fc91e",
				"0486c214-ddd6-0b58-2cd8-57ef2f087da1",
				"d0484493-e277-ebff-5fdf-6cbf0e727ee7",
				"35fffa9e-f2be-8696-1b3c-40cf7a704df4",
				"ee43bb7b-7266-3f68-ce29-dd0f4f29766f",
				"55b96e82-1f71-86f5-03ec-5c8939f22b71",
				"2098a102-c3d3-02f5-7926-732472cc3b55"
			],
			"collection": "6f04cf03-e3d4-160b-b968-20c0c58272de",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"name": "TC0022 - Test Reset Password",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email\n- Follow the link to activate password\n- Use the access token to login \n- Use the old password to be denied access\n- Use the new password to confirm the password reset worked.",
			"write": true,
			"order": [
				"82b4a257-af57-4e0b-baf7-f59ad79b4a2b",
				"e3509a62-60a5-cf5f-2f68-07bd0e41e80f",
				"18b3c1e0-950b-4210-ebe1-f2da369014b0",
				"bfa6d84f-c0ab-c6fc-9d49-c21c3b4dbe7d",
				"fb043450-9f6f-ea16-c550-e8c65f5c6192",
				"d23fb749-f135-5532-89d8-6240dd6cc76f",
				"37dbe928-2e8d-cebb-0328-84101fbebbf9",
				"b06e2648-537a-44f4-6fcf-b7ea214ed61d",
				"fadea073-a86e-9f68-1d06-486f81ae60b1",
				"5c1307ef-dc07-7730-9328-4bfa29e88697",
				"e22f3ed9-9578-1ada-4ecb-649d3f23ceb8",
				"87d9df19-d81d-07d6-1d69-5b46642be596"
			],
			"collection": "1810e467-54e0-f716-46cd-be101e5adaf6",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861",
			"name": "TC0023 - Test Reset Password - Validations",
			"description": "",
			"write": true,
			"order": [
				"b01577dc-d8f9-71f7-bdd3-620469f18685",
				"dc1b05ec-4ff6-a155-a685-17887a400df9",
				"c602e005-d69f-eff3-c775-f449243d836b",
				"0e17733f-c2f2-0fb0-1342-56ad91a2f774",
				"aecfe072-cd13-8de9-e889-87e815a9aa02",
				"afcc5616-31d1-a57d-576a-b913d0366e1e"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "b7fc31ec-2e06-7850-9f09-ecf787e2704d"
		},
		{
			"id": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"name": "TC0024 - Test Reset Password with Multiple Requests",
			"description": "This Test case tests the happy path of a reset password scenario.\n\n- Reset password\n- Verify the reset password email\n- Find the link in the reset password email and save as link1\n- Reset password again\n- Verify the reset password email again\n- Find the link in the reset password email and save as link2\n- Follow the link to activate password in link1 and it should fail\n- Follow the link to activate password in link2 and it should succeed\n- Use the access token to login \n- Use the password used in first attempt to be denied access\n- Use the password used in second attempt and it should work.",
			"write": true,
			"order": [
				"a5bb6b35-bc5e-c1e2-4eee-339ba451cf00",
				"f06ba2d5-77aa-13d8-b7bc-603d3ac265d6",
				"6a04af60-b86a-69cb-29f6-68cfae7d448b",
				"ac24dc29-fef9-e18f-4b97-02f0f7ec1036",
				"38a01898-30e4-60bc-063b-e9f713d8d72e",
				"2c0ed6e0-a05e-d781-0b8c-79725e29cd07",
				"447c7c4d-89ed-3408-b162-126ca335a3d7",
				"5a0817cb-d3ff-d81d-04c8-f965c8b646d0",
				"309a2bcf-7a51-c0db-e1c0-b58e151fbf45",
				"eaf11eb4-a9fb-b44c-6f6b-5394803f6c10",
				"9ed19293-58db-386d-2548-c476b8f5ad52",
				"72b4c7a7-9350-634d-e19d-fac76993d428",
				"fa0e7110-39ab-a895-3de3-d7eb1a006767",
				"1291db7e-c93f-ef74-d335-80a6e56f1316",
				"b159b190-dcaa-7de5-f31b-fa3c30a96376"
			],
			"collection": "b7fc31ec-2e06-7850-9f09-ecf787e2704d",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"collectionId": "1810e467-54e0-f716-46cd-be101e5adaf6"
		},
		{
			"id": "7d3f2176-c729-d2d2-3906-5e942b4862f5",
			"name": "TC0025 - Test Get Featured Giftcards",
			"description": "",
			"write": true,
			"order": [
				"c4aa2a52-d157-c906-3e2b-afc8490a4ea8",
				"b1176a44-71f0-b25c-eae0-5d517f6c6214",
				"0e35b0f2-37e4-8ca6-e2b4-c809a83ce8d0",
				"0c9b0733-0d62-8e17-5b90-def771525a93"
			],
			"collection": "b3fdc6f9-c682-0e99-525b-491eb58c5e45",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.9.1)",
			"collection_owner": "66688",
			"collection_id": "e11e2b27-72b1-b9ed-d163-3db0db3b6652"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "0486c214-ddd6-0b58-2cd8-57ef2f087da1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email2\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token2\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438122944798,
			"name": "TC0021 - Create 2nd New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email2}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Janet\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "0b6dd80f-f396-e9e4-1afb-7a337b56a492",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582331786,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "0bca56d8-640e-e9e8-0d36-b18e22a6782d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "8837cffa-dee5-9d9d-e4c8-294cc599c91a"
		},
		{
			"id": "0c9b0733-0d62-8e17-5b90-def771525a93",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0025 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7d3f2176-c729-d2d2-3906-5e942b4862f5",
			"isFromCollection": true
		},
		{
			"id": "0d29fa08-a30e-28cd-c2f2-fb35a467135e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588875516,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "0dbb4e8a-7f13-e1c5-039b-2cb741a0ff0d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595153291,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "ae5bd659-a035-8fbe-e3b7-0a2debfc5114"
		},
		{
			"id": "0e17733f-c2f2-0fb0-1342-56ad91a2f774",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Email Test\"] = true;\n}\nelse {\n tests[\"Missing Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372366012,
			"name": "TC0023 - Reset Password - Missing Email",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"password\": \"Abc123456!?\"\n}",
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861"
		},
		{
			"id": "0e1e6774-2fba-7a62-6f3d-9be19f484bd2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "0e35b0f2-37e4-8ca6-e2b4-c809a83ce8d0",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}giftcards/featured",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 8) {\n  tests[\"Test get featured giftcards\"] = true;\n}\nelse {\n    tests[\"Test get featured giftcards\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438730368482,
			"name": "TC0025 - Get Featured Giftcards",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7d3f2176-c729-d2d2-3906-5e942b4862f5"
		},
		{
			"id": "0f395bb1-d03e-87dd-0840-30e188f357dc",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4"
		},
		{
			"id": "122e7b9b-839a-ca2d-518a-fceb05680845",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "1291db7e-c93f-ef74-d335-80a6e56f1316",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New2Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730314373,
			"name": "TC0024 - Login User with Password 2",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "12a399bb-357a-80b7-6758-9b3964ec101c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "130de804-cef5-2b1a-da1c-6be3a98bf968",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "79adcd88-a1e9-80a9-ab29-e50368605841"
		},
		{
			"id": "1338c117-472b-8b99-e552-1ba3b12129c8",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588845893,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{TEST_USER1_EMAIL}}\",\n    \"password\": \"{{TEST_USER1_PASSWORD}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "13758ee5-09c0-d7d0-9e0e-f963660578c2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588811320,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "cea5012d-0830-a4f3-54aa-0a6d6021570c"
		},
		{
			"id": "14bb3f5d-adaa-2c7a-a833-4426da9a1ceb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "14c237ee-21fa-04cf-b44b-fb8c8fc1d022",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438206048739,
			"name": "TC0019 - Get User Devices",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e"
		},
		{
			"id": "15bb92f4-e2d2-0aa9-0905-4115b7813155",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "1774e72f-36a5-d880-1608-e300900f3ee5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437684537023,
			"name": "Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "ee913f81-d110-4658-8354-79727f1daddf",
			"isFromCollection": true
		},
		{
			"id": "17a85a3d-7ab8-23e3-9f4d-8af5df19d8f8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0021 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "18062afc-66e4-99cb-b388-7ebfe1764792",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588934907,
			"name": "TC0017 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827"
		},
		{
			"id": "181ec093-f7cc-76a2-89c8-04934f12e6fe",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "18b3c1e0-950b-4210-ebe1-f2da369014b0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0022 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "1c39b9e8-5973-148f-080e-4fac461fb13d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "1ce95a86-9188-d157-e56b-0f91956cc0b0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0019 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e"
		},
		{
			"id": "1d7e3d26-b271-a360-a457-9454e14e4c52",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588899204,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "1f34d94b-e8cf-deb9-898a-12920c939e46",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595147291,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ae5bd659-a035-8fbe-e3b7-0a2debfc5114"
		},
		{
			"id": "1f5e5004-8259-6e41-49ca-0f219a7b0703",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588934907,
			"name": "TC0015 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee"
		},
		{
			"id": "2098a102-c3d3-02f5-7926-732472cc3b55",
			"headers": "Authorization: Bearer {{g_access_token2}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email2\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126629309,
			"name": "TC0021 - Delete 2nd User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "25449ef7-e262-3dd7-9aaa-020f26ff7c23",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595254911,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "29897a69-5a8b-0b67-292b-759d82c948b9",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588857620,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "29d299da-c32d-55a9-3a50-05f183996360",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf",
			"isFromCollection": true
		},
		{
			"id": "2a691425-d191-b7d8-4877-dfb6f8236e95",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588851510,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "2c0ed6e0-a05e-d781-0b8c-79725e29cd07",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link1\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730152060,
			"name": "TC0024 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "309a2bcf-7a51-c0db-e1c0-b58e151fbf45",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link2\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730207059,
			"name": "TC0024 - Verify Reset Password Email Contents 2",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "339fada6-0f87-c5c8-b035-6b2f18acbf65",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "33e801c4-6880-e77c-7c07-74b1ac2d6970",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595169640,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "346ed423-c776-3310-87c0-e28cc5801b53",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595240128,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7"
		},
		{
			"id": "35fffa9e-f2be-8696-1b3c-40cf7a704df4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198446741,
			"name": "TC0021 - Get User Devices",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "363ba9b8-4bfb-768b-06a1-ffcb6d0c6987",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0020 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207"
		},
		{
			"id": "37a3c035-2414-2d79-a9eb-517c1a072f6d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device UID Test\"] = true;\n}\nelse {\n tests[\"Missing Device UID Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032442495,
			"name": "TC0020 - Save User Device - Missing Device UID",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_token\": \"APNS_DEVICE_TOKEN\"\n}",
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207"
		},
		{
			"id": "37dbe928-2e8d-cebb-0328-84101fbebbf9",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729618776,
			"name": "TC0022 - Follow Reset Password Link",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0"
		},
		{
			"id": "38a01898-30e4-60bc-063b-e9f713d8d72e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "3940459f-7412-dee3-f778-62e146c3d4fe",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0012 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "3c57d04d-9faf-b080-02ee-86d3a17856a7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB access token test\"] = true;\n}\nelse {\n  tests[\"Invalid FB access token test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437695889495,
			"name": "TC0018 - Login with Bizrate-Facebook User - Invalid Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"invalid_fb_access_token1\"\n}",
			"folder": "4cd9851a-6250-42fe-5830-170ed447a6d9"
		},
		{
			"id": "3cfabdd8-b396-62ae-2c2c-1e0eca2ba8be",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "TC0015 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee",
			"isFromCollection": true
		},
		{
			"id": "3fd9083a-767d-19f9-5f97-6407ff4e2308",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0017 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827"
		},
		{
			"id": "41b76dc6-6128-cd63-6d44-c3b9cd8d166e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b",
			"isFromCollection": true
		},
		{
			"id": "4358048a-c1d3-fbe9-2970-b36e38aa0669",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588839342,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "43644d69-0ba8-077c-227d-01c5aa23ad86",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588722769,
			"name": "Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{fb_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"{{fb_user_access_token}}\"\n    }\n}",
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "447c7c4d-89ed-3408-b162-126ca335a3d7",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730173039,
			"name": "TC0024 - Reset Password 2",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New2Abc123456!?\"\n}",
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "46f6d5ca-2c51-6b9f-c483-5fe508760116",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "47f0c4d1-cb98-4175-5649-1b601afdce3e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "484bb73c-37ab-dfe3-54da-4f44be9057ae",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0020 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207"
		},
		{
			"id": "489c11e6-a8ce-e170-ac90-c3e5f9df8db6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032275182,
			"name": "Save User Device",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf",
			"isFromCollection": true,
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}"
		},
		{
			"id": "49fe5298-21ab-5033-712d-056654f70d9e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "53791493-2021-d9d7-6d38-79fefd300c2f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594876521,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "cea5012d-0830-a4f3-54aa-0a6d6021570c"
		},
		{
			"id": "559b46ff-531f-44da-488a-fa3d482ac2e4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916719896,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "559ca2b5-7f53-946d-b7dd-97cbedcff2b4",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516536928,
			"name": "TC0017 - Delete Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827",
			"isFromCollection": true
		},
		{
			"id": "55b96e82-1f71-86f5-03ec-5c8939f22b71",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0021 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b",
			"isFromCollection": true
		},
		{
			"id": "561e50e8-4b61-fff0-addc-22f119630427",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438032275182,
			"name": "TC0019 - Save User second device",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e"
		},
		{
			"id": "58870974-e033-4a83-13f8-79106a5e89b2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d",
			"isFromCollection": true
		},
		{
			"id": "5a0817cb-d3ff-d81d-04c8-f965c8b646d0",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0024 - Verify Reset Password Email 2",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "5bda1706-a1d9-e793-dfb0-7d5556107d5b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "5c1307ef-dc07-7730-9328-4bfa29e88697",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "NewAbc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728788941,
			"name": "TC0022 - Login User with New Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0"
		},
		{
			"id": "5d48f203-e8f3-ccfe-c93a-8b513a2aa060",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589899772,
			"name": "TC0017 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827"
		},
		{
			"id": "6002e9e4-f261-ec06-5142-374b5a95b93c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "cea5012d-0830-a4f3-54aa-0a6d6021570c",
			"isFromCollection": true
		},
		{
			"id": "608097e5-fcf2-05c5-9e3d-adcca1309270",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"ACCESS_TOKEN_REQUIRED\") {\n  tests[\"Empty FB login test\"] = true;\n}\nelse {\n  tests[\"Empty FB login test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437691833373,
			"name": "TC0018 - Login with Bizrate-Facebook User - Empty",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "4cd9851a-6250-42fe-5830-170ed447a6d9"
		},
		{
			"id": "626241d9-bc4f-960f-c840-b4c8950724be",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "6440a04a-3760-3759-2d7a-f5a6fdd6d988",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "Create New Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "64db70d8-a88f-a67d-e615-c8d33bf63ef4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589286351,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "69a6cc33-ccfa-a799-1222-44b8dc0d2e7d",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "TC0015 - Delete Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee",
			"isFromCollection": true
		},
		{
			"id": "6a04af60-b86a-69cb-29f6-68cfae7d448b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437588811320,
			"name": "TC0024 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "6c971fd8-dcb0-fc62-7ad2-77ab4f44c824",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588659148,
			"name": "Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "6d1d0fb9-7583-549d-69ca-c81347446e43",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4",
			"isFromCollection": true
		},
		{
			"id": "6d237950-1e66-1534-5cb5-599bfc1bce40",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588882333,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "72b4c7a7-9350-634d-e19d-fac76993d428",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0024 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "72ddd371-e027-34ed-c981-e9fdf0258e45",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "7531d92d-bf93-bee9-f2d2-f6c10fbb283d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595223607,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4"
		},
		{
			"id": "7538c30f-0ab1-33b8-8c01-7ca8a6b4fba3",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Device Token Test\"] = true;\n}\nelse {\n tests[\"Missing Device Token Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438032468134,
			"name": "TC0020 - Save User Device - Missing Device Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\"\n}",
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207"
		},
		{
			"id": "76932a6a-562b-d425-5d9a-8e89ce9e231a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588864021,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "77d5e75b-6c11-54f4-5693-7c8910af2775",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FACEBOOK_ACCESS_TOKEN_INVALID\") {\n  tests[\"Invalid FB Access Token Test\"] = true;\n}\nelse {\n  tests[\"Invalid FB Access Token Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437593820527,
			"name": "TC0016 - Create New Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true,\n    \"facebook\": {\n        \"access_token\": \"invalid_fb_access_token1\"\n    }\n}",
			"folder": "26b9431a-fbd3-f91f-ca99-2847f03f8026"
		},
		{
			"id": "7914b573-8ab9-6369-9348-1449d5e3ff1e",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516520957,
			"name": "Get Facebook App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "79be44c8-5f6e-2830-7ee1-15bce1b01f9a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Gender Validation\"] = true;\n}\nelse {\n  tests[\"Gender Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589113419,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "7d81770e-1e8b-427b-3b41-4e38fc5df37a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595023918,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "7dc8bc3c-6c62-91e5-6c37-b1c55e6b04e2",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588825223,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "82b4a257-af57-4e0b-baf7-f59ad79b4a2b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0022 - API Info",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "83adebf9-9f37-b48d-4e63-f236ecc496da",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601868169,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "84989ccb-05b4-d67b-cc6b-52fb821746b6",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ae5bd659-a035-8fbe-e3b7-0a2debfc5114"
		},
		{
			"id": "864a0e38-9102-dec5-be8a-d89502712e24",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582269052,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "86b56189-83ed-98ab-7fc5-eea6127a8e14",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588917203,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "8837cffa-dee5-9d9d-e4c8-294cc599c91a"
		},
		{
			"id": "87d9df19-d81d-07d6-1d69-5b46642be596",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0023 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"isFromCollection": true
		},
		{
			"id": "89ad9d6c-5248-363f-9fb5-2cb20c6ceab4",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "8bb2d834-44c6-ec8f-d25d-130a242c9825",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582246233,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "8c63a064-6997-d502-2fe8-404ae8fa891b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "8c927e0a-0af8-a93d-693a-417be1cd2619",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "8cc56dc5-2f60-b973-2e72-54016b35a5e2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "8e43b163-71ad-5723-2250-b659b9ae8eee",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437594912508,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "9a10cb9d-95d8-aad4-8851-e7cdcd969a39",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "9d5786a2-50e5-8570-0c61-fc64ce5fec41",
			"headers": "Authorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{fb_user_id}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.success == true) {\n  tests[\"Deleted FB test user\"] = true;\n}\nelse {\n  tests[\"Deleted FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516536928,
			"name": "Delete Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "9ed19293-58db-386d-2548-c476b8f5ad52",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link2}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\ntests[\"response is \" + responseBody]=true;\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_new_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730263719,
			"name": "TC0024 - Follow Reset Password Link 2",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "9f695190-97bb-6aca-488a-04ad644b9b83",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601889389,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ae5bd659-a035-8fbe-e3b7-0a2debfc5114"
		},
		{
			"id": "9f8cf24e-9d68-5559-2d8c-f1a3729122c8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658515448,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "52de8236-ce00-a7d2-c0e8-81dbe32cc8a1"
		},
		{
			"id": "a07fbc85-8b4d-1cf3-08bd-772d85bd45ff",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0019 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e"
		},
		{
			"id": "a302a46e-e81c-9144-4313-2c210ea2a1c0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "a5bb6b35-bc5e-c1e2-4eee-339ba451cf00",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}\n\npostman.setGlobalVariable(\"g_env\", data.env);",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438649090296,
			"name": "TC0024 - API Info",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "a6005b84-9863-a5b7-688e-ee9b055dfd9b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007520567,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7"
		},
		{
			"id": "a8b537e5-d0d0-a8c0-3bf2-1c69fb9cccd8",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073135571,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4"
		},
		{
			"id": "ac24dc29-fef9-e18f-4b97-02f0f7ec1036",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730135755,
			"name": "TC0024 - Reset Password 1",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"New1Abc123456!?\"\n}",
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "ad42acc8-1d9a-03b5-1deb-1dffa5cd5456",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "aecfe072-cd13-8de9-e889-87e815a9aa02",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_NOT_REGISTERED\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372407099,
			"name": "TC0023 - Reset Password - Email Not Registered",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email@.test.com\",\n    \"password\": \"Abc123!?\"\n}",
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861"
		},
		{
			"id": "afcc5616-31d1-a57d-576a-b913d0366e1e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors, \"EMAIL_INVALID_FORMAT\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors, \"PASSWORD_INVALID\", \"error_code\") != -1) {\n tests[\"Unregistered Email Test\"] = true;\n}\nelse {\n tests[\"Unregistered Email Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372500480,
			"name": "TC0023 - Reset Password - Invalid Email & Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"unregistered_email.test.com\",\n    \"password\": \"Abc\"\n}",
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861"
		},
		{
			"id": "b01577dc-d8f9-71f7-bdd3-620469f18685",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0023 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861",
			"isFromCollection": true
		},
		{
			"id": "b06e2648-537a-44f4-6fcf-b7ea214ed61d",
			"headers": "Authorization: Bearer {{g_new_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652239995,
			"name": "TC0022 - Get Logged In User with New Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "b1176a44-71f0-b25c-eae0-5d517f6c6214",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0025 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "7d3f2176-c729-d2d2-3906-5e942b4862f5"
		},
		{
			"id": "b159b190-dcaa-7de5-f31b-fa3c30a96376",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0024 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"isFromCollection": true
		},
		{
			"id": "b53b2443-18a6-054e-a24c-861dbb1c32ed",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "b8783bd9-3ffe-039b-0035-95c4f2466747",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595248909,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "ba4e9613-e16b-4743-2ece-841f4c328dd5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589899772,
			"name": "TC0015 - Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee"
		},
		{
			"id": "be2cdd33-323b-f435-7a97-3a11bb089d69",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007791106,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7"
		},
		{
			"id": "be2cee27-3313-65af-993f-2f0b62e39c7b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595182347,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "bfa6d84f-c0ab-c6fc-9d49-c21c3b4dbe7d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n  tests[\"Reset password test\"] = true;\n}\nelse {\n  tests[\"Reset password test\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728538110,
			"name": "TC0022 - Reset Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"NewAbc123456!?\"\n}"
		},
		{
			"id": "bfe12376-b57e-79e5-3054-dda14e790af7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "c17527d7-1d9b-2590-8c05-927bb95fc91e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n    postman.setEnvironmentVariable(\"g_device_id\", data.id);\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438196832548,
			"name": "TC0021 - Save User Device",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "c2c48afd-1c4b-d077-24ea-11e69efc3d34",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "c37c1e3b-5522-e8ed-fb41-fc0219fb112f",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582289288,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"F\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "c3f28223-b2f2-33c9-6799-67fdf936f5cf",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437693825016,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "c4aa2a52-d157-c906-3e2b-afc8490a4ea8",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595216594,
			"name": "TC0025 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7d3f2176-c729-d2d2-3906-5e942b4862f5"
		},
		{
			"id": "c602e005-d69f-eff3-c775-f449243d836b",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Missing Password Test\"] = true;\n}\nelse {\n tests[\"Missing Password Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372387059,
			"name": "TC0023 - Reset Password - Missing Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\"\n}",
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861"
		},
		{
			"id": "c6059eb8-b98a-a0f6-a0bf-785a7ee54582",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "c665fbbb-82ee-9b85-552b-8543ac3874b9",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595162450,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "c954beb5-a729-3e15-9903-a25ea27ce5f3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + environment[\"fb_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589888750,
			"name": "Delete Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "cae4c584-2e89-ab35-1b93-3a44a8ceec8b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "cc08ecbd-9f57-8283-1220-ada8932c74ae",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "faeb488d-ff9e-1dd9-6f91-9e845369b8ba"
		},
		{
			"id": "d0484493-e277-ebff-5fdf-6cbf0e727ee7",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id != environment[\"g_device_id\"] && data.name == \"iPhone 6\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438198112410,
			"name": "TC0021 - Save User Device - Duplicate Device UID",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa211\",\n    \"device_token\": \"APNS_DEVICE_TOKEN2\",\n    \"name\": \"iPhone 6\"\n}",
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "d1e378de-dd22-71dc-515e-c9b7cd046736",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.id && data.name == \"iPAD Air\") {\n    tests[\"Test save user device\"] = true;\n}\nelse {\n    tests[\"Test save user device\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438205980205,
			"name": "TC0019 - Save User Device",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"device_uid\": \"ae123ae2231cd1237eaa212\",\n    \"device_token\": \"APNS_DEVICE_TOKEN1\",\n    \"name\": \"iPAD Air\"\n}",
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e"
		},
		{
			"id": "d23fb749-f135-5532-89d8-6240dd6cc76f",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_messages}}",
			"preRequestScript": "var messages_url=\"\";\n\nmessage_id=globals[\"g_password_reset_message_id\"];\nif (globals[\"g_env\"] == \"stage\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n} else if (globals[\"g_env\"] == \"dev\") {\n   messages_url=\"http://localhost:1080/messages/\" + message_id + \".json\";\n} if (globals[\"g_env\"] == \"prod\") {\n   messages_url=\"https://api.mailinator.com/api/email?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&msgid=\" + message_id;\n}\n\npostman.setEnvironmentVariable(\"g_url_messages\", messages_url);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n   var response = JSON.parse(responseBody);\n   var data=response.data.parts[0].body;\n   html_source = data.substring(data.indexOf('RESET_VERIFICATION_LINK:'));\n} else if (globals[\"g_env\"] == \"dev\") {\n   var data = JSON.parse(responseBody);\n\n   html_source = data.source.substring(data.source.indexOf('RESET_VERIFICATION_LINK:'));\n}\n\nvar searchLink = /\\[([^\\]]+)\\]/g;\nvar matches = searchLink.exec(html_source);\nvar equalQuotedPrintable = /=3D/g;\nvar newLineQuotedPrintable = /=\\r\\n/g;\nvar link=matches[1].replace(equalQuotedPrintable,\"=\").replace(newLineQuotedPrintable,\"\");\n\ntests[link]=true\npostman.setEnvironmentVariable(\"g_password_reset_link\", link);\n\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438651505885,
			"name": "TC0022 - Verify Reset Password Email Contents",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"isFromCollection": true,
			"rawModeData": null,
			"descriptionFormat": null
		},
		{
			"id": "d42ae71f-03b0-f536-2237-011811ba7a39",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "cea5012d-0830-a4f3-54aa-0a6d6021570c"
		},
		{
			"id": "d45dedcd-7682-b948-6d8a-004519c90a71",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437589296168,
			"name": "TC0018 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "4cd9851a-6250-42fe-5830-170ed447a6d9"
		},
		{
			"id": "d4ab2ef8-3912-7ea8-6be3-9062f3ca2484",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595234011,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7"
		},
		{
			"id": "d55786b3-0d9b-5fa9-545c-81d93873d723",
			"headers": "",
			"url": "{{FB_BASE_URL}}oauth/access_token?client_id={{BRS_FB_CLIENT_ID}}&client_secret={{BRS_FB_CLIENT_SECRET}}&grant_type=client_credentials",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  tests[\"Body has access token\"] = true;\n  var fb_access_token = responseBody.substring(responseBody.indexOf(\"access_token=\") + 13);\n  postman.setEnvironmentVariable(\"fb_app_access_token\", fb_access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516520957,
			"name": "TC0017 - Get Facebook App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827",
			"isFromCollection": true
		},
		{
			"id": "d6c7d5fe-a23a-cbcb-3fdb-8a2b320ba8bd",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437163945635,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "d2cafea1-a92b-b887-628c-d2ec4484c2bf"
		},
		{
			"id": "db7c38e2-797e-b7ca-5638-8ea02078eacd",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "db83577a-2ed0-1571-296f-2d9832b69abf",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].ref_survey_id);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437601902635,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8f84d906-0c0f-8427-7613-128573a200b4"
		},
		{
			"id": "dbcb07a1-89a6-8b6d-dcb4-33b365a205d5",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_UID_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"DEVICE_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438030454158,
			"name": "TC0020 - Save User Device - Empty",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207"
		},
		{
			"id": "dc1b05ec-4ff6-a155-a685-17887a400df9",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/password/reset",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438372093977,
			"name": "TC0023 - Reset Password - Empty",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \n}",
			"folder": "c27e35b3-3a6c-b12e-c5d6-b6b262e96861"
		},
		{
			"id": "df41d407-426d-932b-10c0-dafd4b51bf0d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073140763,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4"
		},
		{
			"id": "dfe65e0e-7b9d-2556-b0f6-57f913adda8a",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588650405,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf"
		},
		{
			"id": "e2285672-8f34-d820-c525-0f5bb157019b",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8837cffa-dee5-9d9d-e4c8-294cc599c91a",
			"isFromCollection": true
		},
		{
			"id": "e22f3ed9-9578-1ada-4ecb-649d3f23ceb8",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_ALREADY_CONFIRMED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438729700250,
			"name": "TC0022 - Follow Reset Password Link Again",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0"
		},
		{
			"id": "e3509a62-60a5-cf5f-2f68-07bd0e41e80f",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0022 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "e3b9a334-96fe-820a-c5d6-a9ba0059aaf0",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "60fa1822-c54a-086f-2ff9-b550d592e29d"
		},
		{
			"id": "e6a4fc93-f89d-06f2-6c62-6005bdf7448c",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "e98085c2-c599-e28a-49a8-d483368d390d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595187960,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "eac3457a-7702-c1f9-8fbb-19b73e2d0c69",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595205372,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "8837cffa-dee5-9d9d-e4c8-294cc599c91a"
		},
		{
			"id": "eaf11eb4-a9fb-b44c-6f6b-5394803f6c10",
			"headers": "Content-Type: application/json\n",
			"url": "{{g_password_reset_link1}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_RESET_REJECTED\", \"error_code\") != -1) {\n tests[\"Reject Reset Password Oudated Link\"] = true;\n}\nelse {\n tests[\"Reject Reset Password Oudated Link\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438731216718,
			"name": "TC0024 - Follow Reset Password Link 1",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "eb1e42d8-097f-e0f6-f050-6043f0e7c7bd",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "ee913f81-d110-4658-8354-79727f1daddf",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "ecdfe1ee-696e-9f6c-2569-f4faa9b6f399",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7",
			"isFromCollection": true
		},
		{
			"id": "ecf222f8-17c0-be1f-31da-3bfa2f23e38a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437516530203,
			"name": "TC0017 - Create New Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827",
			"isFromCollection": true
		},
		{
			"id": "ed464f23-d451-7693-5f93-63c9f0a9ba11",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437595216594,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4"
		},
		{
			"id": "ee43bb7b-7266-3f68-ce29-dd0f4f29766f",
			"headers": "Authorization: Bearer {{g_access_token2}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/device",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 1) {\n  tests[\"Test get user devices\"] = true;\n}\nelse {\n    tests[\"Test get user devices\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438126749791,
			"name": "TC0021 - Get 2nd User Devices",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "ee457b7e-c5b1-7a07-8f65-5cf8ea0378dd",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0016 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "26b9431a-fbd3-f91f-ca99-2847f03f8026",
			"isFromCollection": true
		},
		{
			"id": "efd137f9-64f8-41f6-b77b-8affa60cc765",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0020 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "f28b6c39-5938-c3d6-c27f-82726e7e1207",
			"isFromCollection": true
		},
		{
			"id": "f06ba2d5-77aa-13d8-b7bc-603d3ac265d6",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437594876521,
			"name": "TC0024 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164",
			"rawModeData": null,
			"descriptionFormat": null,
			"isFromCollection": true
		},
		{
			"id": "f2281aea-cf2b-cde1-35ac-508cf2ecff90",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "d2cafea1-a92b-b887-628c-d2ec4484c2bf",
			"isFromCollection": true
		},
		{
			"id": "f25da537-4a4f-b566-ea45-b98d89098aea",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437588869424,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "f2f85167-671a-7f91-92ab-ea92df15d98e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582304893,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "f3bf1bf3-b779-f3ae-7b3d-e54023679f54",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437179190948,
			"name": "TC0019 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "41a43a5f-20e1-b6bd-3c41-dc34e6ebb78e",
			"isFromCollection": true
		},
		{
			"id": "f3c4785e-af74-3cf5-5f8b-207fcadb150a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437595223607,
			"name": "TC0021 - Create New User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c76823a5-a5c2-4f2a-ada6-171b7f60019b"
		},
		{
			"id": "f6dd8bd0-374a-2443-f600-bdf9faababbd",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_OR_TOKEN_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589156942,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "c99ad41e-905a-dd07-0ab8-27df1ec5219e"
		},
		{
			"id": "f79f1b39-8c9e-a761-985d-14024ec74903",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/facebook",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437684537023,
			"name": "TC0017 - Login with Bizrate-Facebook User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"access_token\": \"{{fb_user_access_token}}\"\n}",
			"folder": "b66c0da9-46ce-c446-8d8e-dd03f03b9827"
		},
		{
			"id": "f9795bff-8634-fba7-f0ad-fd91dc841e7a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{fb_app_access_token}}\n",
			"url": "{{FB_BASE_URL}}{{FB_VERSION}}/{{BRS_FB_CLIENT_ID}}/accounts/test-users?installed=true",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && \n    data.id &&\n    data.access_token &&\n    data.login_url &&\n    data.email &&\n    data.password) {\n  postman.setEnvironmentVariable(\"fb_user_id\", data.id);\n  postman.setEnvironmentVariable(\"fb_user_access_token\", data.access_token);\n  postman.setEnvironmentVariable(\"fb_login_url\", data.login_url);\n  postman.setEnvironmentVariable(\"fb_email\", data.email);\n  postman.setEnvironmentVariable(\"fb_password\", data.password);\n  tests[\"Created new FB test user\"] = true;\n}\nelse {\n  tests[\"Created new FB test user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437516530203,
			"name": "TC0015 - Create New Facebook Test User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee",
			"isFromCollection": true
		},
		{
			"id": "fa0e7110-39ab-a895-3de3-d7eb1a006767",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "New1Abc123456!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1438730299231,
			"name": "TC0024 - Login User with Password 1",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "7ae442af-a301-62c6-c1ec-f694a0f15164"
		},
		{
			"id": "fadea073-a86e-9f68-1d06-486f81ae60b1",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "Abc123!?",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438728720255,
			"name": "TC0022 - Login User with Old Password",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0"
		},
		{
			"id": "fb043450-9f6f-ea16-c550-e8c65f5c6192",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_app_access_token}}\n",
			"url": "{{g_url_mailbox}}",
			"preRequestScript": "var mailbox_url=\"\";\n\nemail=globals[\"g_new_email\"];\nif (globals[\"g_env\"] == \"stage\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n} else if (globals[\"g_env\"] == \"dev\") {\n   mailbox_url=\"http://localhost:1080/messages\";\n} if (globals[\"g_env\"] == \"prod\") {\n   mailbox_url=\"https://api.mailinator.com/api/inbox?token=5cca6e2d7d7f4e45b812b0ad93f81cd4&to=\" + email;\n}\n\npostman.setEnvironmentVariable(\"g_url_mailbox\", mailbox_url);\n\nfunction sleep(delay) {\n    var start = new Date().getTime();\n    while (new Date().getTime() < start + delay);\n}\n\n// Wait 5 seconds for the password email to reach mailinator\nsleep(1000 * 5);\n",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (globals[\"g_env\"] == \"stage\" || globals[\"g_env\"] == \"prod\") {\n  var data = JSON.parse(responseBody);\n  var totalMessages = data.messages.length;\n  var messages = data.messages;\n \n  var latestMessage = messages[totalMessages - 1];\n  var messageId = latestMessage.id;\n  postman.setGlobalVariable(\"g_password_reset_message_id\", messageId);\n  tests[\"Password Reset Message Id: \" + messageId] = true;\n} else if (globals[\"g_env\"] == \"dev\") {\n  var data = JSON.parse(responseBody);\n  var email_to_verify =  globals[\"g_new_email\"];\n  if (data) {\n\n     var found=false;\n     if (data.length > 0) {\n        for (i=0;i < data.length;i++) {\n          if ( data[i].recipients[0] == \"<\"+email_to_verify+\">\") {\n              found=true;\n              postman.setGlobalVariable(\"g_password_reset_message_id\", data[i].id);\n              tests[\"Password Reset Message Id: \" + data[i].id] = true;\n          }\n       }\n       tests[\"Reset Password Message Sent\"] = found;\n     }\n  }\n  else {\n     tests[\"Reset Password Message Sent\"] = false;\n  }\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1438652179446,
			"name": "TC0022 - Verify Reset Password Email",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "35a52b57-7824-8364-ee05-c84bd3b5ace0",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123456!?\"\n}",
			"descriptionFormat": null
		},
		{
			"id": "fc8a4a5d-a770-a695-8016-3b484c2d19a5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_app_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437589296168,
			"name": "TC0015 - Get App Access Token",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "51e5df92-1343-d64c-e1f4-09cc3bd222ee"
		},
		{
			"id": "fe1b9763-6472-7ea2-d13e-ff7a5bfcb491",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "581f6323-4348-b436-45b6-e9c8371ddcc7"
		},
		{
			"id": "ff16a0cb-df67-547e-ff9a-076a71dea36e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171570749,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "a528e761-1f1d-8c1e-7173-57f62eea3cbf"
		},
		{
			"id": "ff697993-b56e-2ab6-501e-aca41c82fb5b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "56ab3c37-017a-0efd-9f1e-9703e1103e6b"
		},
		{
			"id": "ffca26b9-7fdd-699d-72a3-f11847d97792",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "e11e2b27-72b1-b9ed-d163-3db0db3b6652",
			"responses": [],
			"folder": "bb88fbc3-b361-def1-e2e7-e6979d4e2af4",
			"isFromCollection": true
		}
	]
}