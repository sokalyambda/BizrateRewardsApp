{
	"id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
	"name": "Bizrate Rewards API (V 1.3.1)",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "9dccc449-78c7-8582-0b16-ec2f593e8d9e",
			"name": "APIs",
			"description": "",
			"write": true,
			"order": [
				"3e78ec02-060b-dba8-53d9-99ac26f9ff45",
				"15d2e0ca-d8cc-2d7f-8237-0a26e427b58c",
				"16bdae01-10af-3511-77e5-30ffe88ece7e",
				"51bf74d5-8803-636e-f2af-3c8c8eec0210",
				"64478c03-16e0-3ac5-24f1-d5b975a7728e",
				"b20a4bda-64a7-fea0-4470-4e2df82a338d",
				"2fc30f3b-ba7e-9a54-7b66-1449cf514062",
				"dae34455-d6be-4c70-b334-4d5f6a1f289b",
				"cb1665a9-1c7d-87ae-e89a-337f1a90d80b",
				"a176b6a8-989b-26da-77a8-64e0b92b6e3a",
				"a2cfaa0c-85f2-e8c4-c111-db573e7fd0ea",
				"42fcc639-d4eb-f582-446f-053d010a2fbd",
				"eab3daf8-2721-126c-7d2c-d5f9296dd5b4",
				"e006eabe-0f45-ae3b-038d-4485d0204099"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "26719184-a94b-6842-06ef-71613f9675a5",
			"name": "TC0001 - Test Valid User Login",
			"description": "This test case covers the simple user login test case. \n- Login using a known user email and password \n- verify the identity of the returned user using /user/me",
			"write": true,
			"order": [
				"6e1ebdb3-9335-f2f6-d233-86c1e6c2586e",
				"3007a6be-a6da-7b8b-45a1-132b11a2e4e2"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "bc646b55-905a-c033-afa0-6ba02f11fcea",
			"name": "TC0002 - Test Invalid Access Token",
			"description": "This test case verifies that sending an invalid \naccess token does not return any user information.",
			"write": true,
			"order": [
				"521bab1a-b7c2-306e-15d2-d98f9b7232d6"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "b57eb5b8-96fe-8722-8626-2d81f8564578",
			"name": "TC0003 - Test Invalid User Password",
			"description": "This test case verifies that sending an invalid user password \ndoes not log the user in.",
			"write": true,
			"order": [
				"86b8410c-6038-b9f5-ffbe-0accb20498b0"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "ede21638-1d82-3ff9-9b1c-5fa147da95fb",
			"name": "TC0004 - Test Invalid Client Secret",
			"description": "This test case verifies that using an invalid client secret \nto log a user in results in an error.",
			"write": true,
			"order": [
				"65ad0a2d-c94f-1cbe-8506-d47c59e018b5"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "279e6327-4fa8-4577-790c-5e443a859d15",
			"name": "TC0005 - Test Create New User",
			"description": "Test the creation of a new user.",
			"write": true,
			"order": [
				"b66ba449-bf8d-09c8-18a3-2abb852145ef",
				"74a68b8f-3189-e543-e26a-849e6e2e1040",
				"03fe2f6e-765d-5702-0f6c-4058ba0ed7b7",
				"edd19126-03c1-8add-19fe-c558e2f6fffe"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "4d1fc889-b615-3231-2926-20236c5cc05f",
			"name": "TC0006 - Test Create New User Validations",
			"description": "Test the creation of a new user API and the validation of input.",
			"write": true,
			"order": [
				"9974c3b9-d9b5-3f9e-c5c9-03de93ced794",
				"6a324e0d-34cd-d38f-0ff8-e6c4c49c6284",
				"dcee470e-98cc-8334-c261-2fc6e08e5e28",
				"b75bc6c6-bf85-dfd5-a036-d8c80203eaee",
				"99d0fbd8-7120-a109-c6fd-db032408e7b1",
				"f3e2cb5a-3fc4-362a-d397-43c80a26d2fa",
				"f1ccb8d3-5f2f-f30b-8ae9-a8fb6411d3cb",
				"88ec8f5a-5a57-c2d2-3b16-9d0d19d70f97",
				"228d9951-104f-c620-e63c-8c497cb53a5e",
				"a302b883-4722-0f5f-a864-b73291cf7358",
				"b1940c05-b901-c7bc-6dad-a549198ae2c5",
				"a458ef56-882a-3fe4-f16e-e2d784cd5c7e",
				"30bb420f-89da-e9d8-b0bc-991de9150f25",
				"28f5a231-2252-57db-ab8b-cfe52197f214"
			],
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "c0a1001a-5c2b-5c81-1ec9-49d1e6462a62",
			"name": "TC0007 - Test List of Eligible Surveys",
			"description": "Test case to test that the right number of eligible surveys \nare returned for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n",
			"write": true,
			"order": [
				"7b6e1d49-ad53-33b8-b8bf-aa4c277bc7b4",
				"55ac164b-2dcc-7bca-7965-e974293da670",
				"b7906857-d1e2-17d0-551e-cd7143f83d15",
				"4241793d-d870-c17a-b9f7-a75c44b11819"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "4176705d-c7f8-db79-9b01-1ccf259778cf",
			"name": "TC0008 - Test Completion of Survey",
			"description": "Test case to test that the survey completion is correctly\nrecorded for an user.\n\n- Login in as known user.\n- Remove all completed surveys thus far.\n- Get list of eligible surveys. (user should be eligible for \nall surveys).\n- Complete one of the surveys\n- Get list of eligible surveys (should be one less than what\nwas returned before)",
			"write": true,
			"order": [
				"56ada5c8-03c8-7d8c-3b32-3e065add8a06",
				"da7b8fda-a7c7-a915-932e-0048f76e6557",
				"9ec13732-8f29-c8cd-7d78-f0ceef0827af",
				"0130bf55-74d9-bfe1-18d3-91743eac1dec",
				"d3b43bb4-1996-12e1-a9b8-42416c9f388c",
				"c7edd591-a14e-de45-8c06-0bba0c728836",
				"d1bd06af-f2e6-44aa-3fdf-7eb647c61df0"
			],
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collection": "6b06c8db-4d8b-8afc-b59d-1db2a0736b95",
			"owner": "66688",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"name": "TC0009 - Test Upate User",
			"description": "This test case covers updating a user's details. Valid paratemeters to update:\n    -Firstname\n    -Lastname\n    -Gender\n    -Date of Birth",
			"write": true,
			"order": [
				"90df420e-5ddf-61fe-a8f7-3f17945e85bf",
				"a4915ef5-f88c-2e47-90e3-604563826858",
				"6bdde549-990a-bd60-c95a-54c5820bfa0c",
				"de08d2df-d2e7-0345-7fac-e4cec7a398fc",
				"8b525c79-f852-38ac-a639-1215b0c1bde7",
				"43a4ef19-a559-a405-05a3-2b2a0999019e",
				"e8881ae1-52a7-3527-977f-e13152bbec4e",
				"f8dc24b6-ceab-9993-6805-3a661872bd0d",
				"ec99a9bf-6b29-7051-8649-c844ca294ab6",
				"f4465b16-6aa8-dd3f-6869-cffc630109a6",
				"d04f4ff4-4c27-78c1-bde1-3de6b111cc55",
				"89162251-0a85-ec97-f5c6-002ad1aa9317",
				"06d15470-ea00-a33a-3f4c-2790714af4ae",
				"d60719cb-d21c-f720-298d-ac936498f8ca",
				"4f82e656-92d3-0808-cbd5-d5bb306dd7a3"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0",
			"name": "TC0010 - Test Upate User Validations",
			"description": "This test case covers User update validations.",
			"write": true,
			"order": [
				"b0775d93-97b6-0df2-53b9-93545d20ec48",
				"508eb205-f24f-e8eb-99a3-d61e5f280e18",
				"52c026d4-bddc-c736-916f-0e8063036147",
				"985e729e-9dcf-887a-2bd6-7f80d50fc985",
				"0fb9684c-9cfb-328b-e4ea-6673b664d327",
				"12344149-0860-eb36-d781-20239c542cef",
				"2f78635a-59bb-cbaf-77e1-40b7f99d4143",
				"24d8f425-1008-569b-9d03-611dd3a8fce7",
				"45d40806-29ca-3301-3bed-9bdebde00121"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "81746d40-951d-1e84-5dbe-4409cba884e7",
			"name": "TC0011 - Test Create & Update User",
			"description": "",
			"write": true,
			"order": [
				"4ea0ae39-881f-2740-82f3-c136ed3a0013",
				"fdf7e9df-bdb0-e1f7-d651-7af8e186ad68",
				"9744b217-f97f-1f90-3484-b16772b4b226",
				"a2f7aa09-b2b3-e9b1-0137-cfed262b61ae"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "c44c39bd-b337-1b84-1c06-b626b0094bfa"
		},
		{
			"id": "7d49efee-4ebb-385c-7531-d08fd7afc092",
			"name": "TC0012 - Test Log User Location Event",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"29f5443e-522f-3cf8-192c-e9ae03b0f5ea",
				"2d626ba0-0b3c-5964-c40f-71093dce019d",
				"0f7cd4dc-a2ca-695b-53e3-3a86e0a88849",
				"317f0bb4-4cf6-58ec-d294-0c0e3bf337bb",
				"c32c0a66-9186-2e70-bc29-1c64bebc6497",
				"db34926e-3b92-ad05-c689-f477cbc04fc1"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "e612fcb6-997f-f418-9c8a-42732a7bf522",
			"name": "TC0013 - Test Log User Location Event - New Location",
			"description": "Test cases for logging a user location event. Must contain the following parameters:\n    -location_id\n    -latitude\n    -longitude\n    -event_type",
			"write": true,
			"order": [
				"af25719c-a937-dee3-0617-253436059e62",
				"0b935123-7239-c0d0-d8cc-24b3f28f5d8a",
				"ff17f301-f69b-9b74-c7b0-186409e8b866",
				"b87ebe04-f079-9e44-db60-aeca9326ce6a",
				"0fe2d01f-ebb0-9ee1-0b85-7cdcd1b32f43",
				"96ef6ec9-b9e4-5672-8420-9d8804c92fb5"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		},
		{
			"id": "ac4bcdaa-0a72-e191-952d-a5649202765c",
			"name": "TC0014 - Test Log User Location Event Validations",
			"description": "",
			"write": true,
			"order": [
				"0636a93f-f4c7-c611-04a5-53642e3f3003",
				"a78f5d19-04d7-f7ff-4ae6-570e509f3645",
				"d100dfc5-3e25-0f76-f9cd-68569dad2b0a",
				"d5ee4394-bc73-7e01-9e46-48be612fb035",
				"8003e07f-53c9-3421-833b-93b1002829d2",
				"85d5021f-8824-580d-890a-b685f0d90574",
				"3b3c13ff-61de-c6e4-e8e4-a0af2544c76d",
				"e8f81622-0eb4-8f6f-ffbd-b8ab61d57a54",
				"348095cc-3419-61f4-dd2d-724807c96dcf",
				"475c0cdb-7bbc-9651-ded8-fa2a375aa97f"
			],
			"collection": "c44c39bd-b337-1b84-1c06-b626b0094bfa",
			"owner": "66688",
			"collection_name": "Bizrate Rewards API (V 1.3.1)",
			"collection_owner": "66688",
			"collection_id": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"collectionId": "56b78694-6373-5270-277c-f5f6fe90058a"
		}
	],
	"timestamp": 1435331574838,
	"owner": "66688",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "0130bf55-74d9-bfe1-18d3-91743eac1dec",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\npostman.setEnvironmentVariable(\"g_total_eligible_surveys\",0);\n    \nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    tests[\"Total Eligible Surveys is \"  + data.length] = true;\n    postman.setEnvironmentVariable(\"g_total_eligible_surveys\", data.length);\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230578659,
			"name": "TC0008 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf"
		},
		{
			"id": "03fe2f6e-765d-5702-0f6c-4058ba0ed7b7",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437164031049,
			"name": "TC0005 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "279e6327-4fa8-4577-790c-5e443a859d15"
		},
		{
			"id": "0636a93f-f4c7-c611-04a5-53642e3f3003",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0014 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c",
			"isFromCollection": true
		},
		{
			"id": "06d15470-ea00-a33a-3f4c-2790714af4ae",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582246233,
			"name": "TC0009 - Update User - Empty",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "0b935123-7239-c0d0-d8cc-24b3f28f5d8a",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0013 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "0f7cd4dc-a2ca-695b-53e3-3a86e0a88849",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073135571,
			"name": "TC0012 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092"
		},
		{
			"id": "0fb9684c-9cfb-328b-e4ea-6673b664d327",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583739568,
			"name": "TC0010 - Update User - Wrong Gender",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"X\"\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "0fe2d01f-ebb0-9ee1-0b85-7cdcd1b32f43",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0013 - Get User Location Events",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522"
		},
		{
			"id": "12344149-0860-eb36-d781-20239c542cef",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583650683,
			"name": "TC0010 - Update User - Too Young",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"{{g_bad_dob}}\"\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "15d2e0ca-d8cc-2d7f-8237-0a26e427b58c",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176153918,
			"name": "Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "16bdae01-10af-3511-77e5-30ffe88ece7e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}info",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.version) {\n  tests[\"API Version is \" + data.version] = true;\n}\nelse {\n  tests[\"Unable to get API version\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1435196167631,
			"name": "API Info",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "228d9951-104f-c620-e63c-8c497cb53a5e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176709199,
			"name": "TC0006 - Create New User - Missing Firstname ",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "24d8f425-1008-569b-9d03-611dd3a8fce7",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181458930,
			"name": "TC0010 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "28f5a231-2252-57db-ab8b-cfe52197f214",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0006 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "29f5443e-522f-3cf8-192c-e9ae03b0f5ea",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0012 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092",
			"isFromCollection": true
		},
		{
			"id": "2d626ba0-0b3c-5964-c40f-71093dce019d",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0012 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "2f78635a-59bb-cbaf-77e1-40b7f99d4143",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436583678536,
			"name": "TC0010 - Update User - Bad Dob Date",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"13/01/1980\"\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "2fc30f3b-ba7e-9a54-7b66-1449cf514062",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436222977074,
			"name": "Get List of Eligible Surveys",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "3007a6be-a6da-7b8b-45a1-132b11a2e4e2",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437163945635,
			"name": "TC0001 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "26719184-a94b-6842-06ef-71613f9675a5"
		},
		{
			"id": "30bb420f-89da-e9d8-b0bc-991de9150f25",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176567143,
			"name": "TC0006 - Create New User - Only Required Fields",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "317f0bb4-4cf6-58ec-d294-0c0e3bf337bb",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073140763,
			"name": "TC0012 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092"
		},
		{
			"id": "348095cc-3419-61f4-dd2d-724807c96dcf",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 2 && \n    arrayObjectIndexOf(data.errors,\"LATITUDE_REQUIRED\", \"error_code\") != -1 &&\n    arrayObjectIndexOf(data.errors,\"LONGITUDE_REQUIRED\", \"error_code\") != -1)\n\n {\n    tests[\"Missing latitude and longitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude and longitude test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437089647408,
			"name": "TC0014 - Log User Location Event - Missing_Longitude&latitude",
			"description": "Missing latitude and longitude",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "3b3c13ff-61de-c6e4-e8e4-a0af2544c76d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"REF_EYC_CUSTOMER_ID_REQUIRED\") {\n    tests[\"Missing Ref Eyc Customer Id test\"] = true;\n}\nelse {\n    tests[\"Missing Ref Eyc Customer Id test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436918805507,
			"name": "TC0014 - Log User Location Event - Ref Eyc Customer Id Missing",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "3e78ec02-060b-dba8-53d9-99ac26f9ff45",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648257369,
			"name": "Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "4241793d-d870-c17a-b9f7-a75c44b11819",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0007 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "c0a1001a-5c2b-5c81-1ec9-49d1e6462a62"
		},
		{
			"id": "42fcc639-d4eb-f582-446f-053d010a2fbd",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test get user location events\"] = true;\n  \n  if (data.length > 0) {\n      \n  }\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915555382,
			"name": "Get User Location Events",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "43a4ef19-a559-a405-05a3-2b2a0999019e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "45d40806-29ca-3301-3bed-9bdebde00121",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0010 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0",
			"isFromCollection": true
		},
		{
			"id": "475c0cdb-7bbc-9651-ded8-fa2a375aa97f",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0014 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c",
			"isFromCollection": true
		},
		{
			"id": "4ea0ae39-881f-2740-82f3-c136ed3a0013",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0011 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "81746d40-951d-1e84-5dbe-4409cba884e7",
			"isFromCollection": true
		},
		{
			"id": "4f82e656-92d3-0808-cbd5-d5bb306dd7a3",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0009 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"isFromCollection": true
		},
		{
			"id": "508eb205-f24f-e8eb-99a3-d61e5f280e18",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181439803,
			"name": "TC0010 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "51bf74d5-8803-636e-f2af-3c8c8eec0210",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{g_new_email}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{g_new_password}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176049226,
			"name": "Get User Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "521bab1a-b7c2-306e-15d2-d98f9b7232d6",
			"headers": "Authorization: Bearer INVALID_ACCESS_TOKEN\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658375630,
			"name": "TC0002 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "bc646b55-905a-c033-afa0-6ba02f11fcea"
		},
		{
			"id": "52c026d4-bddc-c736-916f-0e8063036147",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n    tests[\"Invalid firstname test\"] = true;\n}\nelse {\n    tests[\"Invalid firstname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671826451,
			"name": "TC0010 - Update User - Invalid Firstname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan!?\"\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "55ac164b-2dcc-7bca-7965-e974293da670",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0007 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "c0a1001a-5c2b-5c81-1ec9-49d1e6462a62"
		},
		{
			"id": "56ada5c8-03c8-7d8c-3b32-3e065add8a06",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0008 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf",
			"isFromCollection": true
		},
		{
			"id": "64478c03-16e0-3ac5-24f1-d5b975a7728e",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171448880,
			"name": "Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "65ad0a2d-c94f-1cbe-8506-d47c59e018b5",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "Invalid_secret",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 401\"] = responseCode.code === 401;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad client credentials\") {\n  tests[\"Test if error description is Bad Client Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Client Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658566536,
			"name": "TC0004 - Get User Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "ede21638-1d82-3ff9-9b1c-5fa147da95fb"
		},
		{
			"id": "6a324e0d-34cd-d38f-0ff8-e6c4c49c6284",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"PASSWORD_INVALID\") {\n  tests[\"Password Validation\"] = true;\n}\nelse {\n  tests[\"Password Validation\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437175893891,
			"name": "TC0006 - Create New User - Invalid Password",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"12345\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "6bdde549-990a-bd60-c95a-54c5820bfa0c",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "TC0009 - Update User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "6e1ebdb3-9335-f2f6-d233-86c1e6c2586e",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "{{TEST_USER1_PASSWORD}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648227979,
			"name": "TC0001 - Get User Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "26719184-a94b-6842-06ef-71613f9675a5",
			"isFromCollection": true
		},
		{
			"id": "74a68b8f-3189-e543-e26a-849e6e2e1040",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181000769,
			"name": "TC0005 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "279e6327-4fa8-4577-790c-5e443a859d15"
		},
		{
			"id": "7b6e1d49-ad53-33b8-b8bf-aa4c277bc7b4",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0007 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "c0a1001a-5c2b-5c81-1ec9-49d1e6462a62",
			"isFromCollection": true
		},
		{
			"id": "8003e07f-53c9-3421-833b-93b1002829d2",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LATITUDE_REQUIRED\") {\n    tests[\"Missing latitude test\"] = true;\n}\nelse {\n    tests[\"Missing latitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886284932,
			"name": "TC0014 - Log User Location Event - Latitude Missing",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "85d5021f-8824-580d-890a-b685f0d90574",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LONGITUDE_REQUIRED\") {\n    tests[\"Missing longitude test\"] = true;\n}\nelse {\n    tests[\"Missing longitude test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886339886,
			"name": "TC0014 - Log User Location Event - Longitude Missing",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "86b8410c-6038-b9f5-ffbe-0accb20498b0",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "username",
					"value": "{{TEST_USER1_EMAIL}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "password",
					"value": "invalid_password",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\nvar data = JSON.parse(responseBody);\n\nif (data.error_description == \"Bad credentials\") {\n  tests[\"Test if error description is Bad Credentials\"] = true;\n}\nelse {\n    tests[\"Test if error description is Bad Credentials\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434658515448,
			"name": "TC0003 - Get User Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "b57eb5b8-96fe-8722-8626-2d81f8564578"
		},
		{
			"id": "88ec8f5a-5a57-c2d2-3b16-9d0d19d70f97",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176705873,
			"name": "TC0006 - Create New User - Invalid Lastname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"Doe!?\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "89162251-0a85-ec97-f5c6-002ad1aa9317",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916719896,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "8b525c79-f852-38ac-a639-1215b0c1bde7",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582331786,
			"name": "TC0009 - Update User - Firstname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "90df420e-5ddf-61fe-a8f7-3f17945e85bf",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0009 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"isFromCollection": true
		},
		{
			"id": "96ef6ec9-b9e4-5672-8420-9d8804c92fb5",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0013 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522",
			"isFromCollection": true
		},
		{
			"id": "9744b217-f97f-1f90-3484-b16772b4b226",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Joneab\" &&\n    data.lastname && data.lastname == \"Doeab\"&&\n    data.gender && data.gender === \"F\" &&\n    data.dob && data.dob === \"01/01/1990\")\n    {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436916171255,
			"name": "TC0011 - Update User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Joneab\",\n    \"lastname\": \"Doeab\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "81746d40-951d-1e84-5dbe-4409cba884e7"
		},
		{
			"id": "985e729e-9dcf-887a-2bd6-7f80d50fc985",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n    tests[\"Invalid lastname test\"] = true;\n}\nelse {\n    tests[\"Invalid lastname test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436671866997,
			"name": "TC0010 - Update User - Invalid Lastname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut123!\"\n}",
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0"
		},
		{
			"id": "9974c3b9-d9b5-3f9e-c5c9-03de93ced794",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1434648257369,
			"name": "TC0006 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f",
			"isFromCollection": true
		},
		{
			"id": "99d0fbd8-7120-a109-c6fd-db032408e7b1",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_ALREADY_REGISTERED\") {\n  tests[\"Existing User Validation Test\"] = true;\n}\nelse {\n  tests[\"Existing User Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437175965144,
			"name": "TC0006 - Create New User - Existing User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{TEST_USER1_EMAIL}}\",\n    \"password\": \"{{TEST_USER1_PASSWORD}}\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/2000\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "9ec13732-8f29-c8cd-7d78-f0ceef0827af",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n  postman.setEnvironmentVariable(\"g_user_id\", data.user_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1437171448880,
			"name": "TC0008 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf"
		},
		{
			"id": "a176b6a8-989b-26da-77a8-64e0b92b6e3a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "a2cfaa0c-85f2-e8c4-c111-db573e7fd0ea",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437073153521,
			"name": "Log User Location Event",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1000\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "a2f7aa09-b2b3-e9b1-0137-cfed262b61ae",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0011 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "81746d40-951d-1e84-5dbe-4409cba884e7",
			"isFromCollection": true
		},
		{
			"id": "a302b883-4722-0f5f-a864-b73291cf7358",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"FIRSTNAME_INVALID\") {\n  tests[\"Missing Firstname Test\"] = true;\n}\nelse {\n  tests[\"Missing Firstname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176713573,
			"name": "TC0006 - Create New User - Invalid Firstname ",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane123!\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "a458ef56-882a-3fe4-f16e-e2d784cd5c7e",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 4 && \n   arrayObjectIndexOf(data.errors, \"EMAIL_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"FIRSTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"LASTNAME_REQUIRED\", \"error_code\") != -1 && \n   arrayObjectIndexOf(data.errors, \"PASSWORD_REQUIRED\", \"error_code\") != -1) {\n tests[\"Empty Test\"] = true;\n}\nelse {\n tests[\"Empty Test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437181274916,
			"name": "TC0006 - Create New User - Empty ",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "a4915ef5-f88c-2e47-90e3-604563826858",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0009 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "a78f5d19-04d7-f7ff-4ae6-570e509f3645",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0014 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "af25719c-a937-dee3-0617-253436059e62",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0013 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522",
			"isFromCollection": true
		},
		{
			"id": "b0775d93-97b6-0df2-53b9-93545d20ec48",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0010 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "d1c8fb33-1ba0-e3dc-1821-a2deb6074dd0",
			"isFromCollection": true
		},
		{
			"id": "b1940c05-b901-c7bc-6dad-a549198ae2c5",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Invalid DOB test\"] = true;\n}\nelse {\n  tests[\"Invalid DOB test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176582280,
			"name": "TC0006 - Create New User - Bad Dob Date",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Hello\",\n    \"lastname\" : \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"13/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "b20a4bda-64a7-fea0-4470-4e2df82a338d",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted All surveys taken\"] = true;\n}\nelse {\n    tests[\"Deleted All surveys taken\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436224335442,
			"name": "Delete all Surveys taken",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "b66ba449-bf8d-09c8-18a3-2abb852145ef",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}oauth/token",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [
				{
					"key": "grant_type",
					"value": "client_credentials",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_secret",
					"value": "{{BRS_CLIENT_SECRET}}",
					"type": "text",
					"enabled": true
				},
				{
					"key": "client_id",
					"value": "{{BRS_CLIENT_ID}}",
					"type": "text",
					"enabled": true
				}
			],
			"dataMode": "urlencoded",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1434648257369,
			"name": "TC0005 - Get App Access Token",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "279e6327-4fa8-4577-790c-5e443a859d15",
			"isFromCollection": true
		},
		{
			"id": "b75bc6c6-bf85-dfd5-a036-d8c80203eaee",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");\n\nvar m = new Date();\nm.setYear(m.getFullYear() - 13);\nm.setDate(m.getDate() + 2);\nm.setMonth(m.getMonth() + 1);\nvar too_young = m.getMonth()  + \"/\" + m.getDate() + \"/\" + m.getFullYear();\n\npostman.setGlobalVariable(\"g_bad_dob\", too_young);",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"DOB_INVALID\") {\n  tests[\"Minimum Age Test\"] = true;\n}\nelse {\n  tests[\"Minimum Age Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176680880,
			"name": "TC0006 - Create New User - Too Young",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"{{g_bad_dob}}\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "b7906857-d1e2-17d0-551e-cd7143f83d15",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  tests[\"Test list of eligible surveys\"] = true;\n  \n  if (data.length > 0) {\n    postman.setEnvironmentVariable(\"g_ref_survey_id\", data[0].refSurveyId);\n    postman.setEnvironmentVariable(\"g_url\", data[0].url);\n    \n    var decodedUrl = decodeURIComponent(data[0].url);\n    var hmac = decodedUrl.substring(decodedUrl.indexOf('HMAC=')+5);\n    postman.setEnvironmentVariable(\"g_hmac\", hmac);\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1435297184458,
			"name": "TC0007 - Get List of Eligible Surveys",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "c0a1001a-5c2b-5c81-1ec9-49d1e6462a62"
		},
		{
			"id": "b87ebe04-f079-9e44-db60-aeca9326ce6a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"EXIT\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007791106,
			"name": "TC0013 - Log User Location Event - EXIT",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"EXIT\"\n}",
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522"
		},
		{
			"id": "c32c0a66-9186-2e70-bc29-1c64bebc6497",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data && data.length == 2) {\n  tests[\"Test get user location events\"] = true;\n}\nelse {\n    tests[\"Test get user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007964295,
			"name": "TC0012 - Get User Location Events",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092"
		},
		{
			"id": "c7edd591-a14e-de45-8c06-0bba0c728836",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/survey/eligible",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data) {\n  if (data.length == postman.getEnvironmentVariable(\"g_total_eligible_surveys\") - 1) {\n     tests[\"Total Eligible Surveys now is \"  + data.length] = true;\n     tests[\"Test list of eligible surveys (verify)\"] = true;\n  }\n}\nelse {\n    tests[\"Test list of eligible surveys (verify)\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436230651181,
			"name": "TC0008 - Get List of Eligible Surveys and Verify",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf"
		},
		{
			"id": "cb1665a9-1c7d-87ae-e89a-337f1a90d80b",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jonathan\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580544488,
			"name": "Update User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"Jonathan\",\n    \"lastname\": \"Doenut\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "d04f4ff4-4c27-78c1-bde1-3de6b111cc55",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"01/01/1990\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582269052,
			"name": "TC0009 - Update User - DOB",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"dob\": \"01/01/1990\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "d100dfc5-3e25-0f76-f9cd-68569dad2b0a",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LOCATION_REQUIRED\") {\n    tests[\"Missing location test\"] = true;\n}\nelse {\n    tests[\"Missing location test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437015306425,
			"name": "TC0012 - Log User Location Event - Missing Location",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "d1bd06af-f2e6-44aa-3fdf-7eb647c61df0",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0008 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf",
			"isFromCollection": true
		},
		{
			"id": "d3b43bb4-1996-12e1-a9b8-42416c9f388c",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436229061247,
			"name": "TC0008 - Submit Survey Completion",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf"
		},
		{
			"id": "d5ee4394-bc73-7e01-9e46-48be612fb035",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EVENT_TYPE_INVALID_ENTRY\") {\n    tests[\"Invalid event type test\"] = true;\n}\nelse {\n    tests[\"Invalid event type test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436886054729,
			"name": "TC0014 - Log User Location Event - Invalid Event Type",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTER\"\n}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "d60719cb-d21c-f720-298d-ac936498f8ca",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"Jane\") {\n  tests[\"Test if user is valid\"] = true;\n  postman.setEnvironmentVariable(\"g_email\", data.email);\n  postman.setEnvironmentVariable(\"g_ref_contact_id\", data.ref_contact_id);\n}\nelse {\n    tests[\"Test if user is valid\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437171570749,
			"name": "TC0009 - Get Logged In User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "da7b8fda-a7c7-a915-932e-0048f76e6557",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179713086,
			"name": "TC0008 - Create New User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "4176705d-c7f8-db79-9b01-1ccf259778cf",
			"isFromCollection": true,
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc123!?\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"F\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}"
		},
		{
			"id": "dae34455-d6be-4c70-b334-4d5f6a1f289b",
			"headers": "",
			"url": "{{BRS_BASE_API_URL}}user/survey/finished?CID={{g_ref_contact_id}}&SID={{g_ref_survey_id}}&HMAC={{g_hmac}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 200) {\n  if (!responseBody) {\n    tests[\"Test submit survey completion\"] = true;\n  }\n}\nelse {\n  tests[\"Test submit survey completion\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436227417809,
			"name": "Submit Survey Completion",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "db34926e-3b92-ad05-c689-f477cbc04fc1",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0012 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "7d49efee-4ebb-385c-7531-d08fd7afc092",
			"isFromCollection": true
		},
		{
			"id": "dcee470e-98cc-8334-c261-2fc6e08e5e28",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "\ntests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"GENDER_INVALID_ENTRY\") {\n  tests[\"Wrong Gender Test\"] = true;\n}\nelse {\n  tests[\"Wrong Gender Test\"] = false;\n}\n\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176667887,
			"name": "TC0006 - Create New User - Wrong Gender",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"X\",\n    \"dob\": \"01/01/1990\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "de08d2df-d2e7-0345-7fac-e4cec7a398fc",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "e006eabe-0f45-ae3b-038d-4485d0204099",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179243078,
			"name": "Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "e8881ae1-52a7-3527-977f-e13152bbec4e",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doenut\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582304893,
			"name": "TC0009 - Update User - Lastname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"lastname\": \"Doenut\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "e8f81622-0eb4-8f6f-ffbd-b8ab61d57a54",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 5 &&\n   arrayObjectIndexOf(data.errors, \"LOCATION_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LATITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"LONGITUDE_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"REF_EYC_CUSTOMER_ID_REQUIRED\", \"error_code\") != -1  && \n   arrayObjectIndexOf(data.errors, \"EVENT_TYPE_REQUIRED\", \"error_code\") != -1) {\n   tests[\"Empty test\"] = true;\n}\nelse {\n   tests[\"Empty test\"] = false;\n}\n\nfunction arrayObjectIndexOf(myArray, searchTerm, property) {\n   for(var i = 0, len = myArray.length; i < len; i++) {\n       if (myArray[i][property] === searchTerm) return i;\n   }\n   return -1;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437088714273,
			"name": "TC0014 - Log User Location Event - Empty",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{}",
			"folder": "ac4bcdaa-0a72-e191-952d-a5649202765c"
		},
		{
			"id": "eab3daf8-2721-126c-7d2c-d5f9296dd5b4",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted all user location events\"] = true;\n}\nelse {\n    tests[\"Deleted all user location events\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436915561257,
			"name": "Delete User Location Events",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "9dccc449-78c7-8582-0b16-ec2f593e8d9e"
		},
		{
			"id": "ec99a9bf-6b29-7051-8649-c844ca294ab6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"F\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test user update\"] = true;\n}\nelse {\n    tests[\"Test user update\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436582289288,
			"name": "TC0009 - Update User - Gender",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"gender\": \"F\"\n}",
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8"
		},
		{
			"id": "edd19126-03c1-8add-19fe-c558e2f6fffe",
			"headers": "Authorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "DELETE",
			"data": [],
			"dataMode": "params",
			"version": 2,
			"tests": "if (responseCode.code === 204) {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = true;\n}\nelse {\n    tests[\"Deleted user: \" + globals[\"g_new_email\"]] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437179190948,
			"name": "TC0005 - Delete User",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "279e6327-4fa8-4577-790c-5e443a859d15",
			"isFromCollection": true
		},
		{
			"id": "f1ccb8d3-5f2f-f30b-8ae9-a8fb6411d3cb",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\npostman.setGlobalVariable(\"g_new_password\", \"Abc123!?\");",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"LASTNAME_INVALID\") {\n  tests[\"Missing Lastname Test\"] = true;\n}\nelse {\n  tests[\"Missing Lastname Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437176701107,
			"name": "TC0006 - Create New User - Missing Lastname",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\" : \"\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "f3e2cb5a-3fc4-362a-d397-43c80a26d2fa",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\nvar data = JSON.parse(responseBody);\n\nif (data.errors && data.errors.length == 1 && data.errors[0].error_code == \"EMAIL_INVALID_FORMAT\") {\n  tests[\"Invalid Email Validation Test\"] = true;\n}\nelse {\n  tests[\"Invalid Email Validation Test\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437175971183,
			"name": "TC0006 - Create New User - Invalid Email",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"hello@email\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Jane\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"01/01/1980\",\n    \"is_test_user\" : true\n}",
			"folder": "4d1fc889-b615-3231-2926-20236c5cc05f"
		},
		{
			"id": "f4465b16-6aa8-dd3f-6869-cffc630109a6",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "f8dc24b6-ceab-9993-6805-3a661872bd0d",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/me",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "PUT",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.firstname && data.firstname == \"John\" &&\n    data.lastname && data.lastname == \"Doe\" &&\n    data.gender && data.gender == \"M\" &&\n    data.dob && data.dob == \"03/01/1980\") {\n    tests[\"Test reset user\"] = true;\n}\nelse {\n    tests[\"Test reset user\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1436580610857,
			"name": "TC0009 - Reset User Data",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"folder": "8d49cc9a-2d0a-4e96-d4d8-9a6ea9d28eb8",
			"rawModeData": "{\n    \"firstname\": \"John\",\n    \"lastname\": \"Doe\",\n    \"gender\": \"M\",\n    \"dob\": \"03/01/1980\"\n}"
		},
		{
			"id": "fdf7e9df-bdb0-e1f7-d651-7af8e186ad68",
			"headers": "Content-Type: application/json\nAuthorization: Bearer {{g_access_token}}\n",
			"url": "{{BRS_BASE_API_URL}}user/create",
			"preRequestScript": "var random= Math.floor((Math.random() * 10000) + 1);\npostman.setGlobalVariable(\"g_new_email\", \"jane.doe\" + random + \"@mailinator.com\");\n",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.access_token) {\n  tests[\"Body has access token\"] = true;\n  postman.setEnvironmentVariable(\"g_access_token\", data.access_token);\n}\nelse {\n  tests[\"Body has token\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"time": 1436818934440,
			"name": "TC0011 - Create New User - Only Required Fields ",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"email\": \"{{g_new_email}}\",\n    \"password\": \"Abc12345!\",\n    \"firstname\": \"Janea\",\n    \"lastname\" : \"Doea\",\n    \"is_test_user\" : true\n}",
			"folder": "81746d40-951d-1e84-5dbe-4409cba884e7"
		},
		{
			"id": "ff17f301-f69b-9b74-c7b0-186409e8b866",
			"headers": "Authorization: Bearer {{g_access_token}}\nContent-Type: application/json\n",
			"url": "{{BRS_BASE_API_URL}}user/location/event",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "var data = JSON.parse(responseBody);\n\nif (data.lat == 40.68906 &&\n    data.long == -74.044636 &&\n    data.ref_eyc_customer_id == \"8928aef91229a12\" &&\n    data.event_type == \"ENTRY\")\n    {\n    tests[\"Test log user location event\"] = true;\n}\nelse {\n    tests[\"Test log user location event\"] = false;\n}",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1437007520567,
			"name": "TC0013 - Log User Location Event - ENTRY",
			"description": "",
			"collectionId": "c5265989-251b-6c3c-f3fd-227cfc68ee2c",
			"responses": [],
			"rawModeData": "{\n    \"location\": {\n                    \"id\": 1\n    },\n    \"lat\": 40.689060,\n    \"long\": -74.044636,\n    \"ref_eyc_customer_id\": \"8928aef91229a12\",\n    \"event_type\": \"ENTRY\"\n}",
			"folder": "e612fcb6-997f-f418-9c8a-42732a7bf522"
		}
	]
}